<?xml version="1.0" encoding="iso-8859-1"?>

<project name="TestService" default="build" basedir=".">
	<description>
        File di Script per la compilazione
    </description>

	<import file="local_env.xml" />
	<import file="${rootDir}/ant/commons/as-check.xml" />
	
	<!-- estensione di ant (if .... ) -->
	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="${libs}/ant/ant-contrib-1.0b3.jar"/>
		</classpath>
	</taskdef>
	
	<!-- set global properties for this build -->
	<property name="src" location="src" />
	<property name="build" location="build" />
	<property name="dist" location="dist" />
	<property name="debug" location="true" />
	

	<!-- Ripulisce la distribuzione -->
	<target name="clean">
		<delete dir="${build}" />
		<delete dir="${dist}" />
	</target>


	<!-- Create the build directory structure used by compile -->
	<target name="init_compile">
		<mkdir dir="${build}" />
		<mkdir dir="${dist}" />
	</target>


	<!-- Compilazione del Servizio -->
	<target name="compile" depends="init_compile" description="compila il servizio">
		<!-- Compile the java code  -->
		<javac destdir="${build}" debug="${debug}">
			<!--<compilerarg value="-Xlint:unchecked"/>
                        <compilerarg value="-Xlint:deprecation"/>-->
			<src path="${src}" />
			<classpath>
				<fileset dir="${libs}" includes="**/*.jar"/>
				<fileset dir="${openspcoop2_libs}" includes="*.jar"/>
			</classpath>
		</javac>
	</target>

	<!-- Check AS Version -->
	<if>
		<not>
			<istrue value="${_asVersionVerified}"/>
		</not>
		<then>
			<runtarget target="check_as_version" />
			<var name="_asVersionVerified" value="true"/>
		</then>
	</if>
	
	<!-- cxf -->
	<var name="cxf_jar" value="cxf-2.7.4.jar"/>
	<if>
		<matches string="${as}" pattern="jboss6"/>
		<then>
			<var name="cxf_jar" value=""/>
		</then>
	</if>
	<!-- log -->
	<var name="log4j_jar" value=""/>
	<if>
		<or>
			<matches string="${as}" pattern="tomcat.*"/>
		</or>
		<then>
			<var name="log4j_jar" value="log4j-1.2.16.jar"/>
		</then>
	</if>
	<!-- jaxp_ri -->
	<var name="jaxp_ri_jar" value=""/>
	<if>
		<or>
			<equals arg1="${as}" arg2="jboss7"/>
			<matches string="${as}" pattern="wildfly.*"/>
		</or>
		<then>
			<var name="jaxp_ri_jar" value="jaxp-ri-1.4.5.jar"/>
		</then>
	</if>
	<!-- neethi -->
	<var name="neethi_jar" value="" />
	<if>
		<or>
			<matches string="${as}" pattern="wildfly.*"/>
		</or>
		<then>
			<var name="neethi_jar" value="neethi-3.0.2.jar"/>
		</then>
	</if>
	

	<!-- Creazione del modulo .WAR -->
	<target name="build" depends="compile" description="Crea la struttura del modulo WAR">
		<war destfile="${dist}/TestService.war" webxml="${src}/WEB-INF/web.xml">
			<classes dir="${build}">
				<include name="**/*"/>
			</classes>
			<classes dir="deploy/properties">
				<include name="**/*.properties"/>
			</classes>
			<lib dir="${libs}/commons">
				<include name="commons-discovery-0.5.jar"/>
				<include name="commons-io-2.1.jar"/>
				<include name="commons-lang-2.6.jar"/>
			</lib>
			<lib dir="${libs}/cxf">
				<include name="${cxf_jar}"/>
				<include name="saaj-impl-1.3.19.jar"/>
			</lib>
			<lib dir="${required_lib}/jax">
				<include name="${jaxp_ri_jar}" />
			</lib>
			<lib dir="${openspcoop2_libs}/">
				<include name="openspcoop2_utils_*.jar"/>
				<include name="openspcoop2_core_*.jar"/>
				<include name="openspcoop2_message_*.jar"/>
			</lib>
			<lib dir="${libs}/log">
				<include name="${log4j_jar}"/>
			</lib>
			<lib dir="${required_lib}/security">
				<include name="${neethi_jar}" />
			</lib>
		</war>

	</target>

	<!-- alias -->
	<target name="war" depends="build" />



</project>
