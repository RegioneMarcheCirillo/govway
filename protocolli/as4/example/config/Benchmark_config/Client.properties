# Punto di accesso della porta di dominio
openspcoop2.portaDiDominio=http://localhost:8080/openspcoop2/as4/PD/

# Set verbosity level 
# - 4 and above prints response content 
# - 3 and above prints information on headers
# - 2 and above prints response codes (404, 200, etc.)
# - 1 and above prints warnings and info.
openspcoop2.verbosity=4

# Enable the HTTP KeepAlive feature, i.e., perform multiple requests within one HTTP session. 
openspcoop2.keepAlive=true

# Concurrency while performing the benchmarking session. 
openspcoop2.threads=1

# Number of requests to perform for the benchmarking session. 
openspcoop2.requests=1

# Durata del test in secondi
# NOTA: Questa opzione è in alternativa alla precedente opzione 'openspcoop2.requests'
#openspcoop2.durationInSeconds=30

# Client side socket timeout (in ms)
openspcoop2.socketTimeout=60000

# ChunkingMode
# NOTA: Se vengono utilizzati attachments e/o buste viene sempre generato l'header Content-Length
openspcoop2.useChunking=false

# Http1.0
openspcoop2.http10=false

# Header Custom
#openspcoop2.header.nomeHeader1=ValoreHeader1
#...
#openspcoop2.header.nomeHeaderN=ValoreHeaderN

# Accepted Return Code
#openspcoop2.acceptedReturnCode=200,202

# Random Time
#openspcoop2.randomTimeIntervalBeforeInvoke=false
#openspcoop2.randomTimeIntervalBeforeInvoke.minIntervalMS=300
#openspcoop2.randomTimeIntervalBeforeInvoke.maxIntervalMS=1000
#openspcoop2.randomTimeIntervalBeforeInvoke.sleepEveryMessage=false

# Autenticazioni BASIC
#openspcoop2.username = USERNAME
#openspcoop2.password = PASSWORD

# Default per REST, altrimenti il client va in errore
openspcoop2.soapAction = ""




# ---------------- Configurazione SOAP ---------------


# **** Azione 'test' e 'testCompress' ***

# Azione 'test' (invia il payload come text/xml):
# SoapAction
#openspcoop2.soapAction = "http://test"
# PortaDelegata
#openspcoop2.PD = Red/Blue/SoapExample/1/test

# Azione 'testCompress' (invia il payload come application/octect-stream):
# SoapAction
#openspcoop2.soapAction = "http://testCompress"
# PortaDelegata
#openspcoop2.PD = Red/Blue/SoapExample/1/testCompress


# ** Messaggio **

# soap11
#openspcoop2.contentType = text/xml; charset=utf-8
#file=fileToSend/request.xml

# soap12
#openspcoop2.contentType = application/soap+xml; charset=UTF-8
#file=fileToSend/request_soap12.xml

# con attachments
# Utilizza tutti i files presenti nella directory per inviarli come SOAP With Attachments
# NOTA: l'operazione supporta nel profilo un unico attachment opzionale, quindi può essere inviato o meno
# NOTA2: l'attachment DEVE essere un file xml, altrimenti la politica di sicurezza 'eDeliveryPolicy.xml' applicata va in errore:
#	Caused by: com.sun.org.apache.xerces.internal.impl.io.MalformedByteSequenceException: Invalid byte 1 of 1-byte UTF-8 sequence.
#	...
#	at org.apache.xml.security.signature.XMLSignatureInput.getNodeSet(XMLSignatureInput.java:198)
#	at org.apache.wss4j.dom.transform.AttachmentContentSignatureTransform.processAttachment(AttachmentContentSignatureTransform.java:202)
# Per risolvere il problema andrebbe capito come configurare correttamente la policy attiva su Domibus in 'conf/domibus/policies/eDeliveryPolicy.xml'
# e perche' va in errore sul tomcat di Domibus
#openspcoop2.attachmentDirectory=attachments




# **** Azione 'testXml' ***

# Azione 'testXml':
# SoapAction
#openspcoop2.soapAction = "http://testXml"
# PortaDelegata
#openspcoop2.PD = Red/Blue/SoapExample/1/testXml


# ** Messaggio **

# soap11
#openspcoop2.contentType = text/xml; charset=utf-8
#file=fileToSend/request.xml

# soap12
#openspcoop2.contentType = application/soap+xml; charset=UTF-8
#file=fileToSend/request_soap12.xml

# con attachments
# Utilizza tutti i files presenti nella directory per inviarli come SOAP With Attachments
# NOTA: l'operazione supporta nel profilo un unico attachment di tipo xml che deve essere obblitatoriamente presente
#openspcoop2.attachmentDirectory=attachments





# ---------------- Configurazione REST  ---------------



# **** Azione 'test' ***

# Azione 'test' (invia il payload come application/json)
# PortaDelegata (qualsiasi path tranne testCompress, testXml e testJson)
# Versione 1
#openspcoop2.PD = Red/Blue/RestExample/1/test
#openspcoop2.PD = Red/Blue/RestExample/1/
#openspcoop2.PD = Red/Blue/RestExample/1/qualsiasi/path
# Versione 2
#openspcoop2.PD = Red/Blue/RestExample/2/test
openspcoop2.PD = Red/Blue/RestExample/2/
#openspcoop2.PD = Red/Blue/RestExample/2/qualsiasi/path

# ** Messaggio **

# json
openspcoop2.contentType = text/json
file=fileToSend/request.json

# con attachments
# Utilizza tutti i files presenti nella directory per inviarli come attachments 
# NOTA: l'operazione supporta nel profilo un unico attachment opzionale, quindi può essere inviato o meno 
#openspcoop2.attachmentDirectory=attachments




# **** Azione 'testXml' ***

# Azione 'testXml' (invia il payload come text/xml)
# PortaDelegata
# Versione 1
#openspcoop2.PD = Red/Blue/RestExample/1/testXml
# Versione 2
#openspcoop2.PD = Red/Blue/RestExample/2/testXml

# ** Messaggio **

# json
#openspcoop2.contentType = text/xml
#file=fileToSend/requestBody_elementoUnico.xml

# con attachments
# Utilizza tutti i files presenti nella directory per inviarli come attachments 
# NOTA: l'operazione supporta nel profilo un unico attachment opzionale, quindi può essere inviato o meno 
#openspcoop2.attachmentDirectory=attachments




# **** Azione 'testCompress' ***

# Azione 'testCompress' (invia il payload come application/octect-stream)
# PortaDelegata
# Versione 1
#openspcoop2.PD = Red/Blue/RestExample/1/testCompress
# Versione 2
#openspcoop2.PD = Red/Blue/RestExample/2/testCompress

# ** Messaggio **

# json
#openspcoop2.contentType = text/json
#file=fileToSend/request.json

# xml (inviabile con testCompress)
#openspcoop2.contentType = text/xml
#file=fileToSend/requestBody_elementoUnico.xml

# binary
#openspcoop2.contentType = application/pdf
#file=fileToSend/HelloWorld.pdf

# con attachments
# Utilizza tutti i files presenti nella directory per inviarli come attachments 
# NOTA: l'operazione supporta nel profilo un unico attachment opzionale, quindi può essere inviato o meno 
#openspcoop2.attachmentDirectory=attachments



# **** Azione 'testJson' ***

# Azione 'testJson' (invia il payload come application/json ed il primo attachment come text/json)
# PortaDelegata
# Versione 1
# NON DISPONIBILE
# Versione 2
#openspcoop2.PD = Red/Blue/RestExample/2/testJson

# ** Messaggio **

# json
#openspcoop2.contentType = text/json
#file=fileToSend/request.json

# con attachments
# Utilizza tutti i files presenti nella directory per inviarli come attachments 
# NOTA: l'operazione supporta nel profilo due attachments di cui uno e' obbligatorio e deve essere un json 
#openspcoop2.attachmentDirectory=attachments







# -- Identificativi di correlazione --

# RiferimentoMessaggio 
# Utile per:
# - invocazione di richiestaStato/risposta per profili Asincroni
#openspcoop2.integrazione.riferimentoMessaggio=

# IDCollaborazione
#openspcoop2.integrazione.collaborazione=



# -- Informazioni sul servizio --

# tipoDestinatario
#openspcoop2.integrazione.tipoDestinatario=SPC
# destinatario
#openspcoop2.integrazione.destinatario=MinisteroErogatore
# tipoServizio
#openspcoop2.integrazione.tipoServizio=SPC
# Servizio
#openspcoop2.integrazione.servizio=ComunicazioneVariazione
# Azione
#openspcoop2.integrazione.azione=Affidabile


# -- Integrazione Servizio Applicativo --

# Identificativo Correlazione Applicativa
#openspcoop2.integrazione.identificativoCorrelazioneApplicativa=XXX

# Identificativo Servizio Applicativo
#openspcoop2.integrazione.servizioApplicativo=nomeServizioApplicativo






# ------ Header HTTP Integrazione -------------
openspcoop2.trasporto.keyword.tipoMittente=X-OpenSPCoop2-TipoMittente
openspcoop2.trasporto.keyword.mittente=X-OpenSPCoop2-Mittente
openspcoop2.trasporto.keyword.tipoDestinatario=X-OpenSPCoop2-TipoDestinatario
openspcoop2.trasporto.keyword.destinatario=X-OpenSPCoop2-Destinatario
openspcoop2.trasporto.keyword.tipoServizio=X-OpenSPCoop2-TipoServizio
openspcoop2.trasporto.keyword.servizio=X-OpenSPCoop2-Servizio
openspcoop2.trasporto.keyword.azione=X-OpenSPCoop2-Azione
openspcoop2.trasporto.keyword.identificativo=X-OpenSPCoop2-ID
openspcoop2.trasporto.keyword.riferimentoMessaggio=X-OpenSPCoop2-RiferimentoMessaggio
openspcoop2.trasporto.keyword.idCollaborazione=X-OpenSPCoop2-Collaborazione
openspcoop2.trasporto.keyword.idApplicativo=X-OpenSPCoop2-IDApplicativo
openspcoop2.trasporto.keyword.servizioApplicativo=X-OpenSPCoop2-ServizioApplicativo
openspcoop2.trasporto.keyword.transazione=X-OpenSPCoop2-Transazione


