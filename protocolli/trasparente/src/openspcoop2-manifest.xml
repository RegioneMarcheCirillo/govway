<?xml version="1.0" encoding="UTF-8"?>
<openspcoop2 xmlns="http://www.openspcoop2.org/protocol/manifest">

    <protocol name="trasparente">
    	<factory>org.openspcoop2.protocol.trasparente.TrasparenteFactory</factory>
    </protocol>
    


    <binding default="rest">
    	<soap soap11="true" soap11_withAttachments="true" soap11_mtom="true"
    		  soap12="true" soap12_withAttachments="true" soap12_mtom="true">
    		<integrationError>
    			<internal>
    				<default httpReturnCode="500" messageType="soap" />
    			</internal>	
    			<external>
    				<default httpReturnCode="500" messageType="soap" />
    			</external>	
    		</integrationError>
    		<mediaTypeCollection>
    			<mediaType messageType="soap11">text/xml</mediaType>
    			<default messageType="soap12"/>
    		</mediaTypeCollection>
    		<interfaces>
    			<specification type="wsdl11" />
    		</interfaces>
    	</soap>
    	<rest xml="true" json="true" 
    		  binary="true" mimeMultipart="true">
    		<integrationError>
    			<internal>
	    			<authentication httpReturnCode="401" messageType="sameAsRequest" />
	    			<authorization httpReturnCode="403" messageType="sameAsRequest" />
	    			<notFound httpReturnCode="404" messageType="sameAsRequest" />
	    			<badRequest httpReturnCode="400" messageType="sameAsRequest" />
	    			<internalError httpReturnCode="500" messageType="sameAsRequest" />
	    			<default httpReturnCode="500" messageType="xml" />
    			</internal>
    			<external>
	    			<authentication httpReturnCode="401" messageType="none" />
	    			<authorization httpReturnCode="403" messageType="none" />
	    			<notFound httpReturnCode="404" messageType="none" />
	    			<badRequest httpReturnCode="400" messageType="none" />
	    			<internalError httpReturnCode="500" messageType="none" />
	    			<default httpReturnCode="500" messageType="none" />
    			</external>
    		</integrationError>
    		<mediaTypeCollection>
    			<mediaType messageType="xml">text/xml</mediaType>
    			<mediaType messageType="xml">application/xml</mediaType>
    			<mediaType messageType="xml" regExpr="true">.*\+xml</mediaType>
    			<mediaType messageType="json">text/json</mediaType>
				<mediaType messageType="json">text/x-json</mediaType>
    			<mediaType messageType="json">application/json</mediaType>
    			<mediaType messageType="json">application/x-json</mediaType>
    			<mediaType messageType="json" regExpr="true">.*\+json</mediaType>
    			<mediaType messageType="mimeMultipart" regExpr="true">multipart\/related*</mediaType>
    			<default messageType="binary"/>
    			<undefined messageType="binary"/>
    		</mediaTypeCollection>
    		<interfaces>
    			<specification type="wadl" />
    			<specification type="swagger2" />
    			<specification type="openApi3" />
    		</interfaces>
    	</rest>
    </binding>

    <web>
    
		<!-- Contesto api supporta sia soap che rest 
		     con il mapping definito a livello generare di binding -->
	    <context name="api"/>
	
		<!-- Contesto soap supporta solamente il service binding soap 
	 	     (Controllo Runtime) -->
	    <context name="soap" binding="soap"/>
	
		<!-- Contesto soap11 supporta solamente il service binding soap 
		     (Controllo Runtime) e forza la conversione del content type
			in message type soap11 qualsiasi sia il content type presente -->
	    <context name="soap11" binding="soap">
	        	<soapMediaTypeCollection>
	    			<default messageType="soap11"/>
	    		</soapMediaTypeCollection>
	    </context>
	
		<!-- Contesto soap12 supporta solamente il service binding soap 
		     (Controllo Runtime) e forza la conversione del content type
			in message type soap12 qualsiasi sia il content type presente -->
	    <context name="soap12" binding="soap">
	        	<soapMediaTypeCollection>
	    			<default messageType="soap12"/>
	    		</soapMediaTypeCollection>
	    </context>
	
		<!-- Contesto rest supporta solamente il service binding rest
	 	     (Controllo Runtime) -->
	    <context name="rest" binding="rest"/>
	 		
		<!-- Contesto binary supporta solamente il service binding rest
		     (Controllo Runtime) e forza la conversione del content type
			in message type binary qualsiasi sia il content type presente -->
		<context name="binary" binding="rest">
	 			<restMediaTypeCollection>
	 				<default messageType="binary"/>
	 				<undefined messageType="binary"/>
	 			</restMediaTypeCollection>
	 	</context>

    </web>

    <registry>

        <organization>
            <types>
            	<type name="API"/>
            </types>
        </organization>

        <service>
            <types>
            
                <!-- Il tipo API supporta sia soap che rest 
		     		con il mapping definito a livello generare di binding -->
                <type name="API" binding="soap"/>
            
            	<!-- Il tipo SOAP è compatibile solamente 
			   		 con il service binding soap -->
                <type name="SOAP" binding="soap"/>
                
                <!-- Il tipo SOAP11 è compatibile solamente 
			   		 con il service binding soap e forza la conversione del content type
					in message type soap11 qualsiasi sia il content type presente -->
                <type name="SOAP11" binding="soap">
	                <soapMediaTypeCollection>
		    			<default messageType="soap11"/>
		    		</soapMediaTypeCollection>
                </type>
                
                <!-- Il tipo SOAP12 è compatibile solamente 
			   		 con il service binding soap e forza la conversione del content type
					in message type soap12 qualsiasi sia il content type presente -->
                <type name="SOAP12" binding="soap">
	                <soapMediaTypeCollection>
		    			<default messageType="soap12"/>
		    		</soapMediaTypeCollection>
                </type>
                
                <!-- Il tipo REST è compatibile solamente 
			   		 con il service binding rest -->
                <type name="REST" binding="rest"/>
                
               <!-- Il tipo XML è compatibile solamente 
			   		con il service binding rest e forza la conversione del content type
					in message type xml qualsiasi sia il content type presente -->
                <type name="XML" binding="rest">
                	<restMediaTypeCollection>
 						<default messageType="xml"/>
 						<undefined messageType="xml"/>
 					</restMediaTypeCollection>
                </type>
                
                <!-- Il tipo JSON è compatibile solamente 
			   		con il service binding rest e forza la conversione del content type
					in message type json qualsiasi sia il content type presente -->
                <type name="JSON" binding="rest">
                	<restMediaTypeCollection>
 						<default messageType="json"/>
 						<undefined messageType="json"/>
 					</restMediaTypeCollection>
                </type>
                
                <!-- Il tipo BINARY è compatibile solamente 
			   		con il service binding rest e forza la conversione del content type
					in message type binary qualsiasi sia il content type presente -->
				<type name="BINARY" binding="rest">
                	<restMediaTypeCollection>
 						<default messageType="binary"/>
 						<undefined messageType="binary"/>
 					</restMediaTypeCollection>
                </type>
                
                <!-- Il tipo BINARY è compatibile solamente 
			   		con il service binding rest e forza la conversione del content type
					in message type mimeMultipart qualsiasi sia il content type presente -->
				<type name="MULTIPART" binding="rest">
                	<restMediaTypeCollection>
 						<default messageType="mimeMultipart"/>
 						<undefined messageType="mimeMultipart"/>
 					</restMediaTypeCollection>
                </type>
            </types>
        </service>

        <versions>
        	<version name="1.0"/>
        </versions>

    </registry>

    <urlMapping type="PROPERTIES">
        <file>/trasparente-url-mapping.properties</file>
    </urlMapping>

</openspcoop2>
