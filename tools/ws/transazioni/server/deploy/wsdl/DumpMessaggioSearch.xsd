<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
			xmlns:tns="http://www.openspcoop2.org/core/transazioni/management" 
			xmlns:api="http://www.openspcoop2.org/core/transazioni" 
			attributeFormDefault="unqualified" 
			elementFormDefault="qualified" 
			targetNamespace="http://www.openspcoop2.org/core/transazioni/management">
			
 	<xsd:import schemaLocation="openspcoopTransazioni.xsd" namespace="http://www.openspcoop2.org/core/transazioni"/>

	<!-- FILTRI -->

	<xsd:element name="search-filter-dump-messaggio" type="tns:search-filter-dump-messaggio" />
	<xsd:complexType name="search-filter-dump-messaggio">
		<xsd:sequence>
 			<xsd:element name="id-transazione" type="xsd:string" minOccurs="0" maxOccurs="1" />
 			<xsd:element name="protocollo" type="xsd:string" minOccurs="0" maxOccurs="1" />
 			<xsd:element name="tipo-messaggio" type="api:tipo-messaggio" minOccurs="0" maxOccurs="1" />
 			<xsd:element name="formato-messaggio" type="xsd:string" minOccurs="0" maxOccurs="1" />
 			<xsd:element name="content-type" type="xsd:string" minOccurs="0" maxOccurs="1" />
 			<xsd:element name="multipart-content-type" type="xsd:string" minOccurs="0" maxOccurs="1" />
 			<xsd:element name="multipart-content-id" type="xsd:string" minOccurs="0" maxOccurs="1" />
 			<xsd:element name="multipart-content-location" type="xsd:string" minOccurs="0" maxOccurs="1" />
 			<xsd:element name="limit" type="xsd:integer" minOccurs="0" maxOccurs="1" />
 			<xsd:element name="offset" type="xsd:integer" minOccurs="0" maxOccurs="1" />
 			<xsd:element name="descOrder" type="xsd:boolean" minOccurs="0" maxOccurs="1" />
		</xsd:sequence>
	</xsd:complexType>




	<!-- EXCEPTION -->
	<xsd:element name="transazioni-service-exception" type="tns:transazioni-service-exception"/>
	<xsd:complexType name="transazioni-service-exception">
		<xsd:sequence>
			<xsd:element name="methodName" type="xsd:string"/>
			<xsd:element name="objectId" type="xsd:string" minOccurs="0"/>
			<xsd:element name="errorMessage" type="xsd:string"/>
			<xsd:element name="errorCode" type="xsd:string" minOccurs="0"/>
			<xsd:element name="errorStackTrace" type="xsd:string" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:element name="transazioni-not-found-exception" type="tns:transazioni-not-found-exception"/>
	<xsd:complexType name="transazioni-not-found-exception">
		<xsd:sequence>
			<xsd:element name="methodName" type="xsd:string"/>
			<xsd:element name="objectId" type="xsd:string" minOccurs="0"/>
			<xsd:element name="errorMessage" type="xsd:string"/>
			<xsd:element name="errorCode" type="xsd:string" minOccurs="0"/>
			<xsd:element name="errorStackTrace" type="xsd:string" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:element name="transazioni-multiple-result-exception" type="tns:transazioni-multiple-result-exception"/>
	<xsd:complexType name="transazioni-multiple-result-exception">
		<xsd:sequence>
			<xsd:element name="methodName" type="xsd:string"/>
			<xsd:element name="objectId" type="xsd:string" minOccurs="0"/>
			<xsd:element name="errorMessage" type="xsd:string"/>
			<xsd:element name="errorCode" type="xsd:string" minOccurs="0"/>
			<xsd:element name="errorStackTrace" type="xsd:string" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:element name="transazioni-not-implemented-exception" type="tns:transazioni-not-implemented-exception"/>
	<xsd:complexType name="transazioni-not-implemented-exception">
		<xsd:sequence>
			<xsd:element name="methodName" type="xsd:string"/>
			<xsd:element name="objectId" type="xsd:string" minOccurs="0"/>
			<xsd:element name="errorMessage" type="xsd:string"/>
			<xsd:element name="errorCode" type="xsd:string" minOccurs="0"/>
			<xsd:element name="errorStackTrace" type="xsd:string" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:element name="transazioni-not-authorized-exception" type="tns:transazioni-not-authorized-exception"/>
	<xsd:complexType name="transazioni-not-authorized-exception">
		<xsd:sequence>
			<xsd:element name="methodName" type="xsd:string"/>
			<xsd:element name="objectId" type="xsd:string" minOccurs="0"/>
			<xsd:element name="errorMessage" type="xsd:string"/>
			<xsd:element name="errorCode" type="xsd:string" minOccurs="0"/>
			<xsd:element name="errorStackTrace" type="xsd:string" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>



	<!-- WRAPPED ELEMENT -->

	<xsd:element name="findAll" type="tns:findAll" />
	<xsd:complexType name="findAll">
		<xsd:sequence>
			<xsd:element name="filter" type="tns:search-filter-dump-messaggio" minOccurs="1" maxOccurs="1"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="findAllResponse" type="tns:findAllResponse" />
	<xsd:complexType name="findAllResponse">
		<xsd:sequence>
			<xsd:element ref="api:dump-messaggio" minOccurs="0" maxOccurs="unbounded"  />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:element name="find" type="tns:find" />
	<xsd:complexType name="find">
		<xsd:sequence>
			<xsd:element name="filter" type="tns:search-filter-dump-messaggio" minOccurs="1" maxOccurs="1"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="findResponse" type="tns:findResponse" />
	<xsd:complexType name="findResponse">
		<xsd:sequence>
			<xsd:element ref="api:dump-messaggio" minOccurs="1" maxOccurs="1"  />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:element name="count" type="tns:count" />
	<xsd:complexType name="count">
		<xsd:sequence>
			<xsd:element name="filter" type="tns:search-filter-dump-messaggio" minOccurs="1" maxOccurs="1"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="countResponse" type="tns:countResponse" />
	<xsd:complexType name="countResponse">
		<xsd:sequence>
			<xsd:element name="count" type="xsd:long" minOccurs="1" maxOccurs="1"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:element name="get" type="tns:get" />
	<xsd:complexType name="get">
		<xsd:sequence>
			<xsd:element name="idDumpMessaggio" type="api:id-dump-messaggio" minOccurs="1" maxOccurs="1"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="getResponse" type="tns:getResponse" />
	<xsd:complexType name="getResponse">
		<xsd:sequence>
			<xsd:element ref="api:dump-messaggio" minOccurs="1" maxOccurs="1"  />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:element name="exists" type="tns:exists" />
	<xsd:complexType name="exists">
		<xsd:sequence>
			<xsd:element name="idDumpMessaggio" type="api:id-dump-messaggio" minOccurs="1" maxOccurs="1"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="existsResponse" type="tns:existsResponse" />
	<xsd:complexType name="existsResponse">
		<xsd:sequence>
			<xsd:element name="exists" type="xsd:boolean" minOccurs="1" maxOccurs="1"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:element name="findAllIds" type="tns:findAllIds" />
	<xsd:complexType name="findAllIds">
		<xsd:sequence>
			<xsd:element name="filter" type="tns:search-filter-dump-messaggio" minOccurs="1" maxOccurs="1"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="findAllIdsResponse" type="tns:findAllIdsResponse" />
	<xsd:complexType name="findAllIdsResponse">
		<xsd:sequence>
			<xsd:element name="idDumpMessaggio" type="api:id-dump-messaggio" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>



</xsd:schema>