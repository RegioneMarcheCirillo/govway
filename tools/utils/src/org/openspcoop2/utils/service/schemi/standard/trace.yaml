# Questo file rappresenta una traccia interoperabile
#
# Questa traccia è stata poi riadattata nel file govway_trace.yaml, 
# lasciandone la struttura identica ma rimodulando alcuni tipo e/o aggiungendo ulteriori vincoli sui tipi in modo da utilizzarla nin GovWay.
#
openapi: 3.0.0
components:
  schemas:

    Traccia:
      type: object
      required:
        - emittente
        - data_emissione
        - id_traccia
        - ruolo
        - esito
      properties:
        emittente:
          type: string
          description: Identificativo dell'emittente della traccia
          example: 'Ente'
        data_emissione:
          type: string
          format: date-time
          description: Data e Ora in cui la traccia è stata emessa, in formato RFC3339 in UTC e con i separatori Z e T maiuscolo.
          example: '2017-07-21T17:32:28Z'
        id_traccia:
          type: string
          description: Identificativo unico della traccia per l'emittente
          example: 'b32a7501-7788-48ff-99999-a726f8e7658e'
        id_conversazione:
          type: string
          description: dove disponibile, un identificativo univoco utile a correlare invocazioni differenti
          example: 'b32a7501-7788-48ff-99999-a726f8e7658e'
        ruolo:
          type: string
          enum:
            - fruizione
            - erogazione
          example: fruizione
          description: Indica se la traccia rappresenta una erogazione o una fruizione di api
        esito:
          $ref: '#/components/schemas/TracciaEsito'
        richiesta:
          $ref: '#/components/schemas/TracciaDettaglioRichiesta'
        risposta:
          $ref: '#/components/schemas/TracciaDettaglioRisposta'
        api:
          $ref: '#/components/schemas/TracciaInformazioniApi'
        mittente:
          $ref: '#/components/schemas/TracciaInformazioniMittente'
    
    TracciaEsito:
      type: object
      required:
        - codice
      properties:
        codice:
          type: string
          description: |-
           Codice che rappresenta l'esito dell'invocazione.
           Può essere un http status per i protocolli basati su HTTP, o un altra codifica (es. OK/KO)
        descrizione:
          type: string
          description: |-
            Fornisce una descrizione dell'esito rappresentanto dal codice. 
    
          
    # Dettaglio
    
    TracciaDettaglioRichiesta:
      type: object
      allOf:
        - $ref: '#/components/schemas/TracciaDettaglioMessaggio'
        - $ref: '#/components/schemas/TracciaDettaglioRichiestaDatiTrasporto'
        - $ref: '#/components/schemas/TracciaDettaglioMessaggioContenuti'
    
    TracciaDettaglioRichiestaDatiTrasporto:
      type: object
      required:
        - data_ricezione
        - tipo
        - url_invocazione
      properties:
        data_ricezione:
          type: string
          format: date-time
          example: '2017-07-21T17:32:28Z'
          description: |-
            Rappresenta il momento in cui una richiesta arriva sull'API Gateway.
            Data e Ora della richiesta in formato RFC3339 in UTC e con i separatori Z e T maiuscolo.
        data_consegna:
          type: string
          format: date-time
          example: '2017-07-21T17:32:28Z'
          description: |-
            Rappresenta il momento in cui una richiesta, dopo essere stata autorizzata dall'API Gateway, 
            viene consegnata all'applicativo che implementa l'api.
            Data e Ora della richiesta in formato RFC3339 in UTC e con i separatori Z e T maiuscolo.
        tipo:
          type: string
          description: |-
           Tipologia dell'invocazione.
           Può essere un http method per i protocolli basati su HTTP.
          example: POST
        url_invocazione:
          type: string
          format: uri
          description: |-
           URI dell'invocazione
          example: http://govway/in/Ente/Protocollazione/v1/documenti?test=true
    
    TracciaDettaglioRisposta:
      type: object
      allOf:
        - $ref: '#/components/schemas/TracciaDettaglioMessaggio'
        - $ref: '#/components/schemas/TracciaDettaglioRispostaDatiTrasporto'
        - $ref: '#/components/schemas/TracciaDettaglioRispostaErrore'
        - $ref: '#/components/schemas/TracciaDettaglioMessaggioContenuti'

    TracciaDettaglioRispostaDatiTrasporto:
      type: object
      required:
        - data_consegna
        - esito_consegna
      properties:
        data_ricezione:
          type: string
          format: date-time
          example: '2017-07-21T17:32:28Z'
          description: |-
            Rappresenta il momento in cui una risposta viene ricevuta sull'API Gateway.
            Data e Ora della richiesta in formato RFC3339 in UTC e con i separatori Z e T maiuscolo.
        data_consegna:
          type: string
          format: date-time
          example: '2017-07-21T17:32:28Z'
          description: |-
            Rappresenta il momento in cui una risposta, dopo essere stata verifica dall'API Gateway, 
            viene inoltrata all'applicativo che aveva scaturito la richiesta.
            Data e Ora della richiesta in formato RFC3339 in UTC e con i separatori Z e T maiuscolo.
        esito_ricezione:
          type: string
          description: |-
           Esito di trasporto associato alla risposta ricevuta sull'API Gateway.
           Negli scenari basati su protocollo HTTP si tratta di http status.
          example: 200
        esito_consegna:
          type: string
          description: |-
           Esito di trasporto ritornato all'applicativo che aveva scaturito la richiesta.
           Può essere quello ritornato dall'applicativo che implementa l'API (esito_ricezione) o 
           può essere generato dall'API Gateway in presenza di errori avvenuti durante la gestione della richiesta. 
           Negli scenari basati su protocollo HTTP si tratta di http status.
          example: 200

    TracciaDettaglioRispostaErrore:
      type: object
      properties:
        fault_ricezione:
          type: string
          format: byte
          description: |-
           Messaggio di errore ricevuta sull'API Gateway, in seguito ad una richiesta non andata a buon fine.
           Può trattarsi di un Problem Details RFC7807 per i protocolli basati su HTTP o un SOAPFault per i protocolli basati su SOAP.
        fault_consegna:
          type: string
          format: byte
          description: |-
           Messaggio di errore ritornato all'applicativo che aveva scaturito la richiesta.
           Il Fault può essere quello ritornato dall'applicativo che implementa l'API (fault_ricezione) o 
           può essere generato dall'API Gateway in presenza di errori avvenuti durante la gestione della richiesta. 
           Può trattarsi di un Problem Details RFC7807 per i protocolli basati su HTTP o un SOAPFault per i protocolli basati su SOAP.
        dettagli_errore:
          type: array
          items:
            type: string
            description: Eventuali messaggi di errore

    TracciaDettaglioMessaggio:
      type: object
      properties:
        id:
          type: string
          description: |-
            Dove applicabile, identificativo univoco del messaggio.
            Può essere l'identificativo del messaggio in presenza di header WS-Addressing (es. wsa:MessageID),
            l'identificativo SDI nella Fatturazione Elettronica,
            l'id e-Gov su richieste SPCoop o altri casi. 
          example: eba4355e-403f-4e75-8d56-0751710409c2
        id_applicativo:
          type: string
          description: |-
            Dove applicabile, identificativo applicativo del messaggio.
            Nei messaggi dove è presenta un imbustamento di protocollo (WS-Addressing, Fatturazione Elettronica, SPCoop ...),
            può essere associato alla traccia un ulteriore identificativo applicativo che identifica il messaggio contenuto all'interno della busta di protocollo.  
          example: ENTE-X-UFFICIOY-123

    TracciaDettaglioMessaggioContenuti:
      type: object
      properties:
        contenuti:
          $ref: '#/components/schemas/TracciaContenutoMessaggio'

    TracciaContenutoMessaggio:
      type: object
      properties:
        headers:
          type: array
          items:
            $ref: '#/components/schemas/TracciaContenutoMessaggioHeader'
          description: |-
            Dove applicabile, vengono registrati gli header di trasporto (es. header HTTP).
          example:
            "headers" : [ {
              "nome" : "Accept",
              "valore" : "application/json"
            }, {
              "nome" : "Content-Length",
              "valore" : "56789"
            }, {
              "nome" : "Content-Type",
              "valore" : "application/pdf"
            } ]
        body:
          type: string
          format: byte
          description: Contenuto del messaggio

    TracciaContenutoMessaggioHeader:
      type: object
      required:
        - nome
        - valore
      properties:
        nome:
          type: string
          example: Content-Type
          description: Nome dell'header
        valore:
          type: string
          example: application/json
          description: Valore dell'header


    # Informazioni
 
    TracciaInformazioniApi:
      type: object
      required:
        - erogatore
        - nome
        - versione
      properties:
        erogatore:
          type: string
          description: Identificativo dell'erogatore dell'api
          example: 'Ente'
        nome:
          type: string
          description: Identificativo dell'api
          example: 'Protocollazione'
        versione:
          type: integer
          format: int32
          minimum: 1
          default: 1
          description: Versione dell'api
          example: 1
        operazione:
          type: string
          description: Dove applicabile, identificativo dell'operazione
          example: 'protocollazioneDocumento'
 
    TracciaInformazioniMittente:
      type: object
      properties:
        principal:
          type: string
          description: Dove applicabile, credenziali univoche del chiamante.
          example: 'c=IT, O=Comune Firenze, OU=Protocollo, CN=protocollo.regionetoscana.it'
        fruitore:
          type: string
          description: Identificativo del fruitore
          example: 'Ente'
        utente:
          type: string
          description: |- 
            Dove applicabile, identificativo del consumatore o altro soggetto operante la richiesta.
            E' cura del fruitore procedere a codificare e anonimizzare ove necessario.
          example: 'Andrea Rossi'
        indirizzo_client:
          type: string
          description: Dove applicabile, indirizzo IP del client
        indirizzo_client_inoltrato:
          type: string
          description: |-
            Dove applicabile, indirizzo IP del client recuperato tramite meccanismi di header forwarding quali ad esempio
            - [X-]Forwarded-For
            - [X-]Forwarded
            - [X-]Client-IP
            - [X-]Cluster-Client-IP
      