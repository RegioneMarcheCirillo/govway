
package org.openspcoop2.example.server.mtom.ws;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.io.FileInputStream;
import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.ws.BindingProvider;

import org.apache.commons.io.input.ReaderInputStream;
import org.w3c.dom.Document;

/**
 * This class was generated by Apache CXF 2.7.4
 * 2017-02-21T15:25:10.660+01:00
 * Generated source version: 2.7.4
 * 
 */
public final class MTOMServiceExample_MTOMServiceExampleSOAP12InterfaceEndpoint_Client {

    private static final QName SERVICE_NAME = new QName("http://www.openspcoop2.org/example/server/mtom/ws", "MTOMServiceExampleSOAP12Service");

    private MTOMServiceExample_MTOMServiceExampleSOAP12InterfaceEndpoint_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
    	
       	/*
    	 * Leggo la configurazione
    	 */
    	
    	java.util.Properties reader = new java.util.Properties();
		try{  
			reader.load(new FileInputStream("Client.properties")); 
		}catch(java.io.IOException e) {
			System.err.println("ERROR : "+e.toString());
			return;
		}
		
		String invocazioneTramitePdD = reader.getProperty("invocazioneTramitePdD");
		Boolean isInvocazioneTramitePdD = false;
		if(invocazioneTramitePdD == null){
			System.err.println("ERROR : Tipo di invocazione 'invocazioneTramitePdD' (true/false) non definito all'interno del file 'Client.properties'");
			return;
		}else{
			invocazioneTramitePdD = invocazioneTramitePdD.trim();
			isInvocazioneTramitePdD = Boolean.parseBoolean(invocazioneTramitePdD);
		}
		
		
		String file = reader.getProperty("file");
		if(file == null){
			System.err.println("ERROR : File da inviare non definito all'interno del file 'Client.properties'");
			return;
		}else{
			file = file.trim();
		}
		File f = new File(file);
		
		
		
		String url = null;
		
		if(isInvocazioneTramitePdD){
			
			String urlPD = reader.getProperty("portaDiDominio");
			if(urlPD == null){
				System.err.println("ERROR : Punto di Accesso della porta di dominio non definito all'interno del file 'Client.properties'");
				return;
			}else{
				urlPD = urlPD.trim();
			}
			
			String PD = reader.getProperty("Contesto.soap12");
			if(PD == null){
				System.err.println("ERROR : Contesto non definito all'interno del file 'Client.properties'");
				return;
			}else{
				PD = PD.trim();
			}
			
			if(urlPD.endsWith("/")==false)
				urlPD = urlPD + "/"; 
			url = urlPD + PD; 
			
		}
		else{
			
			String endpoint = reader.getProperty("endpoint.soap12");
			if(endpoint == null){
				System.err.println("ERROR : Punto di Accesso del servizio non definito all'interno del file 'Server.properties'");
				return;
			}else{
				url = endpoint.trim();
			}
			
		}
		
		
		String username = reader.getProperty("username");
		if(username == null){
			System.err.println("ERROR : Username non definita all'interno del file 'Client.properties'");
			return;
		}else{
			username = username.trim();
		}
		
		String password = reader.getProperty("password");
		if(password == null){
			System.err.println("ERROR : Password non definita all'interno del file 'Client.properties'");
			return;
		}else{
			password = password.trim();
		}
    	
        URL wsdlURL = MTOMServiceExampleSOAP12Service.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        MTOMServiceExampleSOAP12Service ss = new MTOMServiceExampleSOAP12Service(wsdlURL, MTOMServiceExample_MTOMServiceExampleSOAP12InterfaceEndpoint_Client.SERVICE_NAME);
        MTOMServiceExample port = ss.getMTOMServiceExampleSOAP12InterfaceEndpoint();  
        
        /*
         * Imposto la url della porta di dominio come destinazione
         * Imposto username e password per l'autenticazione
         */
        ((BindingProvider)port).getRequestContext().put(BindingProvider.ENDPOINT_ADDRESS_PROPERTY,  url);
        ((BindingProvider)port).getRequestContext().put(BindingProvider.USERNAME_PROPERTY,  username);
    	((BindingProvider)port).getRequestContext().put(BindingProvider.PASSWORD_PROPERTY,  password);
        

        System.out.println("Invoking echo (send file:"+f.getName()+")...");
        java.lang.String _echo_richiesta = f.getName();
        
        DocumentBuilderFactory documentFactory = DocumentBuilderFactory.newInstance();
		documentFactory.setNamespaceAware(true);
		DocumentBuilder documentBuilder = documentFactory.newDocumentBuilder();
		Document d = documentBuilder.parse(f);
        
        javax.xml.transform.Source _echo_imageData = new DOMSource(d);
        javax.xml.ws.Holder<java.lang.String> _echo_risposta = new javax.xml.ws.Holder<java.lang.String>();
        javax.xml.ws.Holder<javax.xml.transform.Source> _echo_imageDataResponse = new javax.xml.ws.Holder<javax.xml.transform.Source>();
        port.echo(_echo_richiesta, _echo_imageData, _echo_risposta, _echo_imageDataResponse);

        System.out.println("echo._echo_risposta=" + _echo_risposta.value);
        
        System.out.println("echo._echo_imageDataResponse=" + _echo_imageDataResponse.value.getClass().getName());
        if(_echo_imageDataResponse.value instanceof javax.xml.transform.stream.StreamSource){
        	javax.xml.transform.stream.StreamSource ssi = (javax.xml.transform.stream.StreamSource) _echo_imageDataResponse.value;
        	ReaderInputStream ris = new ReaderInputStream(ssi.getReader());
        	documentBuilder = documentFactory.newDocumentBuilder();
        	Document dResponse = documentBuilder.parse(ris);
        	System.out.println("XML received: "+dResponse.toString());
        }
        
        System.exit(0);
    }

    
}
