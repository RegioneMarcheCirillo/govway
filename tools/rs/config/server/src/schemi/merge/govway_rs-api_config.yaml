---
openapi: "3.0.0"
info:
  title: "GovWay Config API"
  description: "Servizi per la configurazione di GovWay"
  contact:
    email: "info@link.it"
  license:
    name: "GPL v3.0"
    url: "https://www.gnu.org/licenses/gpl-3.0.txt"
  version: "1.0.0"
servers:
- url: "/"
tags:
- name: "api"
  description: "Interfacce API che definiscono servizi REST e SOAP"
- name: "erogazioni"
  description: "API erogate da applicativi interni al dominio di gestione"
- name: "erogazioni-gruppi"
  description: "Classificazione in gruppi delle azioni/risorse di una API erogata"
- name: "erogazioni-configurazione"
  description: "Configurazione dell'erogazione (Controllo Accessi, Rate Limiting,\
    \ Validazione, ...)"
- name: "fruizioni"
  description: "Fruizioni di API da parte di applicativi interni al dominio di gestione"
- name: "fruizioni-gruppi"
  description: "Classificazione in gruppi delle azioni/risorse di una API fruita"
- name: "fruizioni-configurazione"
  description: "Configurazione della fruizione (Controllo Accessi, Rate Limiting,\
    \ Validazione, ...)"
- name: "soggetti"
  description: "soggetti esterni o interni al dominio di gestione"
- name: "applicativi"
  description: "applicativi interni al dominio di gestione"
- name: "ruoli"
  description: "ruoli associabili agli applicativi ed ai soggetti"
- name: "scope"
  description: "scope"
paths:
  /api:
    get:
      tags:
      - "api"
      summary: "Ricerca api"
      description: "Elenca le API registrate"
      operationId: "findAll"
      parameters:
      - $ref: "#/components/parameters/q"
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/offset"
      - $ref: "#/components/parameters/tipo_api"
      responses:
        200:
          description: "Ricerca eseguita correttamente"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListaApi"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "api"
      summary: "Creazione di un'API"
      description: "Questa operazione consente di creare una API"
      operationId: "create"
      requestBody:
        description: "Dati dell'api che si vuole creare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Api"
        required: true
      responses:
        201:
          description: "API creata con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        409:
          $ref: "#/components/responses/409Conflict"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
  /api/{nome}/{versione}:
    get:
      tags:
      - "api"
      summary: "Restituisce i dettagli di una API"
      description: "Questa operazione consente di ottenere i dettagli di una API identificata\
        \ dal nome e dalla versione"
      operationId: "get"
      responses:
        200:
          description: "Dettagli di una API restituiti con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiViewItem"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "api"
      summary: "Elimina un'api"
      description: "Questa operazione consente di eliminare un API identificata dal\
        \ nome e dalla versione"
      operationId: "delete"
      responses:
        204:
          description: "API eliminata con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
  /api/{nome}/{versione}/informazioni:
    get:
      tags:
      - "api"
      summary: "Restituisce le informazioni generali di una API"
      description: "Questa operazione consente di ottenere le informazioni generali\
        \ di una API identificata dal nome e dalla versione"
      operationId: "getInformazioniGenerali"
      responses:
        200:
          description: "Informazioni generali restituite con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiInformazioniGeneraliView"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "api"
      summary: "Consente di modificare le informazioni generali di una API"
      description: "Questa operazione consente di aggiornare le informazioni generali\
        \ di una API identificata dal nome e dalla versione"
      operationId: "updateInformazioniGenerali"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiInformazioniGenerali"
        required: true
      responses:
        204:
          description: "API aggiornata correttamente"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
  /api/{nome}/{versione}/referente:
    get:
      tags:
      - "api"
      summary: "Restituisce il nome del soggetto referente dell'api"
      description: "Questa operazione consente di ottenere il nome del soggetto referente\
        \ dell'API identificata dal nome e dalla versione"
      operationId: "getReferente"
      responses:
        200:
          description: "Nome del soggetto referente restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiReferenteView"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
  /api/{nome}/{versione}/interfaccia:
    get:
      tags:
      - "api"
      summary: "Restituisce i dettagli dell'interfaccia di una API"
      description: "Questa operazione consente di ottenere i dettagli dell'interfaccia\
        \ di una API identificata dal nome e dalla versione"
      operationId: "getInterfaccia"
      responses:
        200:
          description: "Interfaccia dell'API restituita con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiInterfacciaView"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "api"
      summary: "Consente di modificare l'interfaccia di una API"
      description: "Questa operazione consente di aggiornare l'interfaccia di una\
        \ API identificata dal nome e dalla versione"
      operationId: "updateInterfaccia"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiInterfaccia"
        required: true
      responses:
        204:
          description: "L'interfaccia è stata aggiornata correttamente"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
  /api/{nome}/{versione}/interfaccia/download:
    get:
      tags:
      - "api"
      summary: "Restituisce l'interfaccia di una API"
      description: "Questa operazione consente di ottenere l'interfaccia di una API\
        \ identificata dal nome e dalla versione"
      operationId: "downloadInterfaccia"
      responses:
        200:
          description: "Interfaccia dell'API restituita con successo"
          content:
            application/*:
              schema:
                type: "string"
                format: "binary"
            text/*:
              schema:
                type: "string"
                format: "binary"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
  /api/{nome}/{versione}/descrizione:
    get:
      tags:
      - "api"
      summary: "Restituisce la descrizione di una API"
      description: "Questa operazione consente di ottenere la descrizione di una API\
        \ identificata dal nome e dalla versione"
      operationId: "getDescrizione"
      responses:
        200:
          description: "Dati della descrizione restituiti con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiDescrizione"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "api"
      summary: "Consente di modificare la descrizione di una API"
      description: "Questa operazione consente di aggiornare la descrizione di una\
        \ API identificata dal nome e dalla versione"
      operationId: "updateDescrizione"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiDescrizione"
        required: true
      responses:
        204:
          description: "La descrizione è stato aggiornata correttamente"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
  /api/{nome}/{versione}/allegati:
    get:
      tags:
      - "api"
      summary: "Elenco allegati di una API"
      description: "Questa operazione consente di ottenere gli allegati di una API\
        \ identificata dal nome e dalla versione"
      operationId: "findAllAllegati"
      parameters:
      - $ref: "#/components/parameters/q"
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/offset"
      responses:
        200:
          description: "Ricerca eseguita correttamente"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListaApiAllegati"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "api"
      summary: "Creazione di un allegato di una API"
      description: "Questa operazione consente di aggiungere un allegato alla API\
        \ identificata dal nome e dalla versione"
      operationId: "createAllegato"
      requestBody:
        description: "Dati dell'allegato che si vuole creare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiAllegato"
        required: true
      responses:
        201:
          description: "Allegato creato con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        409:
          $ref: "#/components/responses/409Conflict"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
  /api/{nome}/{versione}/allegati/{nome_allegato}:
    get:
      tags:
      - "api"
      summary: "Restituisce il dettaglio di un allegato di una API"
      description: "Questa operazione consente di ottenere il dettaglio di un allegato\
        \ della API identificata dal nome e dalla versione"
      operationId: "getAllegato"
      responses:
        200:
          description: "Dati dell'allegato restituiti con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiAllegato"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "api"
      summary: "Modifica i dati di un allegato di una API"
      description: "Questa operazione consente di aggiornare i dettagli di un allegato\
        \ della API identificata dal nome e dalla versione"
      operationId: "updateAllegato"
      requestBody:
        description: "Dati dell'allegato da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiAllegato"
        required: true
      responses:
        204:
          description: "L'allegato è stato aggiornato correttamente"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "api"
      summary: "Elimina un allegato di una API"
      description: "Questa operazione consente di eliminare un'allegato della API\
        \ identificata dal nome e dalla versione"
      operationId: "deleteAllegato"
      responses:
        204:
          description: "Allegato eliminato con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_nome_allegato"
  /api/{nome}/{versione}/allegati/{nome_allegato}/download:
    get:
      tags:
      - "api"
      summary: "Restituisce l'allegato di una API"
      description: "Questa operazione consente di ottenere l'allegato di una API identificata\
        \ dal nome e dalla versione"
      operationId: "downloadAllegato"
      responses:
        200:
          description: "Allegato dell'API restituito con successo"
          content:
            application/*:
              schema:
                type: "string"
                format: "binary"
            text/*:
              schema:
                type: "string"
                format: "binary"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_nome_allegato"
  /api/{nome}/{versione}/risorse:
    get:
      tags:
      - "api"
      summary: "Elenco risorse di una API"
      description: "Questa operazione consente di ottenere le risorse di una API identificata\
        \ dal nome e dalla versione"
      operationId: "findAllRisorse"
      parameters:
      - $ref: "#/components/parameters/q"
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/offset"
      - $ref: "#/components/parameters/http_method"
      responses:
        200:
          description: "Ricerca eseguita correttamente"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListaApiRisorse"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "api"
      summary: "Creazione di una risorsa di una API"
      description: "Questa operazione consente di aggiungere una risorsa alla API\
        \ identificata dal nome e dalla versione"
      operationId: "createRisorsa"
      requestBody:
        description: "Dati della risorsa che si vuole creare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiRisorsa"
        required: true
      responses:
        201:
          description: "Risorsa creata con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        409:
          $ref: "#/components/responses/409Conflict"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
  /api/{nome}/{versione}/risorse/{nome_risorsa}:
    get:
      tags:
      - "api"
      summary: "Restituisce il dettaglio di una risorsa di una API"
      description: "Questa operazione consente di ottenere il dettaglio di una risorsa\
        \ della API identificata dal nome e dalla versione"
      operationId: "getRisorsa"
      responses:
        200:
          description: "Dati della risorsa restituiti con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiRisorsa"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "api"
      summary: "Modifica i dati di una risorsa di una API"
      description: "Questa operazione consente di aggiornare i dettagli di una risorsa\
        \ della API identificata dal nome e dalla versione"
      operationId: "updateRisorsa"
      requestBody:
        description: "Dati della risorsa da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiRisorsa"
        required: true
      responses:
        204:
          description: "La risorsa è stata aggiornata correttamente"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "api"
      summary: "Elimina una risorsa di una API"
      description: "Questa operazione consente di eliminare una risorsa della API\
        \ identificata dal nome e dalla versione"
      operationId: "deleteRisorsa"
      responses:
        204:
          description: "Risorsa eliminata con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_nome_risorsa"
  /api/{nome}/{versione}/servizi:
    get:
      tags:
      - "api"
      summary: "Elenco servizi di una API"
      description: "Questa operazione consente di ottenere i servizi di una API identificata\
        \ dal nome e dalla versione"
      operationId: "findAllServizi"
      parameters:
      - $ref: "#/components/parameters/q"
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/offset"
      responses:
        200:
          description: "Ricerca eseguita correttamente"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListaApiServizi"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "api"
      summary: "Creazione di un servizio di una API"
      description: "Questa operazione consente di aggiungere un servizio alla API\
        \ identificata dal nome e dalla versione"
      operationId: "createServizio"
      requestBody:
        description: "Dati del servizio che si vuole creare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiServizio"
        required: true
      responses:
        201:
          description: "Servizio creato con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        409:
          $ref: "#/components/responses/409Conflict"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
  /api/{nome}/{versione}/servizi/{nome_servizio}:
    get:
      tags:
      - "api"
      summary: "Restituisce il dettaglio di un servizio di una API"
      description: "Questa operazione consente di ottenere il dettaglio di un servizio\
        \ della API identificata dal nome e dalla versione"
      operationId: "getServizio"
      responses:
        200:
          description: "Dati del servizio restituiti con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiServizio"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "api"
      summary: "Modifica i dati di un servizio di una API"
      description: "Questa operazione consente di aggiornare i dettagli di un servizio\
        \ della API identificata dal nome e dalla versione"
      operationId: "updateServizio"
      requestBody:
        description: "Dati del servizio da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiServizio"
        required: true
      responses:
        204:
          description: "Il servizio è stata aggiornato correttamente"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "api"
      summary: "Elimina un servizio di una API"
      description: "Questa operazione consente di eliminare un servizio della API\
        \ identificata dal nome e dalla versione"
      operationId: "deleteServizio"
      responses:
        204:
          description: "Servizio eliminato con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_nome_servizio"
  /api/{nome}/{versione}/servizi/{nome_servizio}/azioni:
    get:
      tags:
      - "api"
      summary: "Elenco servizi di una API"
      description: "Questa operazione consente di ottenere le azioni di un servizio\
        \ della API identificata dal nome e dalla versione"
      operationId: "findAllAzioni"
      parameters:
      - $ref: "#/components/parameters/q"
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/offset"
      responses:
        200:
          description: "Ricerca eseguita correttamente"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListaApiAzioni"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "api"
      summary: "Creazione di un'azione di una API"
      description: "Questa operazione consente di aggiungere una azione al servizio\
        \ della API identificata dal nome e dalla versione"
      operationId: "createAzione"
      requestBody:
        description: "Dati dell'azione che si vuole creare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiAzione"
        required: true
      responses:
        201:
          description: "Azione creata con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        409:
          $ref: "#/components/responses/409Conflict"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_nome_servizio"
  /api/{nome}/{versione}/servizi/{nome_servizio}/azioni/{nome_azione}:
    get:
      tags:
      - "api"
      summary: "Restituisce il dettaglio di un'azione di un  servizio della API"
      description: "Questa operazione consente di ottenere il dettaglio di un'azione\
        \ nel servizio della API identificata dal nome e dalla versione"
      operationId: "getAzione"
      responses:
        200:
          description: "Dati dell'azione restituiti con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiAzione"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "api"
      summary: "Modifica i dati di un'azione nel servizio di una API"
      description: "Questa operazione consente di aggiornare i dettagli di un'azione\
        \ della API identificata dal nome e dalla versione"
      operationId: "updateAzione"
      requestBody:
        description: "Dati dell'azione da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiAzione"
        required: true
      responses:
        204:
          description: "L'azione è stata aggiornata correttamente"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "api"
      summary: "Elimina un'azione del servizio di una API"
      description: "Questa operazione consente di eliminare un'azione del servizio\
        \ della API identificata dal nome e dalla versione"
      operationId: "deleteAzione"
      responses:
        204:
          description: "Azione eliminata con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_nome_servizio"
    - $ref: "#/components/parameters/id_nome_azione"
  /erogazioni:
    get:
      tags:
      - "erogazioni"
      summary: "Ricerca erogazioni di api"
      description: "Elenca le erogazioni di API"
      operationId: "findAll"
      parameters:
      - $ref: "#/components/parameters/q"
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/offset"
      - $ref: "#/components/parameters/tipo_api"
      responses:
        200:
          description: "Ricerca eseguita correttamente"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListaErogazioni"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "erogazioni"
      summary: "Creazione di un'erogazione di API"
      description: "Questa operazione consente di creare una erogazione di API"
      operationId: "create"
      requestBody:
        description: "Dati dell'erogazione che si vuole creare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Erogazione"
        required: true
      responses:
        201:
          description: "Erogazione creata con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        409:
          $ref: "#/components/responses/409Conflict"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
  /erogazioni/{nome}/{versione}:
    get:
      tags:
      - "erogazioni"
      summary: "Restituisce i dettagli di un'erogazione di API"
      description: "Questa operazione consente di ottenere i dettagli di una erogazione\
        \ di API identificata dal nome e dalla versione"
      operationId: "get"
      responses:
        200:
          description: "Dettagli di un'erogazione di API restituiti con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErogazioneViewItem"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "erogazioni"
      summary: "Elimina un'erogazione di api"
      description: "Questa operazione consente di eliminare un'erogazione di API identificata\
        \ dal nome e dalla versione"
      operationId: "delete"
      responses:
        204:
          description: "Erogazione di API eliminata con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
  /erogazioni/{nome}/{versione}/informazioni:
    get:
      tags:
      - "erogazioni"
      summary: "Restituisce le informazioni generali di un'erogazione di API"
      description: "Questa operazione consente di ottenere le informazioni generali\
        \ di un'erogazione di API identificata dal nome e dalla versione"
      operationId: "getInformazioniGenerali"
      responses:
        200:
          description: "Informazioni generali restituite con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiImplInformazioniGeneraliView"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "erogazioni"
      summary: "Consente di modificare le informazioni generali di un'erogazione di\
        \ API"
      description: "Questa operazione consente di aggiornare le informazioni generali\
        \ di un'erogazione di API identificata dal nome e dalla versione"
      operationId: "updateInformazioniGenerali"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiImplInformazioniGenerali"
        required: true
      responses:
        204:
          description: "Erogazione di API aggiornata correttamente"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
  /erogazioni/{nome}/{versione}/api:
    get:
      tags:
      - "erogazioni"
      summary: "Restituisce le informazioni sull'API implementata dall'erogazione"
      description: "Questa operazione consente di ottenere le informazioni sull'API\
        \ implementata dall'erogazione identificata dal nome e dalla versione"
      operationId: "getAPI"
      responses:
        200:
          description: "Informazioni sull'API restituite con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiImplVersioneApiView"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "erogazioni"
      summary: "Consente di modificare la versione dell'API implementata dall'erogazione"
      description: "Questa operazione consente di aggiornare la versione dell'API\
        \ implementata dall'erogazione identificata dal nome e dalla versione"
      operationId: "updateAPI"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiImplVersioneApi"
        required: true
      responses:
        204:
          description: "Erogazione di API aggiornata correttamente"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
  /erogazioni/{nome}/{versione}/allegati:
    get:
      tags:
      - "erogazioni"
      summary: "Elenco allegati di un'erogazione di API"
      description: "Questa operazione consente di ottenere gli allegati di un'erogazione\
        \ di API identificata dal nome e dalla versione"
      operationId: "findAllAllegati"
      parameters:
      - $ref: "#/components/parameters/q"
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/offset"
      responses:
        200:
          description: "Ricerca eseguita correttamente"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListaApiImplAllegati"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "erogazioni"
      summary: "Creazione di un allegato nell'erogazione di API"
      description: "Questa operazione consente di aggiungere un allegato all'erogazione\
        \ di API identificata dal nome e dalla versione"
      operationId: "createAllegato"
      requestBody:
        description: "Dati dell'allegato che si vuole creare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiImplAllegato"
        required: true
      responses:
        201:
          description: "Allegato creato con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        409:
          $ref: "#/components/responses/409Conflict"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
  /erogazioni/{nome}/{versione}/allegati/{nome_allegato}:
    get:
      tags:
      - "erogazioni"
      summary: "Restituisce il dettaglio di un allegato dell'erogazione"
      description: "Questa operazione consente di ottenere il dettaglio di un allegato\
        \ dell'erogazione di API identificata dal nome e dalla versione"
      operationId: "getAllegato"
      responses:
        200:
          description: "Dati dell'allegato restituiti con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiImplAllegato"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "erogazioni"
      summary: "Modifica i dati di un allegato dell'erogazione"
      description: "Questa operazione consente di aggiornare i dettagli di un allegato\
        \ dell'erogazione di API identificata dal nome e dalla versione"
      operationId: "updateAllegato"
      requestBody:
        description: "Dati dell'allegato da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiImplAllegato"
        required: true
      responses:
        204:
          description: "L'allegato è stato aggiornato correttamente"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "erogazioni"
      summary: "Elimina un allegato dall'erogazione"
      description: "Questa operazione consente di eliminare un'allegato dell'erogazione\
        \ di API identificata dal nome e dalla versione"
      operationId: "deleteAllegato"
      responses:
        204:
          description: "Allegato eliminato con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_nome_allegato"
  /erogazioni/{nome}/{versione}/allegati/{nome_allegato}/download:
    get:
      tags:
      - "erogazioni"
      summary: "Restituisce l'allegato di una erogazione"
      description: "Questa operazione consente di ottenere l'allegato di un'erogazione\
        \ di API identificata dal nome e dalla versione"
      operationId: "downloadAllegato"
      responses:
        200:
          description: "Allegato dell'erogazione restituito con successo"
          content:
            application/*:
              schema:
                type: "string"
                format: "binary"
            text/*:
              schema:
                type: "string"
                format: "binary"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_nome_allegato"
  /erogazioni/{nome}/{versione}/url-invocazione:
    get:
      tags:
      - "erogazioni"
      summary: "Restituisce le informazioni sull'url di invocazione necessaria ad\
        \ invocare l'erogazione"
      description: "Questa operazione consente di ottenere le informazioni sull'url\
        \ di invocazione necessaria ad invocare l'erogazione identificata dal nome\
        \ e dalla versione"
      operationId: "getUrlInvocazione"
      responses:
        200:
          description: "Informazioni sull'url di invocazione restituite con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiImplUrlInvocazioneView"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "erogazioni"
      summary: "Consente di modificare la configurazione utilizzata per identificare\
        \ l'azione invocata dell'API implementata dall'erogazione"
      description: "Questa operazione consente di aggiornare la configurazione utilizzata\
        \ dal Gateway per identificare l'azione invocata"
      operationId: "updateUrlInvocazione"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiImplUrlInvocazione"
        required: true
      responses:
        204:
          description: "Configurazione dell'erogazione aggiornata correttamente"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
  /erogazioni/{nome}/{versione}/connettore:
    get:
      tags:
      - "erogazioni"
      summary: "Restituisce le informazioni su connettore associato all'erogazione"
      description: "Questa operazione consente di ottenere le informazioni sul connettore\
        \ associato all'erogazione identificata dal nome e dalla versione"
      operationId: "getConnettore"
      responses:
        200:
          description: "Informazioni sul connettore restituite con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Connettore"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "erogazioni"
      summary: "Consente di modificare la configurazione del connettore associato\
        \ all'erogazione"
      description: "Questa operazione consente di aggiornare la configurazione del\
        \ connettore associato all'erogazione identificata dal nome e dalla versione"
      operationId: "updateConnettore"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Connettore"
        required: true
      responses:
        204:
          description: "Configurazione dell'erogazione aggiornata correttamente"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
  /erogazioni/{nome}/{versione}/configurazioni/gestione-cors:
    get:
      tags:
      - "erogazioni-configurazione"
      summary: "Restituisce le informazioni sulla configurazione CORS associata all'erogazione"
      description: "Questa operazione consente di ottenere le informazioni sulla configurazione\
        \ CORS associata all'erogazione identificata dal nome e dalla versione"
      operationId: "getGestioneCORS"
      responses:
        200:
          description: "Informazioni sulla configurazione CORS restituite con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GestioneCors"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "erogazioni-configurazione"
      summary: "Consente di modificare la configurazione CORS associata all'erogazione"
      description: "Questa operazione consente di aggiornare la configurazione CORS\
        \ associata all'erogazione identificata dal nome e dalla versione"
      operationId: "updateGestioneCORS"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GestioneCors"
        required: true
      responses:
        204:
          description: "Configurazione dell'erogazione aggiornata correttamente"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
  /erogazioni/{nome}/{versione}/gruppi:
    get:
      tags:
      - "erogazioni-gruppi"
      summary: "Ricerca i gruppi in cui sono stati classificate le azioni o le risorse\
        \ dell'API"
      description: "Elenca i gruppi in cui sono stati classificate le azioni o le\
        \ risorse dell'API"
      operationId: "findAll"
      parameters:
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/offset"
      - $ref: "#/components/parameters/azione"
      responses:
        200:
          description: "Ricerca eseguita correttamente"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListaGruppi"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "erogazioni-gruppi"
      summary: "Creazione di un gruppo di azioni o risorse dell'API erogata"
      description: "Questa operazione consente di creare un gruppo di azioni o risorse\
        \ dell'API erogata"
      operationId: "create"
      requestBody:
        description: "Dati del gruppo di azioni o risorse che si vuole creare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Gruppo"
        required: true
      responses:
        201:
          description: "Gruppo creato con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        409:
          $ref: "#/components/responses/409Conflict"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
  /erogazioni/{nome}/{versione}/gruppi/{nome_gruppo}:
    get:
      tags:
      - "erogazioni-gruppi"
      summary: "Restituisce azioni/risorse associate al gruppo identificato dal nome"
      description: "Questa operazione consente di ottenere le azioni associate al\
        \ gruppo identificato dal nome"
      operationId: "getAzioni"
      responses:
        200:
          description: "Elenco di azioni/risorse restituite con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GruppoAzioni"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "erogazioni-gruppi"
      summary: "Consente di modificare il nome del gruppo"
      description: "Questa operazione consente di aggiornare il nome di un gruppo"
      operationId: "updateNome"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GruppoNome"
        required: true
      responses:
        204:
          description: "Configurazione del gruppo aggiornata correttamente"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "erogazioni-gruppi"
      summary: "Elimina il gruppo identificato dal nome"
      description: "Questa operazione consente di eliminare il gruppo identificato\
        \ dal nome"
      operationId: "delete"
      responses:
        204:
          description: "Gruppo eliminate con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_nome_gruppo"
  /erogazioni/{nome}/{versione}/gruppi/{nome_gruppo}/azioni:
    post:
      tags:
      - "erogazioni-gruppi"
      summary: "Aggiunta di azioni o risorse dell'API al gruppo"
      description: "Questa operazione consente di aggiungere azioni o risorse dell'API\
        \ al gruppo"
      operationId: "addAzioni"
      requestBody:
        description: "Azioni o risorse che si vuole aggiungere"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GruppoAzioni"
        required: true
      responses:
        201:
          description: "Azioni aggiunte con con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        409:
          $ref: "#/components/responses/409Conflict"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "erogazioni-gruppi"
      summary: "Elimina azioni o risorse dell'API associate al gruppo"
      description: "Questa operazione consente di eliminare azioni o risorse dell'API\
        \ associate al gruppo"
      operationId: "deleteAzioni"
      responses:
        204:
          description: "Azioni eliminate con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_nome_gruppo"
  /erogazioni/{nome}/{versione}/configurazioni/stato:
    get:
      tags:
      - "erogazioni-configurazione"
      summary: "Restituisce l'indicazione sullo stato del gruppo"
      description: "Questa operazione consente di ottenere lo stato attuale del gruppo"
      operationId: "getStato"
      responses:
        200:
          description: "Dettaglio dello stato restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiImplStato"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "erogazioni-configurazione"
      summary: "Consente di modificare lo stato del gruppo"
      description: "Questa operazione consente di aggiornare lo stato del gruppo"
      operationId: "updateStato"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiImplStato"
        required: true
      responses:
        204:
          description: "Configurazione del gruppo aggiornata correttamente"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
  /erogazioni/{nome}/{versione}/configurazioni/controllo-accessi/gestione-token:
    get:
      tags:
      - "erogazioni-configurazione"
      summary: "Restituisce la configurazione relativa alla gestione dei token per\
        \ quanto concerne il controllo degli accessi"
      description: "Questa operazione consente di ottenere la configurazione relativa\
        \ alla gestione dei token per quanto concerne il controllo degli accessi"
      operationId: "getControlloAccessiGestioneToken"
      responses:
        200:
          description: "Dettaglio della configurazione restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ControlloAccessiGestioneToken"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "erogazioni-configurazione"
      summary: "Consente di modificare la configurazione relativa alla gestione dei\
        \ token per quanto concerne il controllo degli accessi"
      description: "Questa operazione consente di aggiornare la configurazione relativa\
        \ alla gestione dei token per quanto concerne il controllo degli accessi"
      operationId: "updateControlloAccessiGestioneToken"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ControlloAccessiGestioneToken"
        required: true
      responses:
        204:
          description: "Configurazione aggiornata correttamente"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
  /erogazioni/{nome}/{versione}/configurazioni/controllo-accessi/autenticazione:
    get:
      tags:
      - "erogazioni-configurazione"
      summary: "Restituisce la configurazione relativa all'autenticazione per quanto\
        \ concerne il controllo degli accessi"
      description: "Questa operazione consente di ottenere la configurazione relativa\
        \ all'autenticazione per quanto concerne il controllo degli accessi"
      operationId: "getControlloAccessiAutenticazione"
      responses:
        200:
          description: "Dettaglio della configurazione restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ControlloAccessiAutenticazione"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "erogazioni-configurazione"
      summary: "Consente di modificare la configurazione relativa all'autenticazione\
        \ per quanto concerne il controllo degli accessi"
      description: "Questa operazione consente di aggiornare la configurazione relativa\
        \ all'autenticazione per quanto concerne il controllo degli accessi"
      operationId: "updateControlloAccessiAutenticazione"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ControlloAccessiAutenticazione"
        required: true
      responses:
        204:
          description: "Configurazione aggiornata correttamente"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
  /erogazioni/{nome}/{versione}/configurazioni/controllo-accessi/autorizzazione:
    get:
      tags:
      - "erogazioni-configurazione"
      summary: "Restituisce la configurazione relativa all'autorizzazione per quanto\
        \ concerne il controllo degli accessi"
      description: "Questa operazione consente di ottenere la configurazione relativa\
        \ all'autorizzazione per quanto concerne il controllo degli accessi"
      operationId: "getControlloAccessiAutorizzazione"
      responses:
        200:
          description: "Dettaglio della configurazione restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ControlloAccessiAutorizzazioneView"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "erogazioni-configurazione"
      summary: "Consente di modificare la configurazione relativa all'autorizzazione\
        \ per quanto concerne il controllo degli accessi"
      description: "Questa operazione consente di aggiornare la configurazione relativa\
        \ all'autorizzazione per quanto concerne il controllo degli accessi"
      operationId: "updateControlloAccessiAutorizzazione"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ControlloAccessiAutorizzazione"
        required: true
      responses:
        204:
          description: "Configurazione aggiornata correttamente"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
  /erogazioni/{nome}/{versione}/configurazioni/controllo-accessi/autorizzazione/download-xacml-policy:
    get:
      tags:
      - "erogazioni-configurazione"
      summary: "Restituisce la policy XACML associata all'autorizzazione"
      description: "Questa operazione consente di ottenere la policy XACML associata\
        \ all'autorizzazione"
      operationId: "downloadControlloAccessiAutorizzazioneXacmlPolicy"
      responses:
        200:
          description: "Interfaccia dell'API restituita con successo"
          content:
            application/xml:
              schema:
                type: "string"
                format: "binary"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
  /erogazioni/{nome}/{versione}/configurazioni/controllo-accessi/autorizzazione/soggetti:
    get:
      tags:
      - "erogazioni-configurazione"
      summary: "Restituisce l'elenco dei soggetti autorizzati puntualmente"
      description: "Questa operazione consente di ottenere l'elenco dei soggetti autorizzati\
        \ puntualmente"
      operationId: "getControlloAccessiAutorizzazionePuntualeSoggetti"
      responses:
        200:
          description: "Elenco soggetti autorizzati restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ControlloAccessiAutorizzazioneSoggetti"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "erogazioni-configurazione"
      summary: "Aggiunta di soggetti all'elenco dei soggetti autorizzati puntualmente"
      description: "Questa operazione consente di aggiungere soggetti all'elenco dei\
        \ soggetti autorizzati puntualmente"
      operationId: "addControlloAccessiAutorizzazionePuntualeSoggetti"
      requestBody:
        description: "Soggetti che si vuole aggiungere"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ControlloAccessiAutorizzazioneSoggetto"
        required: true
      responses:
        201:
          description: "Soggetti aggiunti con con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        409:
          $ref: "#/components/responses/409Conflict"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
  /erogazioni/{nome}/{versione}/configurazioni/controllo-accessi/autorizzazione/soggetti/{soggetto_autorizzato}:
    delete:
      tags:
      - "erogazioni-configurazione"
      summary: "Elimina soggetti all'elenco dei soggetti autorizzati puntualmente"
      description: "Questa operazione consente di eliminare soggetti all'elenco dei\
        \ soggetti autorizzati puntualmente"
      operationId: "deleteControlloAccessiAutorizzazionePuntualeSoggetti"
      responses:
        204:
          description: "Soggetti eliminati con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_soggetto_autorizzato"
    - $ref: "#/components/parameters/gruppo"
  /erogazioni/{nome}/{versione}/configurazioni/controllo-accessi/autorizzazione/applicativi:
    get:
      tags:
      - "erogazioni-configurazione"
      summary: "Restituisce l'elenco degli applicativi autorizzati puntualmente"
      description: "Questa operazione consente di ottenere l'elenco degli applicativi\
        \ autorizzati puntualmente"
      operationId: "getControlloAccessiAutorizzazionePuntualeApplicativi"
      responses:
        200:
          description: "Elenco applicativi autorizzati restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ControlloAccessiAutorizzazioneApplicativi"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "erogazioni-configurazione"
      summary: "Aggiunta di applicativi all'elenco degli applicativi autorizzati puntualmente"
      description: "Questa operazione consente di aggiungere applicativi all'elenco\
        \ degli applicativi autorizzati puntualmente"
      operationId: "addControlloAccessiAutorizzazionePuntualeApplicativi"
      requestBody:
        description: "Applicativi che si vuole aggiungere"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ControlloAccessiAutorizzazioneApplicativo"
        required: true
      responses:
        201:
          description: "Applicativi aggiunti con con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        409:
          $ref: "#/components/responses/409Conflict"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
  /erogazioni/{nome}/{versione}/configurazioni/controllo-accessi/autorizzazione/applicativi/{applicativo_autorizzato}:
    delete:
      tags:
      - "erogazioni-configurazione"
      summary: "Elimina applicativi dall'elenco degli applicativi autorizzati puntualmente"
      description: "Questa operazione consente di eliminare applicativi dall'elenco\
        \ degli applicativi autorizzati puntualmente"
      operationId: "deleteControlloAccessiAutorizzazionePuntualeApplicativi"
      responses:
        204:
          description: "Applicativi eliminati con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_applicativo_autorizzato"
    - $ref: "#/components/parameters/gruppo"
  /erogazioni/{nome}/{versione}/configurazioni/controllo-accessi/autorizzazione/ruoli:
    get:
      tags:
      - "erogazioni-configurazione"
      summary: "Restituisce l'elenco dei ruoli autorizzati"
      description: "Questa operazione consente di ottenere l'elenco dei ruoli autorizzati"
      operationId: "getControlloAccessiAutorizzazioneRuoli"
      responses:
        200:
          description: "Elenco ruoli autorizzati restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ControlloAccessiAutorizzazioneRuoli"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "erogazioni-configurazione"
      summary: "Aggiunta di ruoli all'elenco dei ruoli autorizzati"
      description: "Questa operazione consente di aggiungere ruoli all'elenco dei\
        \ ruoli autorizzati"
      operationId: "addControlloAccessiAutorizzazioneRuoli"
      requestBody:
        description: "Ruoli che si vuole aggiungere"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ControlloAccessiAutorizzazioneRuolo"
        required: true
      responses:
        201:
          description: "Ruoli aggiunti con con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        409:
          $ref: "#/components/responses/409Conflict"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
  /erogazioni/{nome}/{versione}/configurazioni/controllo-accessi/autorizzazione/ruoli/{ruolo_autorizzato}:
    delete:
      tags:
      - "erogazioni-configurazione"
      summary: "Elimina ruoli dall'elenco dei ruoli autorizzati"
      description: "Questa operazione consente di eliminare ruoli dall'elenco dei\
        \ ruoli autorizzati"
      operationId: "deleteControlloAccessiAutorizzazioneRuoli"
      responses:
        204:
          description: "Ruoli eliminati con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_ruolo_autorizzato"
    - $ref: "#/components/parameters/gruppo"
  /erogazioni/{nome}/{versione}/configurazioni/controllo-accessi/autorizzazione/scope:
    get:
      tags:
      - "erogazioni-configurazione"
      summary: "Restituisce l'elenco degli scope autorizzati"
      description: "Questa operazione consente di ottenere l'elenco degli scope autorizzati"
      operationId: "getControlloAccessiAutorizzazioneScope"
      responses:
        200:
          description: "Elenco scope autorizzati restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ControlloAccessiAutorizzazioneScopes"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "erogazioni-configurazione"
      summary: "Aggiunta di scope all'elenco degli scope autorizzati"
      description: "Questa operazione consente di aggiungere scope all'elenco degli\
        \ scope autorizzati"
      operationId: "addControlloAccessiAutorizzazioneScope"
      requestBody:
        description: "Scope che si vuole aggiungere"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ControlloAccessiAutorizzazioneScope"
        required: true
      responses:
        201:
          description: "Scope aggiunti con con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        409:
          $ref: "#/components/responses/409Conflict"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
  /erogazioni/{nome}/{versione}/configurazioni/controllo-accessi/autorizzazione/scope/{scope_autorizzato}:
    delete:
      tags:
      - "erogazioni-configurazione"
      summary: "Elimina scope dall'elenco degli scope autorizzati"
      description: "Questa operazione consente di eliminare scope dall'elenco degli\
        \ scope autorizzati"
      operationId: "deleteControlloAccessiAutorizzazioneScope"
      responses:
        204:
          description: "Scope eliminati con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_scope_autorizzato"
    - $ref: "#/components/parameters/gruppo"
  /fruizioni:
    get:
      tags:
      - "fruizioni"
      summary: "Ricerca fruizioni di api"
      description: "Elenca le fruizioni di API"
      operationId: "findAll"
      parameters:
      - $ref: "#/components/parameters/q"
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/offset"
      - $ref: "#/components/parameters/tipo_api"
      responses:
        200:
          description: "Ricerca eseguita correttamente"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListaFruizioni"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "fruizioni"
      summary: "Creazione di una fruizione di API"
      description: "Questa operazione consente di creare una fruizione di API"
      operationId: "create"
      requestBody:
        description: "Dati della fruizione che si vuole creare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Fruizione"
        required: true
      responses:
        201:
          description: "Fruizione creata con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        409:
          $ref: "#/components/responses/409Conflict"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
  /fruizioni/{erogatore}/{nome}/{versione}:
    get:
      tags:
      - "fruizioni"
      summary: "Restituisce i dettagli di una fruizione di API"
      description: "Questa operazione consente di ottenere i dettagli di una fruizione\
        \ di API identificata dall'erogatore, dal nome e dalla versione"
      operationId: "get"
      responses:
        200:
          description: "Dettagli di una fruizione di API restituiti con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FruizioneViewItem"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "fruizioni"
      summary: "Elimina una fruizione di api"
      description: "Questa operazione consente di eliminare una fruizione di API identificata\
        \ dall'erogatore, dal nome e dalla versione"
      operationId: "delete"
      responses:
        204:
          description: "Fruizione di API eliminata con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
  /fruizioni/{erogatore}/{nome}/{versione}/informazioni:
    get:
      tags:
      - "fruizioni"
      summary: "Restituisce le informazioni generali di una fruizione di API"
      description: "Questa operazione consente di ottenere le informazioni generali\
        \ di una fruizione di API identificata dall'erogatore, dal nome e dalla versione"
      operationId: "getInformazioniGenerali"
      responses:
        200:
          description: "Informazioni generali restituite con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiImplInformazioniGeneraliView"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "fruizioni"
      summary: "Consente di modificare le informazioni generali di una fruizione di\
        \ API"
      description: "Questa operazione consente di aggiornare le informazioni generali\
        \ di una fruizione di API identificata  dall'erogatore, dal nome e dalla versione"
      operationId: "updateInformazioniGenerali"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiImplInformazioniGenerali"
        required: true
      responses:
        204:
          description: "Fruizione di API aggiornata correttamente"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
  /fruizioni/{erogatore}/{nome}/{versione}/api:
    get:
      tags:
      - "fruizioni"
      summary: "Restituisce le informazioni sull'API implementata dalla fruizione"
      description: "Questa operazione consente di ottenere le informazioni sull'API\
        \ implementata dall'erogazione identificata dall'erogatore, dal nome e dalla\
        \ versione"
      operationId: "getAPI"
      responses:
        200:
          description: "Informazioni sull'API restituite con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiImplVersioneApiView"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "fruizioni"
      summary: "Consente di modificare la versione dell'API implementata dalla fruizione"
      description: "Questa operazione consente di aggiornare la versione dell'API\
        \ implementata dall'erogazione identificata dall'erogatore, dal nome e dalla\
        \ versione"
      operationId: "updateAPI"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiImplVersioneApi"
        required: true
      responses:
        204:
          description: "Fruizione di API aggiornata correttamente"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
  /fruizioni/{erogatore}/{nome}/{versione}/allegati:
    get:
      tags:
      - "fruizioni"
      summary: "Elenco allegati di una fruizione di API"
      description: "Questa operazione consente di ottenere gli allegati di una fruizione\
        \ di API identificata dall'erogatore, dal nome e dalla versione"
      operationId: "findAllAllegati"
      parameters:
      - $ref: "#/components/parameters/q"
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/offset"
      responses:
        200:
          description: "Ricerca eseguita correttamente"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListaApiImplAllegati"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "fruizioni"
      summary: "Creazione di un allegato nella fruizione di API"
      description: "Questa operazione consente di aggiungere un allegato alla fruizione\
        \ di API identificata dall'erogatore, dal nome e dalla versione"
      operationId: "createAllegato"
      requestBody:
        description: "Dati dell'allegato che si vuole creare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiImplAllegato"
        required: true
      responses:
        201:
          description: "Allegato creato con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        409:
          $ref: "#/components/responses/409Conflict"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
  /fruizioni/{erogatore}/{nome}/{versione}/allegati/{nome_allegato}:
    get:
      tags:
      - "fruizioni"
      summary: "Restituisce il dettaglio di un allegato della fruizione"
      description: "Questa operazione consente di ottenere il dettaglio di un allegato\
        \ della fruizione di API identificata dall'erogatore, dal nome e dalla versione"
      operationId: "getAllegato"
      responses:
        200:
          description: "Dati dell'allegato restituiti con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiImplAllegato"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "fruizioni"
      summary: "Modifica i dati di un allegato della fruizione"
      description: "Questa operazione consente di aggiornare i dettagli di un allegato\
        \ della fruizione di API identificata dall'erogatore, dal nome e dalla versione"
      operationId: "updateAllegato"
      requestBody:
        description: "Dati dell'allegato da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiImplAllegato"
        required: true
      responses:
        204:
          description: "L'allegato è stato aggiornato correttamente"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "fruizioni"
      summary: "Elimina un allegato dalla fruizione"
      description: "Questa operazione consente di eliminare un'allegato dalla fruizione\
        \ di API identificata dall'erogatore, dal nome e dalla versione"
      operationId: "deleteAllegato"
      responses:
        204:
          description: "Allegato eliminato con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_nome_allegato"
  /fruizioni/{erogatore}/{nome}/{versione}/allegati/{nome_allegato}/download:
    get:
      tags:
      - "fruizioni"
      summary: "Restituisce l'allegato di una fruizione"
      description: "Questa operazione consente di ottenere l'allegato di un'erogazione\
        \ di API identificata dall'erogatore, dal nome e dalla versione"
      operationId: "downloadAllegato"
      responses:
        200:
          description: "Allegato della fruizione restituito con successo"
          content:
            application/*:
              schema:
                type: "string"
                format: "binary"
            text/*:
              schema:
                type: "string"
                format: "binary"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_nome_allegato"
  /fruizioni/{erogatore}/{nome}/{versione}/url-invocazione:
    get:
      tags:
      - "fruizioni"
      summary: "Restituisce le informazioni sull'url di invocazione necessaria ad\
        \ invocare la fruizione"
      description: "Questa operazione consente di ottenere le informazioni sull'url\
        \ di invocazione necessaria ad invocare la fruizione identificata dall'erogatore,\
        \ dal nome e dalla versione"
      operationId: "getUrlInvocazione"
      responses:
        200:
          description: "Informazioni sull'url di invocazione restituite con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiImplUrlInvocazioneView"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "fruizioni"
      summary: "Consente di modificare la configurazione utilizzata per identificare\
        \ l'azione invocata dell'API implementata dalla fruizione"
      description: "Questa operazione consente di aggiornare la configurazione utilizzata\
        \ dal Gateway per identificare l'azione invocata"
      operationId: "updateUrlInvocazione"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiImplUrlInvocazione"
        required: true
      responses:
        204:
          description: "Configurazione della fruizione aggiornata correttamente"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
  /fruizioni/{erogatore}/{nome}/{versione}/connettore:
    get:
      tags:
      - "fruizioni"
      summary: "Restituisce le informazioni su connettore associato alla fruizione"
      description: "Questa operazione consente di ottenere le informazioni sul connettore\
        \ associato alla fruizione identificata dall'erogatore, dal nome e dalla versione"
      operationId: "getConnettore"
      responses:
        200:
          description: "Informazioni sul connettore restituite con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Connettore"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "fruizioni"
      summary: "Consente di modificare la configurazione del connettore associato\
        \ alla fruizione"
      description: "Questa operazione consente di aggiornare la configurazione del\
        \ connettore associato alla fruizione identificata dall'erogatore, dal nome\
        \ e dalla versione"
      operationId: "updateConnettore"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Connettore"
        required: true
      responses:
        204:
          description: "Configurazione della fruizione aggiornata correttamente"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
  /fruizioni/{erogatore}/{nome}/{versione}/configurazioni/gestione-cors:
    get:
      tags:
      - "fruizioni-configurazione"
      summary: "Restituisce le informazioni sulla configurazione CORS associata alla\
        \ fruizione"
      description: "Questa operazione consente di ottenere le informazioni sulla configurazione\
        \ CORS associata alla fruizione identificata dall'erogatore, dal nome e dalla\
        \ versione"
      operationId: "getGestioneCORS"
      responses:
        200:
          description: "Informazioni sulla configurazione CORS restituite con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GestioneCors"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "fruizioni-configurazione"
      summary: "Consente di modificare la configurazione CORS associata alla fruizione"
      description: "Questa operazione consente di aggiornare la configurazione CORS\
        \ associata alla fruizione identificata dall'erogatore, dal nome e dalla versione"
      operationId: "updateGestioneCORS"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GestioneCors"
        required: true
      responses:
        204:
          description: "Configurazione della fruizione aggiornata correttamente"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
  /fruizioni/{erogatore}/{nome}/{versione}/gruppi:
    get:
      tags:
      - "fruizioni-gruppi"
      summary: "Ricerca i gruppi in cui sono stati classificate le azioni o le risorse\
        \ dell'API"
      description: "Elenca i gruppi in cui sono stati classificate le azioni o le\
        \ risorse dell'API"
      operationId: "findAll"
      parameters:
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/offset"
      - $ref: "#/components/parameters/azione"
      responses:
        200:
          description: "Ricerca eseguita correttamente"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListaGruppi"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "fruizioni-gruppi"
      summary: "Creazione di un gruppo di azioni o risorse dell'API fruita"
      description: "Questa operazione consente di creare un gruppo di azioni o risorse\
        \ dell'API fruita"
      operationId: "create"
      requestBody:
        description: "Dati del gruppo di azioni o risorse che si vuole creare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Gruppo"
        required: true
      responses:
        201:
          description: "Gruppo creato con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        409:
          $ref: "#/components/responses/409Conflict"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
  /fruizioni/{erogatore}/{nome}/{versione}/gruppi/{nome_gruppo}:
    get:
      tags:
      - "fruizioni-gruppi"
      summary: "Restituisce azioni/risorse associate al gruppo identificato dal nome"
      description: "Questa operazione consente di ottenere le azioni associate al\
        \ gruppo identificato dal nome"
      operationId: "getAzioni"
      responses:
        200:
          description: "Elenco di azioni/risorse restituite con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GruppoAzioni"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "fruizioni-gruppi"
      summary: "Consente di modificare il nome del gruppo"
      description: "Questa operazione consente di aggiornare il nome di un gruppo"
      operationId: "updateNome"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GruppoNome"
        required: true
      responses:
        204:
          description: "Configurazione del gruppo aggiornata correttamente"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "fruizioni-gruppi"
      summary: "Elimina il gruppo identificato dal nome"
      description: "Questa operazione consente di eliminare il gruppo identificato\
        \ dal nome"
      operationId: "delete"
      responses:
        204:
          description: "Gruppo eliminate con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_nome_gruppo"
  /fruizioni/{erogatore}/{nome}/{versione}/gruppi/{nome_gruppo}/azioni:
    post:
      tags:
      - "fruizioni-gruppi"
      summary: "Aggiunta di azioni o risorse dell'API al gruppo"
      description: "Questa operazione consente di aggiungere azioni o risorse dell'API\
        \ al gruppo"
      operationId: "addAzioni"
      requestBody:
        description: "Azioni o risorse che si vuole aggiungere"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GruppoAzioni"
        required: true
      responses:
        201:
          description: "Azioni aggiunte con con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        409:
          $ref: "#/components/responses/409Conflict"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "fruizioni-gruppi"
      summary: "Elimina azioni o risorse dell'API associate al gruppo"
      description: "Questa operazione consente di eliminare azioni o risorse dell'API\
        \ associate al gruppo"
      operationId: "deleteAzioni"
      responses:
        204:
          description: "Azioni eliminate con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_nome_gruppo"
  /fruizioni/{erogatore}/{nome}/{versione}/configurazioni/stato:
    get:
      tags:
      - "fruizioni-configurazione"
      summary: "Restituisce l'indicazione sullo stato del gruppo"
      description: "Questa operazione consente di ottenere lo stato attuale del gruppo"
      operationId: "getStato"
      responses:
        200:
          description: "Dettaglio dello stato restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiImplStato"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "fruizioni-configurazione"
      summary: "Consente di modificare lo stato del gruppo"
      description: "Questa operazione consente di aggiornare lo stato del gruppo"
      operationId: "updateStato"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiImplStato"
        required: true
      responses:
        204:
          description: "Configurazione del gruppo aggiornata correttamente"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
  /fruizioni/{erogatore}/{nome}/{versione}/configurazioni/controllo-accessi/gestione-token:
    get:
      tags:
      - "fruizioni-configurazione"
      summary: "Restituisce la configurazione relativa alla gestione dei token per\
        \ quanto concerne il controllo degli accessi"
      description: "Questa operazione consente di ottenere la configurazione relativa\
        \ alla gestione dei token"
      operationId: "getControlloAccessiGestioneToken"
      responses:
        200:
          description: "Dettaglio della configurazione restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ControlloAccessiGestioneToken"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "fruizioni-configurazione"
      summary: "Consente di modificare la configurazione relativa alla gestione dei\
        \ token per quanto concerne il controllo degli accessi"
      description: "Questa operazione consente di aggiornare la configurazione relativa\
        \ alla gestione dei token"
      operationId: "updateControlloAccessiGestioneToken"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ControlloAccessiGestioneToken"
        required: true
      responses:
        204:
          description: "Configurazione aggiornata correttamente"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
  /fruizioni/{erogatore}/{nome}/{versione}/configurazioni/controllo-accessi/autenticazione:
    get:
      tags:
      - "fruizioni-configurazione"
      summary: "Restituisce la configurazione relativa all'autenticazione per quanto\
        \ concerne il controllo degli accessi"
      description: "Questa operazione consente di ottenere la configurazione relativa\
        \ all'autenticazione per quanto concerne il controllo degli accessi"
      operationId: "getControlloAccessiAutenticazione"
      responses:
        200:
          description: "Dettaglio della configurazione restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ControlloAccessiAutenticazione"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "fruizioni-configurazione"
      summary: "Consente di modificare la configurazione relativa all'autenticazione\
        \ per quanto concerne il controllo degli accessi"
      description: "Questa operazione consente di aggiornare la configurazione relativa\
        \ all'autenticazione per quanto concerne il controllo degli accessi"
      operationId: "updateControlloAccessiAutenticazione"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ControlloAccessiAutenticazione"
        required: true
      responses:
        204:
          description: "Configurazione aggiornata correttamente"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
  /fruizioni/{erogatore}/{nome}/{versione}/configurazioni/controllo-accessi/autorizzazione:
    get:
      tags:
      - "fruizioni-configurazione"
      summary: "Restituisce la configurazione relativa all'autorizzazione per quanto\
        \ concerne il controllo degli accessi"
      description: "Questa operazione consente di ottenere la configurazione relativa\
        \ all'autorizzazione per quanto concerne il controllo degli accessi"
      operationId: "getControlloAccessiAutorizzazione"
      responses:
        200:
          description: "Dettaglio della configurazione restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ControlloAccessiAutorizzazioneView"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "fruizioni-configurazione"
      summary: "Consente di modificare la configurazione relativa all'autorizzazione\
        \ per quanto concerne il controllo degli accessi"
      description: "Questa operazione consente di aggiornare la configurazione relativa\
        \ all'autorizzazione per quanto concerne il controllo degli accessi"
      operationId: "updateControlloAccessiAutorizzazione"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ControlloAccessiAutorizzazione"
        required: true
      responses:
        204:
          description: "Configurazione aggiornata correttamente"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
  /fruizioni/{erogatore}/{nome}/{versione}/configurazioni/controllo-accessi/autorizzazione/download-xacml-policy:
    get:
      tags:
      - "fruizioni-configurazione"
      summary: "Restituisce la policy XACML associata all'autorizzazione"
      description: "Questa operazione consente di ottenere la policy XACML associata\
        \ all'autorizzazione"
      operationId: "downloadControlloAccessiAutorizzazioneXacmlPolicy"
      responses:
        200:
          description: "Interfaccia dell'API restituita con successo"
          content:
            application/xml:
              schema:
                type: "string"
                format: "binary"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
  /fruizioni/{erogatore}/{nome}/{versione}/configurazioni/controllo-accessi/autorizzazione/applicativi:
    get:
      tags:
      - "fruizioni-configurazione"
      summary: "Restituisce l'elenco degli applicativi autorizzati puntualmente"
      description: "Questa operazione consente di ottenere l'elenco degli applicativi\
        \ autorizzati puntualmente"
      operationId: "getControlloAccessiAutorizzazionePuntualeApplicativi"
      responses:
        200:
          description: "Elenco applicativi autorizzati restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ControlloAccessiAutorizzazioneApplicativi"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "fruizioni-configurazione"
      summary: "Aggiunta di applicativi all'elenco degli applicativi autorizzati puntualmente"
      description: "Questa operazione consente di aggiungere applicativi all'elenco\
        \ degli applicativi autorizzati puntualmente"
      operationId: "addControlloAccessiAutorizzazionePuntualeApplicativi"
      requestBody:
        description: "Applicativi che si vuole aggiungere"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ControlloAccessiAutorizzazioneApplicativo"
        required: true
      responses:
        201:
          description: "Applicativi aggiunti con con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        409:
          $ref: "#/components/responses/409Conflict"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
  /fruizioni/{erogatore}/{nome}/{versione}/configurazioni/controllo-accessi/autorizzazione/applicativi/{applicativo_autorizzato}:
    delete:
      tags:
      - "fruizioni-configurazione"
      summary: "Elimina applicativi dall'elenco degli applicativi autorizzati puntualmente"
      description: "Questa operazione consente di eliminare applicativi dall'elenco\
        \ degli applicativi autorizzati puntualmente"
      operationId: "deleteControlloAccessiAutorizzazionePuntualeApplicativi"
      responses:
        204:
          description: "Applicativi eliminati con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_applicativo_autorizzato"
    - $ref: "#/components/parameters/gruppo"
  /fruizioni/{erogatore}/{nome}/{versione}/configurazioni/controllo-accessi/autorizzazione/ruoli:
    get:
      tags:
      - "fruizioni-configurazione"
      summary: "Restituisce l'elenco dei ruoli autorizzati"
      description: "Questa operazione consente di ottenere l'elenco dei ruoli autorizzati"
      operationId: "getControlloAccessiAutorizzazioneRuoli"
      responses:
        200:
          description: "Elenco ruoli autorizzati restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ControlloAccessiAutorizzazioneRuoli"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "fruizioni-configurazione"
      summary: "Aggiunta di ruoli all'elenco dei ruoli autorizzati"
      description: "Questa operazione consente di aggiungere ruoli all'elenco dei\
        \ ruoli autorizzati"
      operationId: "addControlloAccessiAutorizzazioneRuoli"
      requestBody:
        description: "Ruoli che si vuole aggiungere"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ControlloAccessiAutorizzazioneRuolo"
        required: true
      responses:
        201:
          description: "Ruoli aggiunti con con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        409:
          $ref: "#/components/responses/409Conflict"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
  /fruizioni/{erogatore}/{nome}/{versione}/configurazioni/controllo-accessi/autorizzazione/ruoli/{ruolo_autorizzato}:
    delete:
      tags:
      - "fruizioni-configurazione"
      summary: "Elimina ruoli dall'elenco dei ruoli autorizzati"
      description: "Questa operazione consente di eliminare ruoli dall'elenco dei\
        \ ruoli autorizzati"
      operationId: "deleteControlloAccessiAutorizzazioneRuoli"
      responses:
        204:
          description: "Ruoli eliminati con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_ruolo_autorizzato"
    - $ref: "#/components/parameters/gruppo"
  /fruizioni/{erogatore}/{nome}/{versione}/configurazioni/controllo-accessi/autorizzazione/scope:
    get:
      tags:
      - "fruizioni-configurazione"
      summary: "Restituisce l'elenco degli scope autorizzati"
      description: "Questa operazione consente di ottenere l'elenco degli scope autorizzati"
      operationId: "getControlloAccessiAutorizzazioneScope"
      responses:
        200:
          description: "Elenco scope autorizzati restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ControlloAccessiAutorizzazioneScopes"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "fruizioni-configurazione"
      summary: "Aggiunta di scope all'elenco degli scope autorizzati"
      description: "Questa operazione consente di aggiungere scope all'elenco degli\
        \ scope autorizzati"
      operationId: "addControlloAccessiAutorizzazioneScope"
      requestBody:
        description: "Scope che si vuole aggiungere"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ControlloAccessiAutorizzazioneScope"
        required: true
      responses:
        201:
          description: "Scope aggiunti con con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        409:
          $ref: "#/components/responses/409Conflict"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
  /fruizioni/{erogatore}/{nome}/{versione}/configurazioni/controllo-accessi/autorizzazione/scope/{scope_autorizzato}:
    delete:
      tags:
      - "fruizioni-configurazione"
      summary: "Elimina scope dall'elenco degli scope autorizzati"
      description: "Questa operazione consente di eliminare scope dall'elenco degli\
        \ scope autorizzati"
      operationId: "deleteControlloAccessiAutorizzazioneScope"
      responses:
        204:
          description: "Scope eliminati con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_scope_autorizzato"
    - $ref: "#/components/parameters/gruppo"
  /soggetti:
    get:
      tags:
      - "soggetti"
      summary: "Ricerca soggetti"
      description: "Elenca i soggetti registrati"
      operationId: "findAll"
      parameters:
      - $ref: "#/components/parameters/q"
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/offset"
      - $ref: "#/components/parameters/dominio"
      - $ref: "#/components/parameters/ruolo"
      responses:
        200:
          description: "Ricerca eseguita correttamente"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListaSoggetti"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "soggetti"
      summary: "Creazione di un soggetto"
      description: "Questa operazione consente di creare un soggetto"
      operationId: "create"
      requestBody:
        description: "Dati del soggetto che si vuole creare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Soggetto"
        required: true
      responses:
        201:
          description: "Soggetto creato con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        409:
          $ref: "#/components/responses/409Conflict"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
  /soggetti/{nome}:
    get:
      tags:
      - "soggetti"
      summary: "Restituisce il dettaglio di un soggetto"
      description: "Questa operazione consente di ottenere il dettaglio di un soggetto\
        \ identificato dal nome"
      operationId: "get"
      responses:
        200:
          description: "Dati del soggetto restituiti con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Soggetto"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "soggetti"
      summary: "Modifica i dati di un soggetto"
      description: "Questa operazione consente di aggiornare i dati di un soggetto\
        \ identificato dal nome"
      operationId: "update"
      requestBody:
        description: "Dati del soggetto da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Soggetto"
        required: true
      responses:
        204:
          description: "Il soggetto è stato aggiornato correttamente"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "soggetti"
      summary: "Elimina un soggetto"
      description: "Questa operazione consente di eliminare un soggetto identificato\
        \ dal nome"
      operationId: "delete"
      responses:
        204:
          description: "Soggetto eliminato con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/id_simple_name"
  /applicativi:
    get:
      tags:
      - "applicativi"
      summary: "Ricerca applicativi"
      description: "Elenca gli applicativi registrati"
      operationId: "findAll"
      parameters:
      - $ref: "#/components/parameters/q"
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/offset"
      - $ref: "#/components/parameters/ruolo"
      responses:
        200:
          description: "Ricerca eseguita correttamente"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListaApplicativi"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "applicativi"
      summary: "Creazione di un applicativo"
      description: "Questa operazione consente di creare un applicativo associato\
        \ ad un soggetto interno"
      operationId: "create"
      requestBody:
        description: "Dati dell'applicativo che si vuole creare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Applicativo"
        required: true
      responses:
        201:
          description: "Applicativo creato con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        409:
          $ref: "#/components/responses/409Conflict"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
  /applicativi/{nome}:
    get:
      tags:
      - "applicativi"
      summary: "Restituisce il dettaglio di un applicativo"
      description: "Questa operazione consente di ottenere il dettaglio di un applicativo\
        \ identificato dal nome e dal soggetto di riferimento"
      operationId: "get"
      responses:
        200:
          description: "Dati dell'applicativo restituiti con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Applicativo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "applicativi"
      summary: "Modifica i dati di un applicativo"
      description: "Questa operazione consente di aggiornare i dati di un applicativo\
        \ identificato dal nome e dal soggetto di riferimento"
      operationId: "update"
      requestBody:
        description: "Dati dell'applicativo da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Applicativo"
        required: true
      responses:
        204:
          description: "L'applicativo è stato aggiornato correttamente"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "applicativi"
      summary: "Elimina un applicativo"
      description: "Questa operazione consente di eliminare un applicativo identificato\
        \ dal nome e dal soggetto di riferimento"
      operationId: "delete"
      responses:
        204:
          description: "Applicativo eliminato con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
  /ruoli:
    get:
      tags:
      - "ruoli"
      summary: "Ricerca ruoli"
      description: "Elenca i ruoli registrati"
      operationId: "findAll"
      parameters:
      - $ref: "#/components/parameters/q"
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/offset"
      - $ref: "#/components/parameters/fonte"
      - $ref: "#/components/parameters/contesto"
      responses:
        200:
          description: "Ricerca eseguita correttamente"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListaRuoli"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "ruoli"
      summary: "Creazione di un ruolo"
      description: "Questa operazione consente di creare un ruolo"
      operationId: "create"
      requestBody:
        description: "Dati del ruolo che si vuole creare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Ruolo"
        required: true
      responses:
        201:
          description: "Ruolo creato con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        409:
          $ref: "#/components/responses/409Conflict"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
  /ruoli/{nome}:
    get:
      tags:
      - "ruoli"
      summary: "Restituisce il dettaglio di un ruolo"
      description: "Questa operazione consente di ottenere il dettaglio di un ruolo\
        \ identificato dal nome"
      operationId: "get"
      responses:
        200:
          description: "Dati del ruolo restituiti con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ruolo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "ruoli"
      summary: "Modifica i dati di un ruolo"
      description: "Questa operazione consente di aggiornare i dati di un ruolo identificato\
        \ dal nome"
      operationId: "update"
      requestBody:
        description: "Dati del ruolo da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Ruolo"
        required: true
      responses:
        204:
          description: "Il Ruolo è stato aggiornato correttamente"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "ruoli"
      summary: "Elimina un ruolo"
      description: "Questa operazione consente di eliminare un ruolo identificato\
        \ dal nome"
      operationId: "delete"
      responses:
        204:
          description: "Ruolo eliminato con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/id_ncname"
  /scope:
    get:
      tags:
      - "scope"
      summary: "Ricerca scope"
      description: "Elenca gli scope registrati"
      operationId: "findAll"
      parameters:
      - $ref: "#/components/parameters/q"
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/offset"
      - $ref: "#/components/parameters/contesto"
      responses:
        200:
          description: "Ricerca eseguita correttamente"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListaScope"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "scope"
      summary: "Creazione di uno scope"
      description: "Questa operazione consente di creare uno scope"
      operationId: "create"
      requestBody:
        description: "Dati dello scope che si vuole creare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Scope"
        required: true
      responses:
        201:
          description: "Scope creato con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        409:
          $ref: "#/components/responses/409Conflict"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
  /scope/{nome}:
    get:
      tags:
      - "scope"
      summary: "Restituisce il dettaglio di uno scope"
      description: "Questa operazione consente di ottenere il dettaglio di uno scope\
        \ identificato dal nome"
      operationId: "get"
      responses:
        200:
          description: "Dati dello scope restituiti con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Scope"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "scope"
      summary: "Modifica i dati di uno scope"
      description: "Questa operazione consente di aggiornare i dati di uno scope identificato\
        \ dal nome"
      operationId: "update"
      requestBody:
        description: "Dati dello scope da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Scope"
        required: true
      responses:
        204:
          description: "Lo scope è stato aggiornato correttamente"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "scope"
      summary: "Elimina uno scope"
      description: "Questa operazione consente di eliminare uno scope identificato\
        \ dal nome"
      operationId: "delete"
      responses:
        204:
          description: "Scope eliminato con successo"
        400:
          $ref: "#/components/responses/400BadRequest"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        404:
          $ref: "#/components/responses/404NotFound"
        429:
          $ref: "#/components/responses/429TooManyRequests"
        503:
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/id_ncname"
components:
  schemas:
    Api:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ApiBase"
      - type: "object"
        properties:
          interfaccia:
            type: "string"
            format: "byte"
    ApiItem:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/BaseSoggettoItem"
      - $ref: "#/components/schemas/ApiBase"
      - required:
        - "stato"
        - "stato_descrizione"
        type: "object"
        properties:
          stato:
            $ref: "#/components/schemas/StatoApiEnum"
          stato_descrizione:
            $ref: "#/components/schemas/StatoApiDescrizione"
    ListaApi:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/Lista"
      - required:
        - "items"
        type: "object"
        properties:
          items:
            type: "array"
            items:
              $ref: "#/components/schemas/ApiItem"
    ApiViewItem:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ApiItem"
    ApiInformazioniGenerali:
      required:
      - "nome"
      - "versione"
      type: "object"
      properties:
        nome:
          $ref: "#/components/schemas/NCName"
        versione:
          minimum: 1
          type: "integer"
          format: "int32"
          example: 1
    ApiInformazioniGeneraliView:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/BaseItem"
      - $ref: "#/components/schemas/ApiInformazioniGenerali"
    ApiReferente:
      required:
      - "referente"
      type: "object"
      properties:
        referente:
          $ref: "#/components/schemas/SimpleName"
    ApiReferenteView:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/BaseItem"
      - $ref: "#/components/schemas/ApiReferente"
    ApiInterfaccia:
      required:
      - "interfaccia"
      type: "object"
      properties:
        interfaccia:
          type: "string"
          format: "byte"
    ApiInterfacciaView:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/BaseItem"
      - $ref: "#/components/schemas/ApiInterfaccia"
      - required:
        - "formato"
        - "tipo"
        type: "object"
        properties:
          tipo:
            $ref: "#/components/schemas/TipoApiEnum"
          formato:
            type: "object"
            example:
              formato: "OpenApi3.0"
            discriminator:
              propertyName: "tipo"
              mapping:
                soap: "govway_rs-api_commons.yaml#/components/schemas/FormatoSoapEnum"
                rest: "govway_rs-api_commons.yaml#/components/schemas/FormatoRestEnum"
            oneOf:
            - $ref: "#/components/schemas/FormatoSoapEnum"
            - $ref: "#/components/schemas/FormatoRestEnum"
    ApiDescrizione:
      required:
      - "descrizione"
      type: "object"
      properties:
        descrizione:
          maxLength: 255
          type: "string"
          example: "descrizione API"
    ApiAllegato:
      required:
      - "allegato"
      - "ruolo"
      type: "object"
      properties:
        ruolo:
          $ref: "#/components/schemas/RuoloAllegatoAPI"
        allegato:
          type: "object"
          discriminator:
            propertyName: "ruolo"
            mapping:
              allegato: "govway_rs-api_commons.yaml#/components/schemas/AllegatoGenerico"
              specificaSemiFormale: "govway_rs-api_commons.yaml#/components/schemas/AllegatoSpecificaSemiformale"
          oneOf:
          - $ref: "#/components/schemas/AllegatoGenerico"
          - $ref: "#/components/schemas/AllegatoSpecificaSemiformale"
    ApiAllegatoItem:
      required:
      - "allegato"
      - "ruolo"
      type: "object"
      properties:
        ruolo:
          $ref: "#/components/schemas/RuoloAllegatoAPI"
        allegato:
          type: "object"
          discriminator:
            propertyName: "ruolo"
            mapping:
              allegato: "govway_rs-api_commons.yaml#/components/schemas/AllegatoGenericoItem"
              specificaSemiFormale: "govway_rs-api_commons.yaml#/components/schemas/AllegatoSpecificaSemiformaleItem"
          oneOf:
          - $ref: "#/components/schemas/AllegatoGenericoItem"
          - $ref: "#/components/schemas/AllegatoSpecificaSemiformaleItem"
    ListaApiAllegati:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/Lista"
      - required:
        - "items"
        type: "object"
        properties:
          items:
            type: "array"
            items:
              $ref: "#/components/schemas/ApiAllegatoItem"
    ApiRisorsa:
      required:
      - "http_method"
      - "path"
      type: "object"
      properties:
        http_method:
          $ref: "#/components/schemas/HttpMethodEnum"
        path:
          maxLength: 255
          type: "string"
          example: "/libri"
        nome:
          $ref: "#/components/schemas/NCName"
        descrizione:
          maxLength: 255
          type: "string"
        id_collaborazione:
          type: "boolean"
          default: false
        riferimento_id_richiesta:
          type: "boolean"
    ListaApiRisorse:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/Lista"
      - required:
        - "items"
        type: "object"
        properties:
          items:
            type: "array"
            items:
              $ref: "#/components/schemas/ApiRisorsa"
    ApiServizio:
      required:
      - "nome"
      - "profilo_collaborazione"
      type: "object"
      properties:
        nome:
          $ref: "#/components/schemas/NCName"
        descrizione:
          maxLength: 255
          type: "string"
        profilo_collaborazione:
          $ref: "#/components/schemas/ProfiloCollaborazioneEnum"
        id_collaborazione:
          type: "boolean"
          default: false
        riferimento_id_richiesta:
          type: "boolean"
    ListaApiServizi:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/Lista"
      - required:
        - "items"
        type: "object"
        properties:
          items:
            type: "array"
            items:
              $ref: "#/components/schemas/ApiServizio"
    ApiAzione:
      required:
      - "nome"
      - "profilo_ridefinito"
      type: "object"
      properties:
        nome:
          $ref: "#/components/schemas/NCName"
        profilo_ridefinito:
          type: "boolean"
          default: false
        profilo_collaborazione:
          $ref: "#/components/schemas/ProfiloCollaborazioneEnum"
        id_collaborazione:
          type: "boolean"
          default: false
        riferimento_id_richiesta:
          type: "boolean"
    ListaApiAzioni:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/Lista"
      - required:
        - "items"
        type: "object"
        properties:
          items:
            type: "array"
            items:
              $ref: "#/components/schemas/ApiAzione"
    Erogazione:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/APIImpl"
    ErogazioneItem:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ApiImplItem"
    ListaErogazioni:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/Lista"
      - required:
        - "items"
        type: "object"
        properties:
          items:
            type: "array"
            items:
              $ref: "#/components/schemas/ErogazioneItem"
    ErogazioneViewItem:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ApiImplViewItem"
    Fruizione:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/APIImpl"
      - required:
        - "erogatore"
        type: "object"
        properties:
          erogatore:
            $ref: "#/components/schemas/SimpleName"
    FruizioneItem:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ApiImplItem"
      - required:
        - "erogatore"
        type: "object"
        properties:
          erogatore:
            $ref: "#/components/schemas/SimpleName"
    ListaFruizioni:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/Lista"
      - required:
        - "items"
        type: "object"
        properties:
          items:
            type: "array"
            items:
              $ref: "#/components/schemas/FruizioneItem"
    FruizioneViewItem:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ApiImplViewItem"
      - required:
        - "erogatore"
        type: "object"
        properties:
          erogatore:
            $ref: "#/components/schemas/SimpleName"
    Soggetto:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/BaseCredenziali"
      - required:
        - "nome"
        type: "object"
        properties:
          nome:
            $ref: "#/components/schemas/SimpleName"
          dominio:
            $ref: "#/components/schemas/DominioEnum"
          descrizione:
            maxLength: 255
            type: "string"
            example: "descrizione del soggetto EnteEsterno"
          ruoli:
            type: "array"
            example:
            - "ruolo1"
            - "ruolo2"
            items:
              $ref: "#/components/schemas/NCName"
    SoggettoItem:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/BaseItem"
      - required:
        - "dominio"
        - "nome"
        type: "object"
        properties:
          nome:
            $ref: "#/components/schemas/SimpleName"
          dominio:
            $ref: "#/components/schemas/DominioEnum"
          count_ruoli:
            minimum: 0
            type: "integer"
            format: "int32"
            example: 0
    ListaSoggetti:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/Lista"
      - required:
        - "items"
        type: "object"
        properties:
          items:
            type: "array"
            items:
              $ref: "#/components/schemas/SoggettoItem"
    Applicativo:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/BaseCredenziali"
      - required:
        - "nome"
        type: "object"
        properties:
          nome:
            $ref: "#/components/schemas/NCName"
          ruoli:
            type: "array"
            example:
            - "ruolo1"
            - "ruolo2"
            items:
              $ref: "#/components/schemas/NCName"
    ApplicativoItem:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/BaseSoggettoItem"
      - required:
        - "nome"
        type: "object"
        properties:
          nome:
            $ref: "#/components/schemas/NCName"
          count_ruoli:
            minimum: 0
            type: "integer"
            format: "int32"
            example: 3
    ListaApplicativi:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/Lista"
      - required:
        - "items"
        type: "object"
        properties:
          items:
            type: "array"
            items:
              $ref: "#/components/schemas/ApplicativoItem"
    Ruolo:
      required:
      - "nome"
      type: "object"
      properties:
        nome:
          $ref: "#/components/schemas/NCName"
        descrizione:
          maxLength: 255
          type: "string"
          example: "descrizione del ruolo"
        fonte:
          $ref: "#/components/schemas/FonteEnum"
        identificativo_esterno:
          maxLength: 255
          type: "string"
          example: "urn://accesso_sola_lettura"
        contesto:
          $ref: "#/components/schemas/ContestoEnum"
    RuoloItem:
      required:
      - "contesto"
      - "fonte"
      - "nome"
      type: "object"
      properties:
        nome:
          $ref: "#/components/schemas/NCName"
        fonte:
          $ref: "#/components/schemas/FonteEnum"
        contesto:
          $ref: "#/components/schemas/ContestoEnum"
    ListaRuoli:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/Lista"
      - required:
        - "items"
        type: "object"
        properties:
          items:
            type: "array"
            items:
              $ref: "#/components/schemas/RuoloItem"
    Scope:
      required:
      - "nome"
      type: "object"
      properties:
        nome:
          $ref: "#/components/schemas/NCName"
        descrizione:
          maxLength: 255
          type: "string"
          example: "descrizione dello scope"
        identificativo_esterno:
          maxLength: 255
          type: "string"
          example: "urn://accesso_sola_lettura"
        contesto:
          $ref: "#/components/schemas/ContestoEnum"
    ScopeItem:
      required:
      - "contesto"
      - "nome"
      type: "object"
      properties:
        nome:
          $ref: "#/components/schemas/NCName"
        contesto:
          $ref: "#/components/schemas/ContestoEnum"
    ListaScope:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/Lista"
      - required:
        - "items"
        type: "object"
        properties:
          items:
            type: "array"
            items:
              $ref: "#/components/schemas/ScopeItem"
    Problem:
      type: "object"
      properties:
        type:
          type: "string"
          description: "An absolute URI that identifies the problem type.  When dereferenced,\n\
            it SHOULD provide human-readable documentation for the problem type\n\
            (e.g., using HTML).\n"
          format: "uri"
          example: "https://tools.ietf.org/html/rfc7231#section-6.6.4"
          default: "about:blank"
        title:
          type: "string"
          description: "A short, summary of the problem type. Written in english and\
            \ readable\nfor engineers (usually not suited for non technical stakeholders\
            \ and\nnot localized); example: Service Unavailable\n"
        status:
          maximum: 600
          exclusiveMaximum: true
          minimum: 100
          type: "integer"
          description: "The HTTP status code generated by the origin server for this\
            \ occurrence\nof the problem.\n"
          format: "int32"
          example: 503
        detail:
          type: "string"
          description: "A human readable explanation specific to this occurrence of\
            \ the\nproblem.\n"
          example: "Connection to database timed out"
        instance:
          type: "string"
          description: "An absolute URI that identifies the specific occurrence of\
            \ the problem.\nIt may or may not yield further information if dereferenced."
          format: "uri"
    SimpleName:
      maxLength: 255
      pattern: "^[0-9A-Za-z]+$"
      type: "string"
      description: "Formato solo da caratteri e cifre"
    NCName:
      maxLength: 255
      pattern: "^[_A-Za-z][\\\\-\\\\._A-Za-z0-9]*$"
      type: "string"
      description: "Può iniziare solo con un carattere [A-Za-z] o il simbolo '_' e\
        \ dev'essere formato solo da caratteri, cifre, '_' , '-' e '.'"
    BaseItem:
      required:
      - "profilo"
      type: "object"
      properties:
        profilo:
          $ref: "#/components/schemas/ProfiloEnum"
    BaseSoggettoItem:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/BaseItem"
      - required:
        - "soggetto"
        type: "object"
        properties:
          soggetto:
            $ref: "#/components/schemas/SimpleName"
    StatoApiDescrizione:
      type: "string"
      example: "Nessuna risorsa definita nella API"
    Versione:
      minimum: 1
      type: "integer"
      format: "int32"
      example: 1
      default: 1
    ApiBase:
      required:
      - "formato"
      - "nome"
      - "tipo"
      - "versione"
      type: "object"
      properties:
        referente:
          type: "string"
        tipo:
          $ref: "#/components/schemas/TipoApiEnum"
        nome:
          $ref: "#/components/schemas/NCName"
        descrizione:
          maxLength: 255
          type: "string"
          example: "descrizione API"
        versione:
          $ref: "#/components/schemas/Versione"
        formato:
          type: "object"
          example:
            formato: "OpenApi3.0"
          discriminator:
            propertyName: "tipo"
            mapping:
              soap: "govway_rs-api_commons.yaml#/components/schemas/FormatoSoapEnum"
              rest: "govway_rs-api_commons.yaml#/components/schemas/FormatoRestEnum"
          oneOf:
          - $ref: "#/components/schemas/FormatoSoapEnum"
          - $ref: "#/components/schemas/FormatoRestEnum"
    AllegatoGenerico:
      required:
      - "documento"
      - "nome"
      type: "object"
      properties:
        nome:
          $ref: "#/components/schemas/NCName"
        documento:
          type: "string"
          format: "byte"
    AllegatoSpecificaSemiformale:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/AllegatoGenerico"
      - required:
        - "tipo"
        type: "object"
        properties:
          tipo:
            $ref: "#/components/schemas/TipoSpecificaSemiformaleEnum"
    AllegatoSpecificaSicurezza:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/AllegatoGenerico"
      - required:
        - "tipo"
        type: "object"
        properties:
          tipo:
            $ref: "#/components/schemas/TipoSpecificaSicurezzaEnum"
    AllegatoSpecificaLivelloServizio:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/AllegatoGenerico"
      - required:
        - "tipo"
        type: "object"
        properties:
          tipo:
            $ref: "#/components/schemas/TipoSpecificaLivelloServizioEnum"
    AllegatoGenericoItem:
      required:
      - "nome"
      type: "object"
      properties:
        nome:
          $ref: "#/components/schemas/NCName"
    AllegatoSpecificaSemiformaleItem:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/AllegatoGenericoItem"
      - required:
        - "tipo"
        type: "object"
        properties:
          tipo:
            $ref: "#/components/schemas/TipoSpecificaSemiformaleEnum"
    AllegatoSpecificaSicurezzaItem:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/AllegatoGenericoItem"
      - required:
        - "tipo"
        type: "object"
        properties:
          tipo:
            $ref: "#/components/schemas/TipoSpecificaSicurezzaEnum"
    AllegatoSpecificaLivelloServizioItem:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/AllegatoGenericoItem"
      - required:
        - "tipo"
        type: "object"
        properties:
          tipo:
            $ref: "#/components/schemas/TipoSpecificaLivelloServizioEnum"
    AuthenticationHttpBasic:
      required:
      - "password"
      - "username"
      type: "object"
      properties:
        username:
          maxLength: 255
          type: "string"
          example: "user"
        password:
          maxLength: 255
          type: "string"
          format: "password"
          example: "pwd"
    AuthenticationHttps:
      required:
      - "subject"
      type: "object"
      properties:
        subject:
          maxLength: 255
          type: "string"
          example: "cn=esterno"
    AuthenticationPrincipal:
      required:
      - "userid"
      type: "object"
      properties:
        userid:
          maxLength: 255
          type: "string"
          example: "idEsterno"
    BaseCredenziali:
      type: "object"
      properties:
        modalita_accesso:
          $ref: "#/components/schemas/ModalitaAccessoEnum"
        credenziali:
          type: "object"
          example:
            username: "user"
            password: "pwd"
          discriminator:
            propertyName: "modalita_accesso"
            mapping:
              http-basic: "#/components/schemas/AuthenticationHttpBasic"
              https: "#/components/schemas/AuthenticationHttps"
              principal: "#/components/schemas/AuthenticationPrincipal"
          oneOf:
          - $ref: "#/components/schemas/AuthenticationHttpBasic"
          - $ref: "#/components/schemas/AuthenticationHttps"
          - $ref: "#/components/schemas/AuthenticationPrincipal"
    ConnettoreConfigurazioneHttps:
      required:
      - "server"
      - "tipologia"
      type: "object"
      properties:
        tipologia:
          $ref: "#/components/schemas/SslTipologiaEnum"
        hostname_verifier:
          type: "boolean"
          default: true
        server:
          $ref: "#/components/schemas/ConnettoreConfigurazioneHttpsServer"
        client:
          $ref: "#/components/schemas/ConnettoreConfigurazioneHttpsClient"
    ConnettoreConfigurazioneHttpsServer:
      required:
      - "truststore_password"
      - "truststore_path"
      - "truststore_tipo"
      type: "object"
      properties:
        truststore_path:
          maxLength: 255
          type: "string"
          example: "/path/to/truststore"
        truststore_tipo:
          $ref: "#/components/schemas/KeystoreEnum"
        truststore_password:
          maxLength: 255
          type: "string"
          format: "password"
          example: "pwd"
        algoritmo:
          maxLength: 255
          type: "string"
          example: "PKIX"
          default: "PKIX"
    ConnettoreConfigurazioneHttpsClient:
      required:
      - "key_password"
      - "keystore_password"
      - "keystore_path"
      - "keystore_tipo"
      type: "object"
      properties:
        keystore_path:
          maxLength: 255
          type: "string"
          example: "/path/to/keystore"
        keystore_tipo:
          $ref: "#/components/schemas/KeystoreEnum"
        keystore_password:
          maxLength: 255
          type: "string"
          format: "password"
          example: "pwd"
        key_password:
          maxLength: 255
          type: "string"
          description: "password della chiave privata"
          format: "password"
          example: "pwd"
        algoritmo:
          maxLength: 255
          type: "string"
          example: "SunX509"
          default: "SunX509"
    ConnettoreConfigurazioneProxy:
      required:
      - "hostname"
      - "porta"
      type: "object"
      properties:
        hostname:
          maxLength: 255
          type: "string"
          format: "hostname"
          example: "proxy.ente.it"
        porta:
          maximum: 65535
          minimum: 1
          type: "integer"
          format: "int32"
          example: 8080
        username:
          maxLength: 255
          type: "string"
          example: "user"
        password:
          maxLength: 255
          type: "string"
          format: "password"
          example: "pwd"
    ConnettoreConfigurazioneTimeout:
      required:
      - "connection_read_timeout"
      - "connection_timeout"
      - "tempo_medio_risposta"
      type: "object"
      properties:
        connection_timeout:
          type: "integer"
          description: "tempo massimo (in millisecondi) per instaurare una connessione"
          format: "int32"
          example: 10000
        connection_read_timeout:
          type: "integer"
          description: "tempo massimo (in millisecondi) per ricevere una risposta"
          format: "int32"
          example: 150000
        tempo_medio_risposta:
          type: "integer"
          description: "tempo medio (in millisecondi) atteso per ricevere una risposta"
          format: "int32"
          example: 10000
    Connettore:
      required:
      - "endpoint"
      type: "object"
      properties:
        endpoint:
          type: "string"
          format: "url"
          example: "http://ente.it/servizio"
        autenticazione_http:
          $ref: "#/components/schemas/AuthenticationHttpBasic"
        autenticazione_https:
          $ref: "#/components/schemas/ConnettoreConfigurazioneHttps"
        proxy:
          $ref: "#/components/schemas/ConnettoreConfigurazioneProxy"
        tempi_risposta:
          $ref: "#/components/schemas/ConnettoreConfigurazioneTimeout"
    APIImplTipoServizio:
      maxLength: 20
      type: "string"
    APIBaseImpl:
      required:
      - "api_nome"
      - "api_versione"
      type: "object"
      properties:
        api_nome:
          $ref: "#/components/schemas/NCName"
        api_versione:
          $ref: "#/components/schemas/Versione"
        api_soap_servizio:
          $ref: "#/components/schemas/NCName"
        tipo_servizio:
          $ref: "#/components/schemas/APIImplTipoServizio"
    APIImpl:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/APIBaseImpl"
      - required:
        - "connettore"
        type: "object"
        properties:
          autenticazione:
            $ref: "#/components/schemas/APIImplAutenticazioneNew"
          autorizzazione:
            $ref: "#/components/schemas/APIImplAutorizzazioneNew"
          connettore:
            $ref: "#/components/schemas/Connettore"
    APIImplAutenticazioneNew:
      required:
      - "tipo"
      type: "object"
      properties:
        tipo:
          $ref: "#/components/schemas/TipoAutenticazioneNewEnum"
        opzionale:
          type: "boolean"
          default: false
    APIImplAutenticazione:
      required:
      - "tipo"
      type: "object"
      properties:
        tipo:
          $ref: "#/components/schemas/TipoAutenticazioneEnum"
        opzionale:
          type: "boolean"
          default: false
        nome:
          maxLength: 255
          type: "string"
          description: "nome autenticazione 'custom', set tipo='custom'"
    APIImplAutorizzazioneNew:
      required:
      - "tipo"
      type: "object"
      properties:
        tipo:
          $ref: "#/components/schemas/TipoAutorizzazioneNewEnum"
        configurazione:
          type: "object"
          discriminator:
            propertyName: "tipo"
            mapping:
              abilitato: "govway_rs-api_commons.yaml#/components/schemas/APIImplAutorizzazioneConfigNew"
              xacml-Policy: "govway_rs-api_commons.yaml#/components/schemas/APIImplAutorizzazioneXACMLConfig"
          oneOf:
          - $ref: "#/components/schemas/APIImplAutorizzazioneConfigNew"
          - $ref: "#/components/schemas/APIImplAutorizzazioneXACMLConfig"
    APIImplAutorizzazioneView:
      required:
      - "tipo"
      type: "object"
      properties:
        tipo:
          $ref: "#/components/schemas/TipoAutorizzazioneEnum"
        configurazione:
          type: "object"
          discriminator:
            propertyName: "tipo"
            mapping:
              abilitato: "govway_rs-api_commons.yaml#/components/schemas/APIImplAutorizzazioneConfig"
              xacml-Policy: "govway_rs-api_commons.yaml#/components/schemas/APIImplAutorizzazioneXACMLBaseConfig"
              custom: "govway_rs-api_commons.yaml#/components/schemas/APIImplAutorizzazioneCustom"
          oneOf:
          - $ref: "#/components/schemas/APIImplAutorizzazioneConfig"
          - $ref: "#/components/schemas/APIImplAutorizzazioneXACMLBaseConfig"
          - $ref: "#/components/schemas/APIImplAutorizzazioneCustom"
    APIImplAutorizzazione:
      required:
      - "tipo"
      type: "object"
      properties:
        tipo:
          $ref: "#/components/schemas/TipoAutorizzazioneEnum"
        configurazione:
          type: "object"
          discriminator:
            propertyName: "tipo"
            mapping:
              abilitato: "govway_rs-api_commons.yaml#/components/schemas/APIImplAutorizzazioneConfig"
              xacml-Policy: "govway_rs-api_commons.yaml#/components/schemas/APIImplAutorizzazioneXACMLConfig"
              custom: "govway_rs-api_commons.yaml#/components/schemas/APIImplAutorizzazioneCustom"
          oneOf:
          - $ref: "#/components/schemas/APIImplAutorizzazioneConfig"
          - $ref: "#/components/schemas/APIImplAutorizzazioneXACMLConfig"
          - $ref: "#/components/schemas/APIImplAutorizzazioneCustom"
    APIImplAutorizzazioneBaseConfig:
      type: "object"
      properties:
        puntuale:
          type: "boolean"
          default: true
        ruoli:
          type: "boolean"
          default: false
        ruoli_fonte:
          $ref: "#/components/schemas/FonteEnum"
        ruoli_richiesti:
          $ref: "#/components/schemas/AllAnyEnum"
    APIImplAutorizzazioneConfigNew:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/APIImplAutorizzazioneBaseConfig"
      - type: "object"
        properties:
          soggetto:
            $ref: "#/components/schemas/SimpleName"
          ruolo:
            $ref: "#/components/schemas/NCName"
    APIImplAutorizzazioneConfig:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/APIImplAutorizzazioneBaseConfig"
      - type: "object"
        properties:
          scope:
            type: "boolean"
            default: false
          scope_richiesti:
            $ref: "#/components/schemas/AllAnyEnum"
          token:
            type: "boolean"
            default: false
          token_claims:
            maxLength: 4000
            type: "string"
            description: "Indicare per riga i claims richiesti (nome=valore); è possibile\
              \ elencare differenti valori ammissibili separandoli con la virgola"
    APIImplAutorizzazioneXACMLBaseConfig:
      required:
      - "ruoli_fonte"
      type: "object"
      properties:
        ruoli_fonte:
          $ref: "#/components/schemas/FonteEnum"
    APIImplAutorizzazioneXACMLConfig:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/APIImplAutorizzazioneXACMLBaseConfig"
      - required:
        - "policy"
        type: "object"
        properties:
          policy:
            type: "string"
            format: "byte"
    APIImplAutorizzazioneCustom:
      required:
      - "nome"
      type: "object"
      properties:
        nome:
          maxLength: 255
          type: "string"
    ApiImplItem:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/BaseSoggettoItem"
      - $ref: "#/components/schemas/APIBaseImpl"
      - required:
        - "nome"
        - "stato"
        - "stato_descrizione"
        - "versione"
        type: "object"
        properties:
          nome:
            $ref: "#/components/schemas/NCName"
          versione:
            $ref: "#/components/schemas/Versione"
          api_tipo:
            $ref: "#/components/schemas/TipoApiEnum"
          stato:
            $ref: "#/components/schemas/StatoApiEnum"
          stato_descrizione:
            $ref: "#/components/schemas/StatoApiDescrizione"
    ApiImplViewItem:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ApiImplItem"
      - required:
        - "connettore"
        - "gestione_cors"
        - "url_invocazione"
        type: "object"
        properties:
          url_invocazione:
            type: "string"
            format: "url"
          connettore:
            type: "string"
          gestione_cors:
            type: "string"
    ApiImplInformazioniGenerali:
      required:
      - "nome"
      type: "object"
      properties:
        tipo:
          $ref: "#/components/schemas/APIImplTipoServizio"
        nome:
          $ref: "#/components/schemas/NCName"
        api_soap_servizio:
          $ref: "#/components/schemas/NCName"
    ApiImplInformazioniGeneraliView:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/BaseItem"
      - $ref: "#/components/schemas/ApiImplInformazioniGenerali"
    ApiImplVersioneApi:
      required:
      - "api_versione"
      type: "object"
      properties:
        api_versione:
          $ref: "#/components/schemas/Versione"
    ApiImplVersioneApiView:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/BaseSoggettoItem"
      - $ref: "#/components/schemas/APIBaseImpl"
      - required:
        - "versioni"
        type: "object"
        properties:
          versioni:
            type: "array"
            example:
            - 1
            - 2
            - 3
            items:
              $ref: "#/components/schemas/Versione"
    ApiImplModalitaIdentificazioneAzione:
      required:
      - "modalita"
      type: "object"
      properties:
        modalita:
          $ref: "#/components/schemas/ModalitaIdentificazioneAzioneEnum"
        pattern:
          maxLength: 255
          type: "string"
          description: "XPath/JsonPath nel caso di modalità 'content-based' o espressione\
            \ regolare nel caso 'url-based'"
        nome:
          maxLength: 255
          type: "string"
          description: "Nome dell'header http nel caso di modalità 'header-based'"
        force_interface:
          type: "boolean"
          description: "Indicazione se oltre alla modalità indicata per individuare\
            \ l'azione viene usata comunque la modalità 'interface-based'"
          default: true
        azioni:
          type: "array"
          example:
          - "az1"
          - "az2"
          - "az3"
          items:
            $ref: "#/components/schemas/NCName"
    ApiImplUrlInvocazione:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ApiImplModalitaIdentificazioneAzione"
    ApiImplUrlInvocazioneView:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ApiImplModalitaIdentificazioneAzione"
      - required:
        - "url_invocazione"
        type: "object"
        properties:
          url_invocazione:
            type: "string"
            format: "url"
    ApiImplAllegato:
      required:
      - "allegato"
      - "ruolo"
      type: "object"
      properties:
        ruolo:
          $ref: "#/components/schemas/RuoloAllegatoAPIImpl"
        allegato:
          type: "object"
          discriminator:
            propertyName: "ruolo"
            mapping:
              allegato: "govway_rs-api_commons.yaml#/components/schemas/AllegatoGenerico"
              specificaSemiFormale: "govway_rs-api_commons.yaml#/components/schemas/AllegatoSpecificaSemiformale"
              specificaSicurezza: "govway_rs-api_commons.yaml#/components/schemas/AllegatoSpecificaSicurezza"
              specificaLivelloServizio: "govway_rs-api_commons.yaml#/components/schemas/AllegatoSpecificaLivelloServizio"
          oneOf:
          - $ref: "#/components/schemas/AllegatoGenerico"
          - $ref: "#/components/schemas/AllegatoSpecificaSemiformale"
          - $ref: "#/components/schemas/AllegatoSpecificaSicurezza"
          - $ref: "#/components/schemas/AllegatoSpecificaLivelloServizio"
    ApiImplAllegatoItem:
      required:
      - "allegato"
      - "ruolo"
      type: "object"
      properties:
        ruolo:
          $ref: "#/components/schemas/RuoloAllegatoAPIImpl"
        allegato:
          type: "object"
          discriminator:
            propertyName: "ruolo"
            mapping:
              allegato: "govway_rs-api_commons.yaml#/components/schemas/AllegatoGenericoItem"
              specificaSemiFormale: "govway_rs-api_commons.yaml#/components/schemas/AllegatoSpecificaSemiformaleItem"
              specificaSicurezza: "govway_rs-api_commons.yaml#/components/schemas/AllegatoSpecificaSicurezzaItem"
              specificaLivelloServizio: "govway_rs-api_commons.yaml#/components/schemas/AllegatoSpecificaLivelloServizioItem"
          oneOf:
          - $ref: "#/components/schemas/AllegatoGenericoItem"
          - $ref: "#/components/schemas/AllegatoSpecificaSemiformaleItem"
          - $ref: "#/components/schemas/AllegatoSpecificaSicurezzaItem"
          - $ref: "#/components/schemas/AllegatoSpecificaLivelloServizioItem"
    ListaApiImplAllegati:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/Lista"
      - required:
        - "items"
        type: "object"
        properties:
          items:
            type: "array"
            items:
              $ref: "#/components/schemas/ApiImplAllegatoItem"
    GruppoNome:
      required:
      - "nome"
      type: "object"
      properties:
        nome:
          maxLength: 255
          type: "string"
    GruppoAzioni:
      required:
      - "azioni"
      type: "object"
      properties:
        azioni:
          type: "array"
          example:
          - "az1"
          - "az2"
          - "az3"
          items:
            $ref: "#/components/schemas/NCName"
    GruppoBase:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/GruppoNome"
      - $ref: "#/components/schemas/GruppoAzioni"
    Gruppo:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/GruppoBase"
      - required:
        - "modalita"
        type: "object"
        properties:
          modalita:
            $ref: "#/components/schemas/ModalitaConfigurazioneGruppoEnum"
          configurazione:
            type: "object"
            discriminator:
              propertyName: "modalita"
              mapping:
                eredita: "govway_rs-api_commons.yaml#/components/schemas/GruppoEreditaConfigurazione"
                nuova: "govway_rs-api_commons.yaml#/components/schemas/GruppoNuovaConfigurazione"
            oneOf:
            - $ref: "#/components/schemas/GruppoEreditaConfigurazione"
            - $ref: "#/components/schemas/GruppoNuovaConfigurazione"
    GruppoEreditaConfigurazione:
      required:
      - "nome"
      type: "object"
      properties:
        nome:
          maxLength: 255
          type: "string"
    GruppoNuovaConfigurazione:
      required:
      - "autenticazione"
      type: "object"
      properties:
        autenticazione:
          $ref: "#/components/schemas/APIImplAutenticazioneNew"
    GruppoItem:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/GruppoBase"
      - required:
        - "predefinito"
        type: "object"
        properties:
          predefinito:
            type: "boolean"
    ListaGruppi:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/Lista"
      - required:
        - "items"
        type: "object"
        properties:
          items:
            type: "array"
            items:
              $ref: "#/components/schemas/GruppoItem"
    GestioneCorsAccessControl:
      required:
      - "all_allow_origins"
      type: "object"
      properties:
        all_allow_origins:
          type: "boolean"
          default: true
        allow_origins:
          type: "array"
          items:
            maxLength: 255
            type: "string"
        allow_headers:
          type: "array"
          items:
            maxLength: 255
            type: "string"
        allow_methods:
          type: "array"
          items:
            $ref: "#/components/schemas/HttpMethodEnum"
        allow_credentials:
          type: "boolean"
          default: false
    GestioneCors:
      required:
      - "ridefinito"
      type: "object"
      properties:
        ridefinito:
          type: "boolean"
          default: false
        tipo:
          $ref: "#/components/schemas/TipoGestioneCorsEnum"
        access_control:
          $ref: "#/components/schemas/GestioneCorsAccessControl"
    ApiImplStato:
      required:
      - "abilitato"
      type: "object"
      properties:
        abilitato:
          type: "boolean"
    ApiImplConfigurazioneStato:
      required:
      - "ridefinito"
      type: "object"
      properties:
        ridefinito:
          type: "boolean"
          description: "funzionalità non supportata al momento, indicare sempre 'true'."
          default: true
    ControlloAccessiGestioneToken:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ApiImplConfigurazioneStato"
      - type: "object"
        properties:
          abilitato:
            type: "boolean"
            description: "indica se la gestione del token è abilitata o meno"
          policy:
            maxLength: 255
            type: "string"
            description: "identificativo della Policy da utilizzare per la gestione\
              \ del token"
          token_opzionale:
            type: "boolean"
            description: "indica se la presenza del token è obbligatoria o opzionale"
            default: false
          validazione_jwt:
            $ref: "#/components/schemas/StatoFunzionalitaConWarningEnum"
          introspection:
            $ref: "#/components/schemas/StatoFunzionalitaConWarningEnum"
          user_info:
            $ref: "#/components/schemas/StatoFunzionalitaConWarningEnum"
          token_forward:
            type: "boolean"
            description: "indica se il forward del token, nelle modalità descritte\
              \ nella policy, è attivo o meno"
            default: true
    ControlloAccessiAutenticazione:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ApiImplConfigurazioneStato"
      - type: "object"
        properties:
          autenticazione:
            $ref: "#/components/schemas/APIImplAutenticazione"
          token:
            $ref: "#/components/schemas/ControlloAccessiAutenticazioneToken"
    ControlloAccessiAutenticazioneToken:
      type: "object"
      properties:
        issuer:
          type: "boolean"
          description: "indica se nel token deve essere obbligatoriamente presente\
            \ l'issuer"
          default: false
        client_id:
          type: "boolean"
          description: "indica se nel token deve essere obbligatoriamente presente\
            \ l'identificativo dell'applicazione"
          default: false
        subject:
          type: "boolean"
          description: "indica se nel token deve essere obbligatoriamente presente\
            \ il subject (identificativo utente codificato)"
          default: false
        username:
          type: "boolean"
          description: "indica se nel token deve essere obbligatoriamente presente\
            \ l'utente (identificativo utente 'human-readable')"
          default: false
        email:
          type: "boolean"
          description: "indica se nel token deve essere obbligatoriamente presente\
            \ l'email dell'utente"
          default: false
    ControlloAccessiAutorizzazioneView:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ApiImplConfigurazioneStato"
      - type: "object"
        properties:
          autorizzazione:
            $ref: "#/components/schemas/APIImplAutorizzazioneView"
    ControlloAccessiAutorizzazione:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ApiImplConfigurazioneStato"
      - type: "object"
        properties:
          autorizzazione:
            $ref: "#/components/schemas/APIImplAutorizzazione"
    ControlloAccessiAutorizzazioneSoggetti:
      required:
      - "soggetti"
      type: "object"
      properties:
        soggetti:
          type: "array"
          example:
          - "Ente1"
          - "Ente2"
          - "Ente3"
          items:
            $ref: "#/components/schemas/SimpleName"
    ControlloAccessiAutorizzazioneSoggetto:
      required:
      - "soggetto"
      type: "object"
      properties:
        soggetto:
          $ref: "#/components/schemas/SimpleName"
    ControlloAccessiAutorizzazioneApplicativi:
      required:
      - "applicativi"
      type: "object"
      properties:
        applicativi:
          type: "array"
          example:
          - "Applicativo1"
          - "Applicativo2"
          - "Applicativo3"
          items:
            $ref: "#/components/schemas/NCName"
    ControlloAccessiAutorizzazioneApplicativo:
      required:
      - "applicativo"
      type: "object"
      properties:
        applicativo:
          $ref: "#/components/schemas/NCName"
    ControlloAccessiAutorizzazioneRuoli:
      required:
      - "ruoli"
      type: "object"
      properties:
        ruoli:
          type: "array"
          example:
          - "Ruolo1"
          - "Ruolo2"
          - "Ruolo3"
          items:
            $ref: "#/components/schemas/NCName"
    ControlloAccessiAutorizzazioneRuolo:
      required:
      - "ruolo"
      type: "object"
      properties:
        ruolo:
          $ref: "#/components/schemas/NCName"
    ControlloAccessiAutorizzazioneScopes:
      required:
      - "scope"
      type: "object"
      properties:
        scope:
          type: "array"
          example:
          - "Scope1"
          - "Scope2"
          - "Scope3"
          items:
            $ref: "#/components/schemas/NCName"
    ControlloAccessiAutorizzazioneScope:
      required:
      - "scope"
      type: "object"
      properties:
        scope:
          $ref: "#/components/schemas/NCName"
    Lista:
      required:
      - "limit"
      - "offset"
      - "total"
      type: "object"
      properties:
        limit:
          type: "integer"
          description: "How many items to return at one time"
          format: "int32"
        offset:
          type: "integer"
          description: "The zero-ary offset index into the results"
          format: "int64"
        total:
          minimum: 0
          type: "integer"
          description: "Number of items matching the filter criteria"
          format: "int64"
        first:
          type: "string"
          description: "Link to first result page. Null if you are already on first\
            \ page."
        next:
          type: "string"
          description: "Link to next result page. Null if you are on last page."
        prev:
          type: "string"
          description: "Link to previous result page. Null if you are on first page."
        last:
          type: "string"
          description: "Link to last result page. Null if you are already on last\
            \ page."
    ProfiloEnum:
      type: "string"
      enum:
      - "APIGateway"
      - "SPCoop"
      - "FatturaPA"
      - "eDelivery"
      default: "APIGateway"
    FormatoSoapEnum:
      type: "string"
      enum:
      - "Wsdl1.1"
      default: "Wsdl1.1"
    FormatoRestEnum:
      type: "string"
      enum:
      - "Wadl"
      - "Swagger2.0"
      - "OpenApi3.0"
      default: "OpenApi3.0"
    TipoApiEnum:
      type: "string"
      example: "rest"
      enum:
      - "soap"
      - "rest"
    StatoApiEnum:
      type: "string"
      enum:
      - "ok"
      - "warn"
      - "error"
    DominioEnum:
      type: "string"
      example: "esterno"
      enum:
      - "interno"
      - "esterno"
    ModalitaAccessoEnum:
      type: "string"
      example: "http-basic"
      enum:
      - "http-basic"
      - "https"
      - "principal"
    ContestoEnum:
      type: "string"
      example: "qualsiasi"
      enum:
      - "qualsiasi"
      - "erogazione"
      - "fruizione"
      default: "qualsiasi"
    FonteEnum:
      type: "string"
      example: "qualsiasi"
      enum:
      - "qualsiasi"
      - "registro"
      - "esterna"
      default: "qualsiasi"
    RuoloAllegatoAPI:
      type: "string"
      example: "specificaSemiFormale"
      enum:
      - "allegato"
      - "specificaSemiFormale"
      default: "allegato"
    RuoloAllegatoAPIImpl:
      type: "string"
      example: "specificaSemiFormale"
      enum:
      - "allegato"
      - "specificaSemiFormale"
      - "specificaSicurezza"
      - "specificaLivelloServizio"
      default: "allegato"
    TipoSpecificaSemiformaleEnum:
      type: "string"
      example: "XML"
      enum:
      - "UML"
      - "HTML"
      - "XSD"
      - "XML"
      - "JSON"
      - "YAML"
      - "Linguaggio Naturale"
    TipoSpecificaSicurezzaEnum:
      type: "string"
      example: "XACML-Policy"
      enum:
      - "WS-Policy"
      - "XACML-Policy"
      - "Linguaggio Naturale"
    TipoSpecificaLivelloServizioEnum:
      type: "string"
      example: "WSLA"
      enum:
      - "WS-Agreement"
      - "WSLA"
    HttpMethodEnum:
      type: "string"
      example: "POST"
      enum:
      - "Qualsiasi"
      - "GET"
      - "POST"
      - "PUT"
      - "DELETE"
      - "OPTIONS"
      - "HEAD"
      - "TRACE"
      - "PATCH"
      - "LINK"
      - "UNLINK"
    ProfiloCollaborazioneEnum:
      type: "string"
      example: "sincrono"
      enum:
      - "oneway"
      - "sincrono"
      - "asincronoSimmetrico"
      - "asincronoAsimmetrico"
    SslTipologiaEnum:
      type: "string"
      example: "TLSv1.2"
      enum:
      - "SSLv2Hello"
      - "SSLv3"
      - "TLSv1"
      - "TLSv1.1"
      - "TLSv1.2"
      default: "TLSv1.2"
    KeystoreEnum:
      type: "string"
      example: "jks"
      enum:
      - "jks"
      - "pkcs12"
      - "jceks"
      - "bks"
      - "uber"
      - "gkr"
    TipoAutenticazioneNewEnum:
      type: "string"
      example: "http-basic"
      enum:
      - "disabilitato"
      - "http-basic"
      - "https"
      - "principal"
    TipoAutenticazioneEnum:
      type: "string"
      example: "http-basic"
      enum:
      - "disabilitato"
      - "http-basic"
      - "https"
      - "principal"
      - "custom"
    TipoAutorizzazioneNewEnum:
      type: "string"
      example: "abilitato"
      enum:
      - "disabilitato"
      - "abilitato"
      - "xacml-Policy"
    TipoAutorizzazioneEnum:
      type: "string"
      example: "abilitato"
      enum:
      - "disabilitato"
      - "abilitato"
      - "xacml-Policy"
      - "custom"
    AllAnyEnum:
      type: "string"
      example: "all"
      enum:
      - "all"
      - "any"
      default: "all"
    ModalitaIdentificazioneAzioneEnum:
      type: "string"
      example: "interface-based"
      enum:
      - "content-based"
      - "header-based"
      - "input-based"
      - "interface-based"
      - "soap-action-based"
      - "url-based"
    TipoGestioneCorsEnum:
      type: "string"
      example: "gateway"
      enum:
      - "disabilitato"
      - "gateway"
      - "applicativo"
    ModalitaConfigurazioneGruppoEnum:
      type: "string"
      example: "eredita"
      enum:
      - "eredita"
      - "nuova"
    StatoFunzionalitaConWarningEnum:
      type: "string"
      example: "abilitato"
      enum:
      - "abilitato"
      - "disabilitato"
      - "warningOnly"
  responses:
    401Unauthorized:
      description: "Non sono state fornite le credenziali necessarie"
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
    default:
      description: "Unexpected error"
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
    409Conflict:
      description: "Conflict (L'entità che si vuole creare risulta già esistente)"
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
    503ServiceUnavailable:
      description: "Service Unavailable"
      headers:
        Retry-After:
          $ref: "#/components/headers/Retry-After"
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
    400BadRequest:
      description: "Bad Request"
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
    429TooManyRequests:
      description: "Too many requests"
      headers:
        X-RateLimit-Limit:
          $ref: "#/components/headers/X-RateLimit-Limit"
        X-RateLimit-Remaining:
          $ref: "#/components/headers/X-RateLimit-Remaining"
        X-RateLimit-Reset:
          $ref: "#/components/headers/X-RateLimit-Reset"
        Retry-After:
          $ref: "#/components/headers/Retry-After"
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
    404NotFound:
      description: "Not Found"
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
    403Forbidden:
      description: "Autorizzazione non concessa per l'operazione richiesta"
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
  parameters:
    cursor:
      name: "cursor"
      in: "query"
      description: "An opaque identifier that points to the next item in the collection."
      required: false
      schema:
        type: "string"
      example: "01BX9NSMKVXXS5PSP2FATZM123"
    id_nome_risorsa:
      name: "nome_risorsa"
      in: "path"
      description: "Nome identificativo"
      required: true
      schema:
        $ref: "#/components/schemas/NCName"
    gruppo:
      name: "gruppo"
      in: "query"
      description: "Nome del Gruppo di azioni o risorse"
      required: false
      schema:
        maxLength: 255
        type: "string"
    dominio:
      name: "dominio"
      in: "query"
      description: "Indica il dominio di un soggetto"
      required: false
      schema:
        $ref: "#/components/schemas/DominioEnum"
      example: "esterno"
    id_nome_azione:
      name: "nome_azione"
      in: "path"
      description: "Nome identificativo"
      required: true
      schema:
        $ref: "#/components/schemas/NCName"
    tipo_api:
      name: "tipo_api"
      in: "query"
      description: "Indica il tipo di API"
      required: false
      schema:
        $ref: "#/components/schemas/TipoApiEnum"
      example: "rest"
    http_method:
      name: "http_method"
      in: "query"
      description: "Indica il tipo di http method"
      required: false
      schema:
        $ref: "#/components/schemas/HttpMethodEnum"
      example: "PUT"
    Etag:
      name: "Etag"
      in: "header"
      description: "The RFC7232 ETag header field in a response provides the current\
        \ entity-\ntag for the selected resource. An entity-tag is an opaque identifier\
        \ for\ndifferent versions of a resource over time, regardless whether multiple\n\
        versions are valid at the same time. An entity-tag consists of an opaque\n\
        quoted string, possibly prefixed by a weakness indicator.\n"
      required: false
      schema:
        type: "string"
      example: "W/\"xy\", \"5\", \"7da7a728-f910-11e6-942a-68f728c1ba70\""
    limit:
      name: "limit"
      in: "query"
      description: "How many items to return at one time (max 100)"
      required: false
      schema:
        type: "integer"
        format: "int32"
    IfNoneMatch:
      name: "If-None-Match"
      in: "header"
      description: "The RFC7232 If-None-Match header field in a request requires the\
        \ server\nto only operate on the resource if it does not match any of the\
        \ provided\nentity-tags. If the provided entity-tag is `*`, it is required\
        \ that the\nresource does not exist at all.\n"
      required: false
      schema:
        type: "string"
      example: "\"7da7a728-f910-11e6-942a-68f728c1ba70\", *"
    id_erogatore:
      name: "erogatore"
      in: "path"
      description: "Nome identificativo dell'erogatore"
      required: true
      schema:
        $ref: "#/components/schemas/SimpleName"
    id_nome_allegato:
      name: "nome_allegato"
      in: "path"
      description: "Nome identificativo"
      required: true
      schema:
        $ref: "#/components/schemas/NCName"
    id_nome_gruppo:
      name: "nome_gruppo"
      in: "path"
      description: "Nome del Gruppo di azioni o risorse"
      required: true
      schema:
        maxLength: 255
        type: "string"
    id_versione:
      name: "versione"
      in: "path"
      description: "Versione che insieme al nome rappresente l'identificativo univoco"
      required: true
      schema:
        minimum: 1
        type: "integer"
        format: "int32"
    offset:
      name: "offset"
      in: "query"
      description: "The zero-ary offset index into the results"
      required: false
      schema:
        type: "integer"
        format: "int32"
        default: 0
    fonte:
      name: "fonte"
      in: "query"
      description: "Indica la fonte di un oggetto"
      required: false
      schema:
        $ref: "#/components/schemas/FonteEnum"
      example: "esterna"
    IfMatch:
      name: "If-Match"
      in: "header"
      description: "The RFC7232 If-Match header field in a request requires the server\
        \ to\nonly operate on the resource that matches at least one of the provided\n\
        entity-tags. This allows clients express a precondition that prevent\nthe\
        \ method from being applied if there have been any changes to the\nresource.\n"
      required: false
      schema:
        type: "string"
      example: "\"5\", \"7da7a728-f910-11e6-942a-68f728c1ba70\""
    id_simple_name:
      name: "nome"
      in: "path"
      description: "Nome identificativo"
      required: true
      schema:
        $ref: "#/components/schemas/SimpleName"
    sort:
      name: "sort"
      in: "query"
      description: "Sorting order"
      required: false
      schema:
        type: "string"
        example: "+name"
    id_soggetto_autorizzato:
      name: "soggetto_autorizzato"
      in: "path"
      description: "Nome del soggetto autorizzato"
      required: true
      schema:
        $ref: "#/components/schemas/SimpleName"
    id_nome_servizio:
      name: "nome_servizio"
      in: "path"
      description: "Nome identificativo"
      required: true
      schema:
        $ref: "#/components/schemas/NCName"
    id_ruolo_autorizzato:
      name: "ruolo_autorizzato"
      in: "path"
      description: "Nome del ruolo autorizzato"
      required: true
      schema:
        $ref: "#/components/schemas/NCName"
    q:
      name: "q"
      in: "query"
      description: "Search query term"
      required: false
      schema:
        type: "string"
    id_applicativo_autorizzato:
      name: "applicativo_autorizzato"
      in: "path"
      description: "Nome dell'applicativo autorizzato"
      required: true
      schema:
        $ref: "#/components/schemas/NCName"
    ruolo:
      name: "ruolo"
      in: "query"
      description: "Identifica un ruolo"
      required: false
      schema:
        $ref: "#/components/schemas/NCName"
      example: "AccessoSolaLettura"
    id_scope_autorizzato:
      name: "scope_autorizzato"
      in: "path"
      description: "Nome dello scope autorizzato"
      required: true
      schema:
        $ref: "#/components/schemas/NCName"
    contesto:
      name: "contesto"
      in: "query"
      description: "Indica il contesto di utilizzo di un oggetto"
      required: false
      schema:
        $ref: "#/components/schemas/ContestoEnum"
      example: "erogazione"
    id_ncname:
      name: "nome"
      in: "path"
      description: "Nome identificativo"
      required: true
      schema:
        $ref: "#/components/schemas/NCName"
    azione:
      name: "azione"
      in: "query"
      description: "Identifica un azione o risorsa"
      required: false
      schema:
        $ref: "#/components/schemas/NCName"
      example: "Azione1"
    fields:
      name: "fields"
      in: "query"
      description: "Fields to retrieve"
      required: false
      schema:
        type: "string"
    profilo:
      name: "profilo"
      in: "query"
      description: "Indica la modalità operativa del Gateway, a scelta tra:\n  * APIGateway;\n\
        \  * SPCoop;\n  * FatturaPA;\n  * eDelivery."
      required: false
      schema:
        $ref: "#/components/schemas/ProfiloEnum"
      example: "APIGateway"
    soggetto:
      name: "soggetto"
      in: "query"
      description: "Indica il Soggetto di dominio interno indirizzato dall'operazione."
      required: false
      schema:
        $ref: "#/components/schemas/SimpleName"
      example: "ENTE"
  headers:
    X-RateLimit-Remaining:
      description: "The number of remaining requests in the current period"
      schema:
        type: "integer"
        format: "int32"
    Retry-After:
      description: "Retry contacting the endpoint *at least* after seconds.\nSee https://tools.ietf.org/html/rfc7231#section-7.1.3"
      schema:
        type: "integer"
        format: "int32"
    X-RateLimit-Reset:
      description: "The number of seconds left in the current period"
      schema:
        type: "integer"
        format: "int32"
    X-RateLimit-Limit:
      description: "The number of allowed requests in the current period"
      schema:
        type: "integer"
        format: "int32"
