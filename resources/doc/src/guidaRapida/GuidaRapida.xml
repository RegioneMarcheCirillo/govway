<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" "/usr/share/sgml/docbook/xml-dtd-4.5/docbookx.dtd">
<?xml-stylesheet type="text/xsl" href="article.xsl"?>
<article lang="it">
	<articleinfo>
		<title>GovWay - Guida Rapida</title>
		<titleabbrev>GovWay - Guida Rapida </titleabbrev>
		<copyright>
			<year>2005-2018</year>
			<holder>
				<ulink url="https://www.link.it">
					<citetitle>Link.it srl</citetitle>
				</ulink>
			</holder>
		</copyright>
		<address> Link.it SRL <street> Via S. Martino,51 </street>
			<postcode>I-56125</postcode>
			<city> Pisa</city>
			<country> ITALY </country>
			<email>e-mail: info@link.it</email>
		</address>
	</articleinfo>
	<sect1 id="intro">
		<title>Introduzione</title>
		<para> In questa sezione trovi una guida rapida per l'utilizzo di GovWay. TODO. </para>
	</sect1>
	<sect1 id="apiGateway">
		<title>Profilo API Gateway</title>
		<para> Gli scenari che descriviamo in questa sezione mostrano come configurare l'API Gateway
			per gestire qualunque generica API basata su scambio di messaggi SOAP e REST. </para>
		<note>
			<title>Profilo di Utilizzo delle Console</title>
			<para> Prima di procedere con gli scenari descritti nei successivi paragrafi selezionare
				il profilo <emphasis>API Gateway</emphasis> nell'apposito menù situato in alto a
				destra presente nell'intestazione delle console. <figure
					id="modalita-api-selezione-fig">
					<title>Selezione del profilo <emphasis>API Gateway</emphasis></title>
					<mediaobject>
						<imageobject>
							<imagedata width="25%" fileref="FIGURE_OUT/sceltaModalita.pdf"/>
						</imageobject>
						<imageobject>
							<imagedata width="25%" fileref="FIGURE_OUT/sceltaModalita.png"/>
						</imageobject>
					</mediaobject>
				</figure>
			</para>
		</note>
		<para> Per quanto concerne la tipologia di servizi <emphasis role="strong">REST</emphasis>,
			il servizio di esempio utilizzato per mostrare le funzionalità dell'API Gateway è lo
				<emphasis>Swagger Petstore</emphasis> (web site: <ulink
				url="https://petstore.swagger.io/">https://petstore.swagger.io/ </ulink> )
			disponibile all'indirizzo <ulink url="http://petstore.swagger.io/v2/">
				http://petstore.swagger.io/v2/ </ulink>. L'interfaccia API è scaricabile in <ulink
				url="https://petstore.swagger.io/v2/swagger.json">
				https://petstore.swagger.io/v2/swagger.json </ulink>. Per simulare un aggiornamento
			di un animale all'interno del negozio è utilizzabile il seguente comando:
			<screen>curl -v -X PUT "http://petstore.swagger.io/v2/pet" \
-H "accept: application/json" \
-H "Content-Type: application/json" \
-d '{
        "id": 3,
        "category": { "id": 22, "name": "dog" },
        "name": "doggie",
        "photoUrls": [ "http://image/dog.jpg" ],
        "tags": [ { "id": 23, "name": "white" } ],
        "status": "available"
}'</screen>
			L'esito dell'aggiornamento viene confermato con un codice http 200 e una risposta json
			equivalente alla richiesta:
			<screen>HTTP/1.1 200 OK
Access-Control-Allow-Origin: *
Access-Control-Allow-Methods: GET, POST, DELETE, PUT
Access-Control-Allow-Headers: Content-Type, api_key, Authorization
Content-Type: application/json
Connection: close
Server: Jetty(9.2.9.v20150224)

{
	"id":3,
	"category":{"id":22,"name":"dog"},
	"name":"doggie",
	"photoUrls":["http://image/dog.jpg"],
	"tags":[{"id":23,"name":"white"}],
	"status":"available"
}</screen>
		</para>
		<para> Per i servizi di tipologia <emphasis role="strong">SOAP</emphasis>, il servizio di
			esempio utilizzato per mostrare le funzionalità dell'API Gateway è <emphasis>Credit Card
				Verification</emphasis> (web site: <ulink
				url="http://wiki.cdyne.com/index.php/Credit_Card_Verification"
				>http://wiki.cdyne.com/index.php/Credit_Card_Verification </ulink> ) disponibile
			all'indirizzo <ulink url="http://ws.cdyne.com/creditcardverify/luhnchecker.asmx"
				>http://ws.cdyne.com/creditcardverify/luhnchecker.asmx </ulink>. L'interfaccia WSDL
			del servizio è scaricabile in <ulink
				url="https://ws.cdyne.com/creditcardverify/luhnchecker.asmx?wsdl">
				https://ws.cdyne.com/creditcardverify/luhnchecker.asmx?wsdl </ulink>. Per simulare
			una richiesta il cui fine è validare un numero di carta di credito è utilizzabile il
			seguente comando, che genera una richiesta SOAP 1.1:
			<screen>curl -v -X POST "http://ws.cdyne.com/creditcardverify/luhnchecker.asmx" \
-H 'Content-Type: text/xml;charset=UTF-8' \
-H 'SOAPAction: "http://ws.cdyne.com/CheckCC"' \
-d '&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
	&lt;soapenv:Header/>
	&lt;soapenv:Body>
		&lt;CheckCC xmlns="http://ws.cdyne.com/">
			&lt;CardNumber>4111111111111111&lt;/CardNumber>
		&lt;/CheckCC>
	&lt;/soapenv:Body>
&lt;/soapenv:Envelope>'</screen>
			L'esito della verifica viene ritornato con un codice http 200 e una risposta contenente
			i dettagli della carta:
			<screen>HTTP/1.1 200 OK
Cache-Control: no-cache
Pragma: no-cache
Content-Type: text/xml; charset=utf-8
Expires: -1
Server: Microsoft-IIS/8.5
X-AspNet-Version: 4.0.30319
X-Powered-By: ASP.NET
Date: Thu, 15 Nov 2018 11:50:12 GMT
Content-Length: 393
Connection: keep-alive


&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
   &lt;soap:Body>
		&lt;CheckCCResponse xmlns="http://ws.cdyne.com/">
			&lt;CheckCCResult>
				&lt;CardType>VISA&lt;/CardType>
				&lt;CardValid>true&lt;/CardValid>
			&lt;/CheckCCResult>
		&lt;/CheckCCResponse>
   &lt;/soap:Body>
&lt;/soap:Envelope></screen>
			Per simulare la medesima richiesta utilizzando SOAP 1.2 è possibile usare il comando:
			<screen>curl -v -X POST "http://ws.cdyne.com/creditcardverify/luhnchecker.asmx" \
-H 'Content-Type: application/soap+xml; charset=utf-8' \
-d '&lt;soap12:Envelope xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">
	&lt;soap12:Header/>
	&lt;soap12:Body>
		&lt;CheckCC xmlns="http://ws.cdyne.com/">
			&lt;CardNumber>4111111111111111&lt;/CardNumber>
		&lt;/CheckCC>
	&lt;/soap12:Body>
&lt;/soap12:Envelope>'</screen>
			L'esito della verifica viene ritornato con un codice http 200 e una risposta contenente
			i dettagli della carta:
			<screen>HTTP/1.1 200 OK
Cache-Control: no-cache
Pragma: no-cache
Content-Type: application/soap+xml; charset=utf-8
Expires: -1
Server: Microsoft-IIS/8.5
X-AspNet-Version: 4.0.30319
X-Powered-By: ASP.NET
Date: Thu, 15 Nov 2018 11:50:12 GMT
Content-Length: 393
Connection: keep-alive


&lt;soap12:Envelope xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap12:Body>
		&lt;CheckCCResponse xmlns="http://ws.cdyne.com/">
			&lt;CheckCCResult>
				&lt;CardType>VISA&lt;/CardType>
				&lt;CardValid>true&lt;/CardValid>
			&lt;/CheckCCResult>
		&lt;/CheckCCResponse>
   &lt;/soap12:Body>
&lt;/soap12:Envelope></screen>
		</para>

		<sect2 id="apiGateway_restHelloWorld">
			<title>Erogazione API REST</title>
			<para> Procediamo adesso con la descrizione dei passi di configurazione necessari a
				registrare una API REST implementata da un applicativo interno al proprio dominio di
				gestione. L'applicativo implementa lo <emphasis>Swagger Petstore</emphasis>
				descritto in <xref linkend="apiGateway"/>. In questo scenario di esempio si suppone
				che l'indirizzo <ulink url="http://petstore.swagger.io/">
					http://petstore.swagger.io/ </ulink> dove viene erogato il servizio sia interno
				al proprio dominio di gestione. </para>
			<para> L'API, per questo primo esempio di utilizzo del Gateway, viene registrata in modo
				che sia accessibile in forma anonima da qualunque client invocando l'url esposta da
				GovWay. Una rappresentazione di questo scenario è mostrata nella figura <xref
					linkend="apiGateway_restHelloWorld_erogazione"/>. Prima di procedere con la
				configurazione effettuare il download dell'interfaccia API disponibile in <ulink
					url="https://petstore.swagger.io/v2/swagger.json">
					https://petstore.swagger.io/v2/swagger.json </ulink>. </para>
			<figure id="apiGateway_restHelloWorld_erogazione">
				<title>Erogazione di una API Rest tramite GovWay</title>
				<mediaobject>
					<imageobject>
						<imagedata width="90%" fileref="FIGURE_OUT/erogazioneRESTBase.pdf"/>
					</imageobject>
					<imageobject>
						<imagedata width="90%" fileref="FIGURE_OUT/erogazioneRESTBase.png"/>
					</imageobject>
				</mediaobject>
			</figure>
			<para> Per registrare l'API su Govway, utilizzando la console
					<emphasis>govwayConsole</emphasis>, procedere come segue: <orderedlist>
					<listitem>
						<para>
							<emphasis role="strong">Registrazione API</emphasis>. </para>
						<para> Accedere alla sezione <emphasis>'API'</emphasis> e selezionare il
							pulsante <emphasis>'Aggiungi'</emphasis>. Fornire i seguenti dati: <itemizedlist>
								<listitem>
									<para>
										<emphasis>Tipo</emphasis>: selezionare la tipologia
											<emphasis>'REST'</emphasis>. </para>
								</listitem>
								<listitem>
									<para>
										<emphasis>Nome</emphasis>: indicare il nome dell'API che si
										sta registrando, ad esempio <emphasis>'PetStore'</emphasis>.
									</para>
								</listitem>
								<listitem>
									<para>
										<emphasis>Descrizione</emphasis>: opzionalmente è possibile
										fornire una descrizione generica dell'API. </para>
								</listitem>
								<listitem>
									<para>
										<emphasis>Versione</emphasis>: indicare la versione dell'API
										che si sta registrando; nell'esempio utilizziamo la versione
											<emphasis>2</emphasis> del PetStore. </para>
								</listitem>
								<listitem>
									<para>
										<emphasis>Formato Specifica</emphasis>: selezionare
											<emphasis>'Swagger 2.0'</emphasis> tra i formati
										supportati. </para>
								</listitem>
								<listitem>
									<para>
										<emphasis>Swagger 2.0</emphasis>: caricare l'interfaccia API
										scaricata dall'indirizzo <ulink
											url="https://petstore.swagger.io/v2/swagger.json">
											https://petstore.swagger.io/v2/swagger.json </ulink>.
									</para>
								</listitem>
							</itemizedlist>
							<figure id="apiGateway_restHelloWorld_erogazione_api">
								<title>Registrazione di una API</title>
								<mediaobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/erogazioneRESTBaseRegistrazioneAPI.pdf"
										/>
									</imageobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/erogazioneRESTBaseRegistrazioneAPI.png"
										/>
									</imageobject>
								</mediaobject>
							</figure>
						</para>
						<para>Effettuato il salvataggio, l'API sarà consultabile all'interno
							dell'elenco delle API registrate. Accedendo al dettaglio si potranno
							visionare le risorse che tale API dispone come si può vedere dalla
							figura <xref linkend="apiGateway_restHelloWorld_erogazione_api_risorse"
							/>. <figure id="apiGateway_restHelloWorld_erogazione_api_risorse">
								<title>Risorse di una API</title>
								<mediaobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/erogazioneRESTBaseConsultazioneRisorseAPI.pdf"
										/>
									</imageobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/erogazioneRESTBaseConsultazioneRisorseAPI.png"
										/>
									</imageobject>
								</mediaobject>
							</figure>
						</para>
					</listitem>
					<listitem>
						<para>
							<emphasis role="strong">Registrazione Erogazione</emphasis>
						</para>
						<para> Accedere alla sezione <emphasis>'Erogazioni'</emphasis> e selezionare
							il pulsante <emphasis>'Aggiungi'</emphasis>. Fornire i seguenti dati: <itemizedlist>
								<listitem>
									<para>
										<emphasis>Nome</emphasis>: selezionare l'API precedentemente
										registrata <emphasis>'PetStore v2'</emphasis>. </para>
								</listitem>
								<listitem>
									<para>
										<emphasis>Autenticazione - Stato</emphasis>: per esporre
										l'API in modo che sia invocabile da qualunque client in
										forma anonima selezionare lo stato
											<emphasis>'disabilitato'</emphasis>. </para>
								</listitem>
								<listitem>
									<para>
										<emphasis>Connettore - Endpoint</emphasis>: indicare la
											<emphasis>base uri</emphasis> dove viene erogata l'API
										nel dominio interno. Per il nostro esempio utilizzare la
										url: <itemizedlist>
											<listitem>
												<para><emphasis>http://petstore.swagger.io/v2</emphasis></para>
											</listitem>
										</itemizedlist>
									</para>
								</listitem>
							</itemizedlist>
							<figure id="apiGateway_restHelloWorld_erogazione_registrazione">
								<title>Registrazione di una erogazione di API</title>
								<mediaobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/erogazioneRESTBaseRegistrazioneErogazione.pdf"
										/>
									</imageobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/erogazioneRESTBaseRegistrazioneErogazione.png"
										/>
									</imageobject>
								</mediaobject>
							</figure>
						</para>
						<para>Effettuato il salvataggio, l'API erogata sarà consultabile all'interno
							dell'elenco delle erogazioni. Accedendo al dettaglio si potrà conoscere
								l'<emphasis>url di invocazione</emphasis> che deve essere comunicata
							ai client che desiderano invocare l'API. <figure
								id="apiGateway_restHelloWorld_erogazione_urlInvocazione">
								<title>URL di Invocazione dell'API erogata</title>
								<mediaobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/erogazioneRESTBaseConsultazioneErogazione.pdf"
										/>
									</imageobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/erogazioneRESTBaseConsultazioneErogazione.png"
										/>
									</imageobject>
								</mediaobject>
							</figure>
						</para>
					</listitem>
					<listitem>
						<para>
							<emphasis role="strong">Invocazione API tramite GovWay</emphasis>
						</para>
						<para>Al termine di questi passi di configurazione il servizio REST sarà
							raggiungibile dai client utilizzando l'url di invocazione: <itemizedlist>
								<listitem>
									<para><emphasis>http://host:port/govway/&lt;soggetto-dominio-interno>/PetStore/v2/&lt;uri-risorsa></emphasis></para>
								</listitem>
							</itemizedlist>
							<note>
								<title>Soggetto Interno al Dominio</title>
								<para>In questo esempio si suppone che il nome del soggetto fornito
									durante la fase di installazione di GovWay sia
										<emphasis>Ente</emphasis>.</para>
							</note>
							<screen>curl -v -X PUT "http://127.0.0.1:8080/govway/Ente/PetStore/v2/pet" \
-H "accept: application/json" \
-H "Content-Type: application/json" \
-d '{
        "id": 3,
        "category": { "id": 22, "name": "dog" },
        "name": "doggie",
        "photoUrls": [ "http://image/dog.jpg" ],
        "tags": [ { "id": 23, "name": "white" } ],
        "status": "available"
}'</screen>
						</para>
						<para> L'esito dell'aggiornamento viene confermato con un codice http 200 e
							una risposta json equivalente alla richiesta:
							<screen>HTTP/1.1 200 OK
Access-Control-Allow-Origin: *
Access-Control-Allow-Methods: GET, POST, DELETE, PUT
Access-Control-Allow-Headers: Content-Type, api_key, Authorization
Content-Type: application/json
Transfer-Encoding: chunked
Server: GovWay
GovWay-Message-ID: 84e1d9a4-c181-436f-b7f0-4cabf55c370d
GovWay-Transaction-ID: 6c13b9ac-3d60-45a6-9130-297a4d832824

{
	"id":3,
	"category":{"id":22,"name":"dog"},
	"name":"doggie",
	"photoUrls":["http://image/dog.jpg"],
	"tags":[{"id":23,"name":"white"}],
	"status":"available"
}</screen>
						</para>
						<note>
							<title>Traccia della comunicazione</title>
							<para>L'invocazione restituisce al client, sotto forma di header HTTP,
								l'id di transazione con cui è stata salvata la traccia contenente
								tutti i dati dell'invocazione sul Gateway.</para>
						</note>
					</listitem>
					<listitem>
						<para>
							<emphasis role="strong">Consultazione Tracce</emphasis>
						</para>
						<para>Attraverso la console <emphasis>govwayMonitor</emphasis> è possibile
							consultare lo storico delle transazioni che sono transitate nel gateway
							(figura <xref linkend="apiGateway_restHelloWorld_monitoraggio"/>) e
							conoscere il dettaglio di una singola invocazione (figura <xref
								linkend="apiGateway_restHelloWorld_monitoraggio_dettaglio"/>).
								<figure id="apiGateway_restHelloWorld_monitoraggio">
								<title>Tracce delle invocazioni transitate sul Gateway</title>
								<mediaobject>
									<imageobject>
										<imagedata width="70%"
											fileref="FIGURE_OUT/erogazioneRESTBaseConsoltazioneStoricoTransazioni.pdf"
										/>
									</imageobject>
									<imageobject>
										<imagedata width="70%"
											fileref="FIGURE_OUT/erogazioneRESTBaseConsoltazioneStoricoTransazioni.png"
										/>
									</imageobject>
								</mediaobject>
							</figure>
							<figure id="apiGateway_restHelloWorld_monitoraggio_dettaglio">
								<title>Dettaglio di una invocazione transitata sul Gateway</title>
								<mediaobject>
									<imageobject>
										<imagedata width="40%"
											fileref="FIGURE_OUT/erogazioneRESTBaseConsoltazioneStoricoTransazioniDettaglio.pdf"
										/>
									</imageobject>
									<imageobject>
										<imagedata width="40%"
											fileref="FIGURE_OUT/erogazioneRESTBaseConsoltazioneStoricoTransazioniDettaglio.png"
										/>
									</imageobject>
								</mediaobject>
							</figure>
						</para>
					</listitem>
				</orderedlist>
			</para>
		</sect2>

		<sect2 id="apiGateway_multitenant">
			<title>Modalità Multi-Tenant</title>
			<para>GovWay supporta nativamente il multi-tenant grazie al quale è possibile gestire
				più domini. Una API che deve essere erogata su più domini viene registrata solamente
				una volta e può poi essere implementata da tutti i soggetti dei vari domini gestiti.
				Un applicativo client, per indirizzare una specifica API di un dominio, deve
				semplicemente indicare il nome del soggetto nella url di invocazione. Una
				rappresentazione di uno scenario multi-tenant è mostrata nella figura <xref
					linkend="apiGateway_multitenant_scenario"/>
				<figure id="apiGateway_multitenant_scenario">
					<title>Scenario Multi-Tenant</title>
					<mediaobject>
						<imageobject>
							<imagedata width="90%" fileref="FIGURE_OUT/multitenant.pdf"/>
						</imageobject>
						<imageobject>
							<imagedata width="90%" fileref="FIGURE_OUT/multitenant.png"/>
						</imageobject>
					</mediaobject>
				</figure>
			</para>
			<para> Di seguito vengono descritti i passi necessari a gestire più domini
				(multi-tenant) su GovWay al fine di erogare l'API già registrata nell'esempio
				descritto nella sezione <xref linkend="apiGateway_restHelloWorld"/> all'interno di
				un ulteriore dominio gestito dal soggetto <emphasis>Ente2</emphasis>. </para>
			<orderedlist>
				<listitem>
					<para>
						<emphasis role="strong">Abilitazione Multi-Tenant</emphasis>
					</para>
					<para>GovWay viene installato per default con la funzionalità multi-tenant
						disabilitata e quindi l'unico dominio gestito è quello del soggetto fornito
						in fase di installazione. Per abilitare il multi-tenant accedere alla
						sezione <emphasis>'Configurazione'</emphasis> e selezionare la voce
							<emphasis>'Generale'</emphasis>. Nella maschera visualizzata selezionare
						il valore <emphasis>'abilitato'</emphasis> nella sezione
							<emphasis>'Multi-Tenant'</emphasis>. <figure
							id="apiGateway_multitenant_configurazione_abilitato">
							<title>Configurazione Multi-Tenant Abilitato</title>
							<mediaobject>
								<imageobject>
									<imagedata width="50%"
										fileref="FIGURE_OUT/multitenant_configurazione_abilitato.pdf"
									/>
								</imageobject>
								<imageobject>
									<imagedata width="50%"
										fileref="FIGURE_OUT/multitenant_configurazione_abilitato.png"
									/>
								</imageobject>
							</mediaobject>
						</figure>
					</para>
				</listitem>
				<listitem>
					<para>
						<emphasis role="strong">Registrazione nuovo Soggetto</emphasis>
					</para>
					<para>Accedere alla sezione <emphasis>'Soggetti'</emphasis> e selezionare il
						pulsante <emphasis>'Aggiungi'</emphasis>. Fornire i seguenti dati: <itemizedlist>
							<listitem>
								<para>
									<emphasis>Dominio</emphasis>: selezionare la voce
										<emphasis>'Interno'</emphasis>. </para>
							</listitem>
							<listitem>
								<para>
									<emphasis>Nome</emphasis>: indicare il nome del Soggetto che
									rappresenta il nuovo dominio in gestione, ad esempio
										<emphasis>'Ente2'</emphasis>. </para>
							</listitem>
							<listitem>
								<para>
									<emphasis>Descrizione</emphasis>: opzionalmente è possibile
									fornire una descrizione generica del soggetto. </para>
							</listitem>
						</itemizedlist>
						<figure id="apiGateway_multitenant_configurazione_soggetto">
							<title>Registrazione nuovo Soggetto</title>
							<mediaobject>
								<imageobject>
									<imagedata width="50%"
										fileref="FIGURE_OUT/multitenant_configurazione_soggetto.pdf"
									/>
								</imageobject>
								<imageobject>
									<imagedata width="50%"
										fileref="FIGURE_OUT/multitenant_configurazione_soggetto.png"
									/>
								</imageobject>
							</mediaobject>
						</figure>
					</para>
				</listitem>
				<listitem>
					<para>
						<emphasis role="strong">Selezione del Dominio da gestire</emphasis>
					</para>
					<para> Sia nella console di gestione (<emphasis>govwayConsole</emphasis>) che
						nella console di monitoraggio (<emphasis>govwayMonitor</emphasis>), una
						volta abilitato il Multi-Tenant, prima di procedere con qualsiasi operazione
						deve essere selezionato il soggetto per cui si intende gestire il dominio
						attraverso l'apposito menù situato in alto a destra nell'intestazione delle
						console. <figure id="apiGateway_multitenant_selezione_soggetto">
							<title>Selezione del Soggetto</title>
							<mediaobject>
								<imageobject>
									<imagedata width="30%"
										fileref="FIGURE_OUT/apiGateway_multitenant_selezione_soggetto.pdf"
									/>
								</imageobject>
								<imageobject>
									<imagedata width="30%"
										fileref="FIGURE_OUT/apiGateway_multitenant_selezione_soggetto.png"
									/>
								</imageobject>
							</mediaobject>
						</figure>
					</para>
				</listitem>
				<listitem>
					<para>
						<emphasis role="strong">Registrazione Erogazione</emphasis>
					</para>
					<para> Procedere con la registrazione della API <emphasis>'PetStore
							v2'</emphasis> così come già descritto nella sezione <xref
							linkend="apiGateway_restHelloWorld"/>. Accedere alla sezione
							<emphasis>'Erogazioni'</emphasis> e selezionare il pulsante
							<emphasis>'Aggiungi'</emphasis>. Fornire i seguenti dati: <itemizedlist>
							<listitem>
								<para>
									<emphasis>Nome</emphasis>: selezionare l'API precedentemente
									registrata <emphasis>'PetStore v2'</emphasis>. </para>
							</listitem>
							<listitem>
								<para>
									<emphasis>Autenticazione - Stato</emphasis>: per esporre l'API
									in modo che sia invocabile da qualunque client in forma anonima
									selezionare lo stato <emphasis>'disabilitato'</emphasis>.
								</para>
							</listitem>
							<listitem>
								<para>
									<emphasis>Connettore - Endpoint</emphasis>: indicare la
										<emphasis>base uri</emphasis> dove viene erogata l'API nel
									dominio interno. Per il nostro esempio utilizzare sempre la url: <itemizedlist>
										<listitem>
											<para><emphasis>http://petstore.swagger.io/v2</emphasis></para>
										</listitem>
									</itemizedlist>
								</para>
							</listitem>
						</itemizedlist>
					</para>
					<para>Effettuato il salvataggio, l'API erogata sarà consultabile all'interno
						dell'elenco delle erogazioni. Accedendo al dettaglio si potrà conoscere
							l'<emphasis>url di invocazione</emphasis> che deve essere comunicata ai
						client che desiderano invocare l'API. <note>
							<title>Nome del Soggetto presente nella url di invocazione</title>
							<para>Come si può vedere dalla figura <xref
									linkend="apiGateway_multitenant_erogazione_urlInvocazione"/> il
								soggetto <emphasis>Ente2</emphasis> compare nella url
								indicata.</para>
						</note>
						<figure id="apiGateway_multitenant_erogazione_urlInvocazione">
							<title>URL di Invocazione dell'API erogata</title>
							<mediaobject>
								<imageobject>
									<imagedata width="50%"
										fileref="FIGURE_OUT/apiGateway_multitenant_erogazione_urlInvocazione.pdf"
									/>
								</imageobject>
								<imageobject>
									<imagedata width="50%"
										fileref="FIGURE_OUT/apiGateway_multitenant_erogazione_urlInvocazione.png"
									/>
								</imageobject>
							</mediaobject>
						</figure>
					</para>
				</listitem>
				<listitem>
					<para>
						<emphasis role="strong">Invocazione API tramite GovWay</emphasis>
					</para>
					<para>Al termine di questi passi di configurazione il servizio REST sarà
						raggiungibile dai client utilizzando l'url di invocazione: <itemizedlist>
							<listitem>
								<para><emphasis>http://host:port/govway/<emphasis role="strong"
											>Ente2</emphasis>/PetStore/v2/&lt;uri-risorsa></emphasis></para>
							</listitem>
						</itemizedlist>
						<screen>curl -v -X PUT "http://127.0.0.1:8080/govway/Ente2/PetStore/v2/pet" \
-H "accept: application/json" \
-H "Content-Type: application/json" \
-d '{
        "id": 3,
        "category": { "id": 22, "name": "dog" },
        "name": "doggie",
        "photoUrls": [ "http://image/dog.jpg" ],
        "tags": [ { "id": 23, "name": "white" } ],
        "status": "available"
}'</screen>
					</para>
				</listitem>
				<listitem>
					<para>
						<emphasis role="strong">Consultazione Tracce</emphasis>
					</para>
					<para> La consultazione delle tracce per ogni dominio gestito è identica a
						quanto descritto nella sezione <xref linkend="apiGateway_restHelloWorld"/>,
						previa selezione del soggetto in gestione tramite il menù situato in alto a
						destra. </para>
				</listitem>
			</orderedlist>


		</sect2>

		<sect2 id="apiGateway_soapHelloWorld">
			<title>Erogazione API SOAP</title>
			<para> Procediamo adesso con la descrizione dei passi di configurazione necessari a
				registrare una API SOAP implementata da un applicativo interno al proprio dominio di
				gestione. L'applicativo implementa il servizio <emphasis>Credit Card
					Verification</emphasis> descritto in <xref linkend="apiGateway"/>. In questo
				scenario di esempio si suppone che l'indirizzo <ulink
					url="http://ws.cdyne.com/creditcardverify/luhnchecker.asmx">
					http://ws.cdyne.com/creditcardverify/luhnchecker.asmx </ulink> dove viene
				erogato il servizio sia interno al proprio dominio di gestione. </para>
			<para> L'API, per questo esempio, viene registrata in modo che sia accessibile in forma
				anonima da qualunque client invocando l'url esposta da GovWay. Una rappresentazione
				di questo scenario è mostrata nella figura <xref
					linkend="apiGateway_soapHelloWorld_erogazione"/>. Prima di procedere con la
				configurazione effettuare il download dell'interfaccia WSDL disponibile in <ulink
					url="https://ws.cdyne.com/creditcardverify/luhnchecker.asmx?wsdl">
					https://ws.cdyne.com/creditcardverify/luhnchecker.asmx?wsdl </ulink>. </para>
			<figure id="apiGateway_soapHelloWorld_erogazione">
				<title>Erogazione di una API SOAP tramite GovWay</title>
				<mediaobject>
					<imageobject>
						<imagedata width="90%" fileref="FIGURE_OUT/erogazioneSOAPBase.pdf"/>
					</imageobject>
					<imageobject>
						<imagedata width="90%" fileref="FIGURE_OUT/erogazioneSOAPBase.png"/>
					</imageobject>
				</mediaobject>
			</figure>
			<para> Per registrare l'API su Govway, utilizzando la console
					<emphasis>govwayConsole</emphasis>, procedere come segue: <orderedlist>
					<listitem>
						<para>
							<emphasis role="strong">Registrazione API</emphasis>. </para>
						<para> Accedere alla sezione <emphasis>'API'</emphasis> e selezionare il
							pulsante <emphasis>'Aggiungi'</emphasis>. Fornire i seguenti dati: <itemizedlist>
								<listitem>
									<para>
										<emphasis>Tipo</emphasis>: selezionare la tipologia
											<emphasis>'SOAP'</emphasis>. </para>
								</listitem>
								<listitem>
									<para>
										<emphasis>Nome</emphasis>: indicare il nome dell'API che si
										sta registrando, ad esempio
											<emphasis>'CreditCardVerification'</emphasis>. </para>
								</listitem>
								<listitem>
									<para>
										<emphasis>Descrizione</emphasis>: opzionalmente è possibile
										fornire una descrizione generica dell'API. </para>
								</listitem>
								<listitem>
									<para>
										<emphasis>Versione</emphasis>: indicare la versione dell'API
										che si sta registrando; nell'esempio utilizziamo la versione
											<emphasis>1</emphasis>. </para>
								</listitem>
								<listitem>
									<para>
										<emphasis>WSDL</emphasis>: caricare l'interfaccia WSDL
										scaricata dall'indirizzo <ulink
											url="https://ws.cdyne.com/creditcardverify/luhnchecker.asmx?wsdl"
											>
											https://ws.cdyne.com/creditcardverify/luhnchecker.asmx?wsdl
										</ulink>. </para>
								</listitem>
							</itemizedlist>
							<figure id="apiGateway_soapHelloWorld_erogazione_api">
								<title>Registrazione di una API</title>
								<mediaobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/erogazioneSOAPBaseRegistrazioneAPI.pdf"
										/>
									</imageobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/erogazioneSOAPBaseRegistrazioneAPI.png"
										/>
									</imageobject>
								</mediaobject>
							</figure>
						</para>
						<para>Effettuato il salvataggio, l'API sarà consultabile all'interno
							dell'elenco delle API registrate. Accedendo al dettaglio si potranno
							visionare i servizi che tale API dispone che corrispondono ai
								<emphasis>port type</emphasis> presenti nell'interfaccia wsdl
							caricata. Come si può vedere dalla figura <xref
								linkend="apiGateway_soapHelloWorld_erogazione_api_servizi"/>
							l'interfaccia <emphasis>Credit Card Verification</emphasis> possiede tre
							differenti servizi che corrispondo a differenti modalità di utilizzo.
							Nel seguito di questo esempio verrà utilizzato esclusivamente il
							servizio <emphasis>LuhnCheckerSoap</emphasis>. <figure
								id="apiGateway_soapHelloWorld_erogazione_api_servizi">
								<title>Servizi di una API</title>
								<mediaobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/erogazioneSOAPBaseConsultazioneServiziAPI.pdf"
										/>
									</imageobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/erogazioneSOAPBaseConsultazioneServiziAPI.png"
										/>
									</imageobject>
								</mediaobject>
							</figure>
						</para>
					</listitem>
					<listitem>
						<para>
							<emphasis role="strong">Registrazione Erogazione</emphasis>
						</para>
						<para> Accedere alla sezione <emphasis>'Erogazioni'</emphasis> e selezionare
							il pulsante <emphasis>'Aggiungi'</emphasis>. Fornire i seguenti dati: <itemizedlist>
								<listitem>
									<para>
										<emphasis>Nome</emphasis>: selezionare l'API precedentemente
										registrata <emphasis>'CreditCardVerification v1'</emphasis>.
									</para>
								</listitem>
								<listitem>
									<para>
										<emphasis>Servizio</emphasis>: selezionare uno dei servizi
										(port type) definiti nell'API precedentemente registrata
											<emphasis>'LuhnCheckerSoap'</emphasis>. </para>
								</listitem>
								<listitem>
									<para>
										<emphasis>Autenticazione - Stato</emphasis>: per esporre
										l'API in modo che sia invocabile da qualunque client in
										forma anonima selezionare lo stato
											<emphasis>'disabilitato'</emphasis>. </para>
								</listitem>
								<listitem>
									<para>
										<emphasis>Connettore - Endpoint</emphasis>: indicare
										l'endpoint dove viene erogata l'API nel dominio interno. Per
										il nostro esempio utilizzare la url: <itemizedlist>
											<listitem>
												<para><emphasis>http://ws.cdyne.com/creditcardverify/luhnchecker.asmx</emphasis></para>
											</listitem>
										</itemizedlist>
									</para>
								</listitem>
							</itemizedlist>
							<figure id="apiGateway_soapHelloWorld_erogazione_registrazione">
								<title>Registrazione di una erogazione di API</title>
								<mediaobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/erogazioneSOAPBaseRegistrazioneErogazione.pdf"
										/>
									</imageobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/erogazioneSOAPBaseRegistrazioneErogazione.png"
										/>
									</imageobject>
								</mediaobject>
							</figure>
						</para>
						<para>Effettuato il salvataggio, l'API erogata sarà consultabile all'interno
							dell'elenco delle erogazioni. Accedendo al dettaglio si potrà conoscere
								l'<emphasis>url di invocazione</emphasis> che deve essere comunicata
							ai client che desiderano invocare l'API. <figure
								id="apiGateway_soapHelloWorld_erogazione_urlInvocazione">
								<title>URL di Invocazione dell'API erogata</title>
								<mediaobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/erogazioneSOAPBaseConsultazioneErogazione.pdf"
										/>
									</imageobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/erogazioneSOAPBaseConsultazioneErogazione.png"
										/>
									</imageobject>
								</mediaobject>
							</figure>
						</para>
					</listitem>
					<listitem>
						<para>
							<emphasis role="strong">Invocazione API tramite GovWay</emphasis>
						</para>
						<para>Al termine di questi passi di configurazione il servizio SOAP sarà
							raggiungibile dai client utilizzando l'url di invocazione: <itemizedlist>
								<listitem>
									<para><emphasis>http://host:port/govway/&lt;soggetto-dominio-interno>/LuhnCheckerSoap/v1</emphasis></para>
								</listitem>
							</itemizedlist>
							<note>
								<title>Soggetto Interno al Dominio</title>
								<para>In questo esempio si suppone che il nome del soggetto fornito
									durante la fase di installazione di GovWay sia
										<emphasis>Ente</emphasis>.</para>
							</note>
							<screen>curl -v -X POST "http://127.0.0.1:8080/govway/Ente/LuhnCheckerSoap/v1" \
-H 'Content-Type: text/xml;charset=UTF-8' \
-H 'SOAPAction: "http://ws.cdyne.com/CheckCC"' \
-d '&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
	&lt;soapenv:Header/>
	&lt;soapenv:Body>
		&lt;CheckCC xmlns="http://ws.cdyne.com/">
			&lt;CardNumber>4111111111111111&lt;/CardNumber>
		&lt;/CheckCC>
	&lt;/soapenv:Body>
&lt;/soapenv:Envelope>'</screen>
						</para>
						<para> L'esito della verifica viene ritornato con un codice http 200 e una
							risposta contenente i dettagli della carta:
							<screen>HTTP/1.1 200 OK
Connection: keep-alive
Server: GovWay
GovWay-Message-ID: b62dc163-e788-4dc2-9cee-40c77b0a7a29
GovWay-Transaction-ID: fc155be0-c1ac-4e2e-93f7-d69a30258069
Transfer-Encoding: chunked
Content-Type: text/xml;charset=utf-8
Date: Thu, 15 Nov 2018 13:34:22 GMT

&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
   &lt;soap:Body>
		&lt;CheckCCResponse xmlns="http://ws.cdyne.com/">
			&lt;CheckCCResult>
				&lt;CardType>VISA&lt;/CardType>
				&lt;CardValid>true&lt;/CardValid>
			&lt;/CheckCCResult>
		&lt;/CheckCCResponse>
   &lt;/soap:Body>
&lt;/soap:Envelope></screen>
						</para>
						<para> Per simulare la medesima richiesta utilizzando un messaggio SOAP 1.2
							è possibile usare la stessa url di invocazione :
							<screen>curl -v -X POST "http://127.0.0.1:8080/govway/Ente/LuhnCheckerSoap/v1" \
-H 'Content-Type: application/soap+xml; charset=utf-8' \
-d '&lt;soap12:Envelope xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">
	&lt;soap12:Header/>
	&lt;soap12:Body>
		&lt;CheckCC xmlns="http://ws.cdyne.com/">
			&lt;CardNumber>4111111111111111&lt;/CardNumber>
		&lt;/CheckCC>
	&lt;/soap12:Body>
&lt;/soap12:Envelope>'</screen>
						</para>
					</listitem>
					<listitem>
						<para>
							<emphasis role="strong">Consultazione Tracce</emphasis>
						</para>
						<para>Attraverso la console <emphasis>govwayMonitor</emphasis> è possibile
							consultare lo storico delle transazioni che sono transitate nel gateway
							e recuperare i dettagli di una singola invocazione cosi come già
							descritto nella sezione <xref linkend="apiGateway_restHelloWorld"/>.
						</para>
					</listitem>
				</orderedlist>
			</para>
		</sect2>

		<sect2 id="apiGateway_fruizioneHelloWorld">
			<title>Fruizione API</title>
			<para> Procediamo adesso con la descrizione dei passi di configurazione necessari, ad un
				applicativo client interno al dominio di gestione, per poter fruire di una API REST
				esterna. L'API REST esterna utilizzata sarà lo <emphasis>Swagger Petstore</emphasis>
				descritto in <xref linkend="apiGateway"/> e poichè si suppone che tale scenario sia
				già stato provato non è necessario registrare nuovamente l'API. </para>
			<para> In GovWay ad ogni dominio, interno o esterno, viene associato ad un Soggetto.
				Nella sezione <xref linkend="apiGateway_multitenant"/> viene descritto come
				registrare più soggetti relativi a domini interni. In questo esempio, invece,
				procederemo con la registrazione di un soggetto esterno che rappresenta il gestore
				del dominio a cui appartiene il PetStore. </para>
			<para> La fruizione di API, per questo primo esempio di utilizzo, viene registrata in
				modo che sia accessibile in forma anonima da qualunque client invocando l'url
				esposta da GovWay. Una rappresentazione di questo scenario è mostrata nella figura
					<xref linkend="apiGateway_restHelloWorld_fruizione"/>. </para>
			<figure id="apiGateway_restHelloWorld_fruizione">
				<title>Fruizione di una API tramite GovWay</title>
				<mediaobject>
					<imageobject>
						<imagedata width="90%" fileref="FIGURE_OUT/fruizioneRESTBase.pdf"/>
					</imageobject>
					<imageobject>
						<imagedata width="90%" fileref="FIGURE_OUT/fruizioneRESTBase.png"/>
					</imageobject>
				</mediaobject>
			</figure>
			<para> Per registrare l'API su Govway, utilizzando la console
					<emphasis>govwayConsole</emphasis>, procedere come segue: <orderedlist>
					<listitem>
						<para>
							<emphasis role="strong">Registrazione nuovo Soggetto del dominio
								esterno</emphasis>
						</para>
						<para>Accedere alla sezione <emphasis>'Soggetti'</emphasis> e selezionare il
							pulsante <emphasis>'Aggiungi'</emphasis>. Fornire i seguenti dati: <itemizedlist>
								<listitem>
									<para>
										<emphasis>Dominio</emphasis>: selezionare la voce
											<emphasis>'Esterno'</emphasis>. </para>
								</listitem>
								<listitem>
									<para>
										<emphasis>Nome</emphasis>: indicare il nome del Soggetto che
										rappresenta il nuovo dominio esterno, ad esempio
											<emphasis>'EnteEsterno'</emphasis>. </para>
								</listitem>
								<listitem>
									<para>
										<emphasis>Tipologia</emphasis>: selezionare la voce
											<emphasis>'Erogatore'</emphasis>. </para>
								</listitem>
								<listitem>
									<para>
										<emphasis>Descrizione</emphasis>: opzionalmente è possibile
										fornire una descrizione generica del soggetto. </para>
								</listitem>
							</itemizedlist>
							<figure id="apiGateway_restHelloWorld_fruizione_soggetto">
								<title>Registrazione nuovo Soggetto</title>
								<mediaobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/fruizioneRESTBaseRegistrazioneSoggetto.pdf"
										/>
									</imageobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/fruizioneRESTBaseRegistrazioneSoggetto.png"
										/>
									</imageobject>
								</mediaobject>
							</figure>
						</para>
					</listitem>
					<listitem>
						<para>
							<emphasis role="strong">Registrazione Fruizione</emphasis>
						</para>
						<para> Accedere alla sezione <emphasis>'Fruizioni'</emphasis> e selezionare
							il pulsante <emphasis>'Aggiungi'</emphasis>. Fornire i seguenti dati: <itemizedlist>
								<listitem>
									<para>
										<emphasis>API - Nome</emphasis>: selezionare l'API
										precedentemente registrata <emphasis>'PetStore
											v2'</emphasis>. </para>
								</listitem>
								<listitem>
									<para>
										<emphasis>Soggetto Erogatore - Nome</emphasis>: selezionare
										il soggetto precedentemente registrato
											<emphasis>'EnteEsterno'</emphasis>. </para>
								</listitem>
								<listitem>
									<para>
										<emphasis>Autenticazione - Stato</emphasis>: per esporre
										l'API in modo che sia invocabile da qualunque client in
										forma anonima selezionare lo stato
											<emphasis>'disabilitato'</emphasis>. </para>
								</listitem>
								<listitem>
									<para>
										<emphasis>Connettore - Endpoint</emphasis>: indicare la
											<emphasis>base uri</emphasis> dove viene erogata l'API
										nel dominio esterno. Per il nostro esempio utilizzare la
										url: <itemizedlist>
											<listitem>
												<para><emphasis>http://petstore.swagger.io/v2</emphasis></para>
											</listitem>
										</itemizedlist>
									</para>
								</listitem>
							</itemizedlist>
							<figure id="apiGateway_restHelloWorld_fruizione_registrazione">
								<title>Registrazione di una fruizione di API</title>
								<mediaobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/fruizioneRESTBaseRegistrazioneFruizione.pdf"
										/>
									</imageobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/fruizioneRESTBaseRegistrazioneFruizione.png"
										/>
									</imageobject>
								</mediaobject>
							</figure>
						</para>
						<para>Effettuato il salvataggio, l'API erogata sarà consultabile all'interno
							dell'elenco delle fruizioni. Accedendo al dettaglio si potrà conoscere
								l'<emphasis>url di invocazione</emphasis> che deve essere comunicata
							ai client che desiderano invocare l'API. <figure
								id="apiGateway_restHelloWorld_fruizione_urlInvocazione">
								<title>URL di Invocazione dell'API fruita</title>
								<mediaobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/fruizioneRESTBaseConsultazioneFruizione.pdf"
										/>
									</imageobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/fruizioneRESTBaseConsultazioneFruizione.png"
										/>
									</imageobject>
								</mediaobject>
							</figure>
						</para>
					</listitem>
					<listitem>
						<para>
							<emphasis role="strong">Invocazione API tramite GovWay</emphasis>
						</para>
						<para>Al termine di questi passi di configurazione il servizio REST sarà
							raggiungibile dai client utilizzando l'url di invocazione: <itemizedlist>
								<listitem>
									<para><emphasis>http://host:port/govway/out/&lt;soggetto-dominio-interno>/EnteEsterno/PetStore/v2/&lt;uri-risorsa></emphasis></para>
								</listitem>
							</itemizedlist>
							<note>
								<title>Soggetto Interno al Dominio</title>
								<para>In questo esempio si suppone che il nome del soggetto fornito
									durante la fase di installazione di GovWay sia
										<emphasis>Ente</emphasis>.</para>
							</note>
							<screen>curl -v -X PUT "http://127.0.0.1:8080/govway/out/Ente/EnteEsterno/PetStore/v2/pet" \
-H "accept: application/json" \
-H "Content-Type: application/json" \
-d '{
        "id": 3,
        "category": { "id": 22, "name": "dog" },
        "name": "doggie",
        "photoUrls": [ "http://image/dog.jpg" ],
        "tags": [ { "id": 23, "name": "white" } ],
        "status": "available"
}'</screen>
						</para>
						<para> L'esito dell'aggiornamento viene confermato con un codice http 200 e
							una risposta json equivalente alla richiesta:
							<screen>HTTP/1.1 200 OK
Access-Control-Allow-Origin: *
Access-Control-Allow-Methods: GET, POST, DELETE, PUT
Access-Control-Allow-Headers: Content-Type, api_key, Authorization
Content-Type: application/json
Transfer-Encoding: chunked
Server: GovWay
GovWay-Message-ID: 84e1d9a4-c181-436f-b7f0-4cabf55c370d
GovWay-Transaction-ID: 6c13b9ac-3d60-45a6-9130-297a4d832824

{
	"id":3,
	"category":{"id":22,"name":"dog"},
	"name":"doggie",
	"photoUrls":["http://image/dog.jpg"],
	"tags":[{"id":23,"name":"white"}],
	"status":"available"
}</screen>
						</para>
					</listitem>
					<listitem>
						<para>
							<emphasis role="strong">Consultazione Tracce</emphasis>
						</para>
						<para>Attraverso la console <emphasis>govwayMonitor</emphasis> è possibile
							consultare lo storico delle transazioni che sono transitate nel gateway
							e recuperare i dettagli di una singola invocazione cosi come già
							descritto nella sezione <xref linkend="apiGateway_restHelloWorld"/>.
						</para>
					</listitem>
				</orderedlist>
			</para>
		</sect2>
	</sect1>

	<sect1 id="apiGateway_gruppiRisorseHelloWorld">
		<title>Configurazioni differenti per gruppi di risorse di una API</title>

		<para>Nei precedenti esempi tutte le risorse delle API REST o le azioni dei servizi SOAP
			vengono gestite dal Gateway tramite un'unica configurazione di default. Le funzionalità
			che verranno descritte nelle successive sezioni della guida (es. <xref
				linkend="controlloAccesso"/>, <xref linkend="rateLimiting"/>, <xref
				linkend="validazione"/> ...) possono essere attivate tramite un'unica configurazione
			su tutte le risorse/azioni dell'API o possono essere distinte a seconda delle
			caratteristiche applicative di ogni singola risorsa o azione. </para>
		<para> Di seguito, per fornire un esempio di raggruppamento delle risorse, ipotizziamo di
			classificare le operazioni del servizio <emphasis>Swagger Petstore</emphasis>, descritto
			in <xref linkend="apiGateway"/>, per il metodo http: <itemizedlist>
				<listitem>
					<para><emphasis>POST</emphasis>, <emphasis>PUT</emphasis>: per queste operazioni
						viene richiesta un'autenticazione <emphasis>http basic</emphasis>
					</para>
				</listitem>
				<listitem>
					<para><emphasis>DEL</emphasis>: per queste operazioni viene richiesta
						un'autenticazione <emphasis>https</emphasis></para>
				</listitem>
				<listitem>
					<para><emphasis>GET</emphasis>: queste operazioni sono utilizzabili in forma
						anonima</para>
				</listitem>
			</itemizedlist>
			<note>
				<title>Metodologia di classificazione solo a titolo di esempio</title>
				<para>la classificazione per metodo http e i tipi di autenticazione utilizzati sono
					solamente a titolo di esempio per descrivere la possibilità di definire
					configurazioni differenti per gruppi di risorse.</para>
			</note>
		</para>
		<para> Una rappresentazione di questo scenario è mostrata nella figura <xref
				linkend="apiGateway_gruppiRisorseHelloWorld_scenario"/>. <figure
				id="apiGateway_gruppiRisorseHelloWorld_scenario">
				<title>Configurazioni differenti per gruppi di risorse di una API</title>
				<mediaobject>
					<imageobject>
						<imagedata width="90%" fileref="FIGURE_OUT/gruppiRisorseRESTBase.pdf"/>
					</imageobject>
					<imageobject>
						<imagedata width="90%" fileref="FIGURE_OUT/gruppiRisorseRESTBase.png"/>
					</imageobject>
				</mediaobject>
			</figure>
		</para>
		<para> Per classificare in gruppi le risorse dell'API <emphasis>Swagger Petstore</emphasis>,
			utilizzando la console <emphasis>govwayConsole</emphasis>, procedere come segue: <orderedlist>
				<listitem>
					<para>
						<emphasis role="strong">Registrazione Gruppo 'Creazione e
							Modifica'</emphasis>
					</para>
					<para> Accedere alla sezione <emphasis>'Erogazioni'</emphasis> e selezionare
						l'API precedentemente registrata <emphasis>'PetStore v2'</emphasis>.
						Dopodichè accedere, dal dettaglio dell'erogazione, alla sezione
							<emphasis>'Gruppi'</emphasis> dove vengono visualizzati i gruppi in cui
						sono state classificate le risorse. Per default è presente un solo gruppo
							<emphasis>Predefinito</emphasis> a cui sono associate tutte le risorse
						(vedi figura <xref linkend="apiGateway_gruppiRisorseHelloWorld_predefinito"
						/>). <figure id="apiGateway_gruppiRisorseHelloWorld_predefinito">
							<title>Situazione iniziale con unico gruppo 'Predefinito'</title>
							<mediaobject>
								<imageobject>
									<imagedata width="50%"
										fileref="FIGURE_OUT/gruppiRisorseRESTBaseGruppoPredefinito.pdf"
									/>
								</imageobject>
								<imageobject>
									<imagedata width="50%"
										fileref="FIGURE_OUT/gruppiRisorseRESTBaseGruppoPredefinito.png"
									/>
								</imageobject>
							</mediaobject>
						</figure>
					</para>
					<para> Selezionare il pulsante <emphasis>'Aggiungi'</emphasis> e fornire i
						seguenti dati: <itemizedlist>
							<listitem>
								<para>
									<emphasis>Nome Gruppo</emphasis>: permette di associare un nome
									al gruppo delle risorse. Per il nostro esempio utilizzare il
									nome 'Creazione e Modifica'. </para>
							</listitem>
							<listitem>
								<para>
									<emphasis>Risorse</emphasis>: tramite la selezione multipla è
									possibile scegliere una o più risorse che dovranno appartenere
									al gruppo. Per il nostro esempio selezionare tutte le risorse
									con il metodo http <emphasis>POST</emphasis> e
										<emphasis>PUT</emphasis>. </para>
							</listitem>
							<listitem>
								<para>
									<emphasis>Modalità</emphasis>: indica se deve essere clonata la
									configurazione a partire dal gruppo indicato o se bisogna creare
									una configurazione ex-novo. Per riprodurre lo scenario di
									esempio precedentemente descritto selezionare
										<emphasis>Nuova</emphasis>. </para>
							</listitem>
							<listitem>
								<para>
									<emphasis>Autenticazione - Stato</emphasis>: per esporre l'API
									in modo che sia invocabile da client identificati tramite
									credenziali http-basic selezionare lo stato <emphasis>'http
										basic'</emphasis>. </para>
							</listitem>
						</itemizedlist>
						<figure id="apiGateway_gruppiRisorseHelloWorld_creazioneModifica">
							<title>Registrazione Gruppo 'Creazione e Modifica'</title>
							<mediaobject>
								<imageobject>
									<imagedata width="50%"
										fileref="FIGURE_OUT/gruppiRisorseRESTBaseGruppoCreazioneModifica.pdf"
									/>
								</imageobject>
								<imageobject>
									<imagedata width="50%"
										fileref="FIGURE_OUT/gruppiRisorseRESTBaseGruppoCreazioneModifica.png"
									/>
								</imageobject>
							</mediaobject>
						</figure>
					</para>
				</listitem>
				<listitem>
					<para>
						<emphasis role="strong">Registrazione Gruppo 'Eliminazione'</emphasis>
					</para>
					<para> Procedere, come descritto in precedenza, per registrare un ulteriore
						gruppo fornendo i seguenti dati: <itemizedlist>
							<listitem>
								<para>
									<emphasis>Nome Gruppo</emphasis>: 'Eliminazione'. </para>
							</listitem>
							<listitem>
								<para>
									<emphasis>Risorse</emphasis>: Selezionare tutte le risorse con
									il metodo http <emphasis>DEL</emphasis>. </para>
							</listitem>
							<listitem>
								<para>
									<emphasis>Modalità</emphasis>: Per riprodurre lo scenario di
									esempio precedentemente descritto selezionare
										<emphasis>Nuova</emphasis>. </para>
							</listitem>
							<listitem>
								<para>
									<emphasis>Autenticazione - Stato</emphasis>: selezionare lo
									stato <emphasis>'https'</emphasis>. </para>
							</listitem>
						</itemizedlist>
						<figure id="apiGateway_gruppiRisorseHelloWorld_eliminazione">
							<title>Registrazione Gruppo 'Eliminazione'</title>
							<mediaobject>
								<imageobject>
									<imagedata width="50%"
										fileref="FIGURE_OUT/gruppiRisorseRESTBaseGruppoEliminazione.pdf"
									/>
								</imageobject>
								<imageobject>
									<imagedata width="50%"
										fileref="FIGURE_OUT/gruppiRisorseRESTBaseGruppoEliminazione.png"
									/>
								</imageobject>
							</mediaobject>
						</figure>
					</para>
				</listitem>
				<listitem>
					<para>
						<emphasis role="strong">Verifica Gruppi Esistenti</emphasis>
					</para>
					<para> Dal dettaglio dell'erogazione, accedere alla sezione <emphasis>'Gruppi
							Risorse'</emphasis> dove adesso verranno visualizzati tre gruppi, i due
						gruppi creati in precedenza ed il gruppo predefinito che adesso contiene
						solamente le risorse con metodo http GET (vedi figura <xref
							linkend="apiGateway_gruppiRisorseHelloWorld_predefinito_verifica"/>). In
						questa sezione sarà possibile agire sui gruppi anche in un secondo momento
						aggiungendo o eliminando risorse da un gruppo o creandone di nuovi. <figure
							id="apiGateway_gruppiRisorseHelloWorld_predefinito_verifica">
							<title>Gruppi Registrati</title>
							<mediaobject>
								<imageobject>
									<imagedata width="50%"
										fileref="FIGURE_OUT/gruppiRisorseRESTBaseGruppoPredefinitoVerifica.pdf"
									/>
								</imageobject>
								<imageobject>
									<imagedata width="50%"
										fileref="FIGURE_OUT/gruppiRisorseRESTBaseGruppoPredefinitoVerifica.png"
									/>
								</imageobject>
							</mediaobject>
						</figure>
					</para>
					<para> Sempre dal dettaglio dell'erogazione, accedere alla sezione
							<emphasis>'Configurazione'</emphasis> dove vengono visualizzati i tre
						gruppi. In questa sezione sarà possibile configurare per ogni gruppo le
						funzionalità descritte nelle successive sezioni della guida (es. <xref
							linkend="controlloAccesso"/>, <xref linkend="rateLimiting"/>, <xref
							linkend="validazione"/> ...). Si può notare come i due gruppi creati per
						l'esempio possiedano un <emphasis>Controllo Accessi</emphasis> abilitato,
						mentre il gruppo <emphasis>Predefinito</emphasis> che contiene solo le
						risorse GET possiede tale funzionalità disabilitata. (vedi figura <xref
							linkend="apiGateway_gruppiRisorseHelloWorld_predefinito_verifica2"/>).
							<figure id="apiGateway_gruppiRisorseHelloWorld_predefinito_verifica2">
							<title>Configurazioni dei Gruppi</title>
							<mediaobject>
								<imageobject>
									<imagedata width="50%"
										fileref="FIGURE_OUT/gruppiRisorseRESTBaseGruppoPredefinitoVerifica2.pdf"
									/>
								</imageobject>
								<imageobject>
									<imagedata width="50%"
										fileref="FIGURE_OUT/gruppiRisorseRESTBaseGruppoPredefinitoVerifica2.png"
									/>
								</imageobject>
							</mediaobject>
						</figure>
					</para>
				</listitem>
				<listitem>
					<para>
						<emphasis role="strong">Reset Cache delle Configurazioni di
							GovWay</emphasis>
					</para>
					<para> Le configurazioni accedute da GovWay vengono mantenute in una cache dopo
						il primo accesso per 2 ore. Siccome nei precendenti punti abbiamo modificato
						una configurazione utilizzata nelle sezioni precedenti se non sono trascorse
						2 ore dall'ultimo utilizzo è necessario forzare un reset della cache. Per
						farlo accedere alla sezione <emphasis>'Strumenti' - 'Runtime'</emphasis> e
						selezionare la voce <emphasis>'ResetAllCaches'</emphasis>. (vedi figura
							<xref linkend="apiGateway_gruppiRisorseHelloWorld_resetCache"/>).
							<figure id="apiGateway_gruppiRisorseHelloWorld_resetCache">
							<title>Reset Cache delle Configurazioni di GovWay</title>
							<mediaobject>
								<imageobject>
									<imagedata width="30%" fileref="FIGURE_OUT/resetCache.pdf"/>
								</imageobject>
								<imageobject>
									<imagedata width="30%" fileref="FIGURE_OUT/resetCache.png"/>
								</imageobject>
							</mediaobject>
						</figure>
					</para>
				</listitem>
				<listitem>
					<para>
						<emphasis role="strong">Invocazione Anonima di una Risorsa del gruppo
							'Predefinito' completata con successo</emphasis>
					</para>
					<para>Effettuando una richiesta di un animale tramite http method
							<emphasis>GET</emphasis> si può vedere come la richiesta completa con
						successo:
						<screen>curl -v -X GET "http://127.0.0.1:8080/govway/Ente/PetStore/v2/pet/1" \
-H "accept: application/json"</screen>
					</para>
					<para> L'esito dell'aggiornamento viene confermato con un codice http 200 e una
						risposta json equivalente alla richiesta:
						<screen>HTTP/1.1 200 OK
Access-Control-Allow-Origin: *
Access-Control-Allow-Methods: GET, POST, DELETE, PUT
Access-Control-Allow-Headers: Content-Type, api_key, Authorization
Content-Type: application/json
Transfer-Encoding: chunked
Server: GovWay
GovWay-Message-ID: 84e1d9a4-c181-436f-b7f0-4cabf55c370d
GovWay-Transaction-ID: 6c13b9ac-3d60-45a6-9130-297a4d832824

{
	"id":1,
	"category": { "id":1, "name":"Akuke" },
	"name":"roy",
	"photoUrls":["https://goo.gl/images/fxk2BX"],
	"tags":[{"id":0,"name":"Naughty Dog"}],"
	status":"available"
}</screen>
					</para>
				</listitem>
				<listitem>
					<para>
						<emphasis role="strong">Invocazione Anonima di una Risorsa del gruppo
							'Creazione e Modifica' terminata con errore</emphasis>
					</para>
					<para>Effettuando una modifica di un animale tramite http method
							<emphasis>PUT</emphasis> si può vedere come la richiesta termina con
						errore causato dal fatto che non si sono fornite credenziali <emphasis>http
							basic</emphasis>:
						<screen>curl -v -X PUT "http://127.0.0.1:8080/govway/Ente/PetStore/v2/pet" \
-H "accept: application/json" \
-H "Content-Type: application/json" \
-d '{
        "id": 3,
        "category": { "id": 22, "name": "dog" },
        "name": "doggie",
        "photoUrls": [ "http://image/dog.jpg" ],
        "tags": [ { "id": 23, "name": "white" } ],
        "status": "available"
}'</screen>
					</para>
					<para> L'esito dell'aggiornamento termina con un codice http 401 e una risposta
						contenente un json di errore generato dal Gateway (<emphasis>Problem
							Details</emphasis> come definito nella specifica <emphasis>RFC
							7807</emphasis>: <ulink url="https://tools.ietf.org/html/rfc7807"
							>https://tools.ietf.org/html/rfc7807</ulink>):
						<screen>HTTP/1.1 401 Unauthorized
Connection: keep-alive
WWW-Authenticate: Basic realm="GovWay"
Server: GovWay
Transfer-Encoding: chunked
GovWay-Transaction-ID: 15a60a91-edc1-4b7c-b7f0-b31739d543a0
Content-Type: application/problem+json
Date: Thu, 15 Nov 2018 16:07:10 GMT

{
	"type":"https://httpstatuses.com/401",
	"title":"Unauthorized",
	"status":401,
	"detail":"Autenticazione fallita, credenziali non fornite",
	"govway_status":"protocol:GOVWAY-109"
}</screen>
					</para>
					<para>Attraverso la console <emphasis>govwayMonitor</emphasis> è possibile
						consultare lo storico delle transazioni che sono transitate nel gateway.
						Dalla figura <xref linkend="apiGateway_gruppiRisorseHelloWorld_monitoraggio"
						/> si può vedere come le transazioni con metodo http
							<emphasis>PUT</emphasis> sono terminate con errore con esito
							<emphasis>Autenticazione Fallita</emphasis>. Accedendo al dettaglio
						della singola invocazione fallita è possibile esaminare i diagnostici emessi
						da GovWay nei quali viene evidenziato il motivo del fallimento (figura <xref
							linkend="apiGateway_gruppiRisorseHelloWorld_monitoraggio_dettaglio"/>).
							<figure id="apiGateway_gruppiRisorseHelloWorld_monitoraggio">
							<title>Tracce delle invocazioni transitate sul Gateway</title>
							<mediaobject>
								<imageobject>
									<imagedata width="70%"
										fileref="FIGURE_OUT/gruppiRisorseRESTBaseGruppoConsoltazioneStoricoTransazioni.pdf"
									/>
								</imageobject>
								<imageobject>
									<imagedata width="70%"
										fileref="FIGURE_OUT/gruppiRisorseRESTBaseGruppoConsoltazioneStoricoTransazioni.png"
									/>
								</imageobject>
							</mediaobject>
						</figure>
						<figure id="apiGateway_gruppiRisorseHelloWorld_monitoraggio_dettaglio">
							<title>Dettaglio di una invocazione fallita bloccata dal Gateway</title>
							<mediaobject>
								<imageobject>
									<imagedata width="40%"
										fileref="FIGURE_OUT/gruppiRisorseRESTBaseGruppoConsoltazioneStoricoTransazioniDettaglio.pdf"
									/>
								</imageobject>
								<imageobject>
									<imagedata width="40%"
										fileref="FIGURE_OUT/gruppiRisorseRESTBaseGruppoConsoltazioneStoricoTransazioniDettaglio.png"
									/>
								</imageobject>
							</mediaobject>
						</figure>
					</para>
				</listitem>

				<listitem>
					<para>
						<emphasis role="strong">Invocazione di una Risorsa del gruppo 'Creazione e
							Modifica' con credenziali 'http basic' completata con
							successo</emphasis>
					</para>
					<para> Per verificare che l'invocazione http descritta al punto precedente
						termini con successo in presenza di credenziali http basic si deve procedere
						con l'assegnazione di una credenziale ad un soggetto esterno al dominio. Di
						seguito viene descritto come fare tale assegnazione per completare
						l'esempio. Si rimanda poi alla sezione <xref
							linkend="controlloAccesso_autenticazione"/> per ulteriori dettagli sugli
						aspetti dell'autenticazione. </para>
					<para> Accedere al soggetto <emphasis>EnteEsterno</emphasis> creato in
						precedenza durante l'esempio descritto nella sezione <xref
							linkend="apiGateway_fruizioneHelloWorld"/> e associargli delle
						credenziali <emphasis>'http basic'</emphasis> come ad esempio un username
							<emphasis>enteEsterno</emphasis> ed una password
							<emphasis>123456</emphasis> (vedi figura <xref
							linkend="apiGateway_gruppiRisorseHelloWorld_associazioneCredenzialeSoggetto"
						/>). <figure
							id="apiGateway_gruppiRisorseHelloWorld_associazioneCredenzialeSoggetto">
							<title>Registrazione Gruppo 'Eliminazione'</title>
							<mediaobject>
								<imageobject>
									<imagedata width="50%"
										fileref="FIGURE_OUT/gruppiRisorseRESTBaseGruppoSoggettoAssociazioneCredenziale.pdf"
									/>
								</imageobject>
								<imageobject>
									<imagedata width="50%"
										fileref="FIGURE_OUT/gruppiRisorseRESTBaseGruppoSoggettoAssociazioneCredenziale.png"
									/>
								</imageobject>
							</mediaobject>
						</figure>
					</para>
					<para>Dopo aver associato le credenziali al soggetto effettuare il reset della
						cache delle configurazioni del Gateway come descritto in precedenza prima di
						procere con l'invocazione.</para>
					<para>Effettuando una modifica di un animale tramite http method
							<emphasis>PUT</emphasis> con le credenziali <emphasis>http
							basic</emphasis> si può vedere come la richiesta termina con successo:
						<screen>curl -v -X PUT "http://127.0.0.1:8080/govway/Ente/PetStore/v2/pet" --basic --user enteEsterno:123456 \								
-H "accept: application/json" \
-H "Content-Type: application/json" \
-d '{
        "id": 3,
        "category": { "id": 22, "name": "dog" },
        "name": "doggie",
        "photoUrls": [ "http://image/dog.jpg" ],
        "tags": [ { "id": 23, "name": "white" } ],
        "status": "available"
}'</screen>
					</para>
					<para> L'esito dell'aggiornamento viene confermato con un codice http 200 e una
						risposta json equivalente alla richiesta:
						<screen>HTTP/1.1 200 OK
Access-Control-Allow-Origin: *
Access-Control-Allow-Methods: GET, POST, DELETE, PUT
Access-Control-Allow-Headers: Content-Type, api_key, Authorization
Content-Type: application/json
Transfer-Encoding: chunked
Server: GovWay
GovWay-Message-ID: 84e1d9a4-c181-436f-b7f0-4cabf55c370d
GovWay-Transaction-ID: 6c13b9ac-3d60-45a6-9130-297a4d832824

{
	"id":3,
	"category":{"id":22,"name":"dog"},
	"name":"doggie",
	"photoUrls":["http://image/dog.jpg"],
	"tags":[{"id":23,"name":"white"}],
	"status":"available"
}</screen>
					</para>
				</listitem>

				<listitem>
					<para>
						<emphasis role="strong">Invocazione di una Risorsa del gruppo 'Eliminazione'
							con credenziali 'http basic' terminata con errore</emphasis>
					</para>
					<para>Effettuando una eliminazione di un animale tramite http method
							<emphasis>DEL</emphasis> si può vedere come la richiesta termina con
						errore causato dal fatto che non si sono fornite credenziali
							<emphasis>https</emphasis>:
						<screen>curl -v -X DELETE "http://127.0.0.1:8080/govway/Ente/PetStore/v2/pet/545646489" --basic --user enteEsterno:123456 \	
-H "accept: application/json"</screen>
					</para>
					<para> L'esito dell'eliminazione termina con un codice http 401 e una risposta
						contenente un json di errore generato dal Gateway (<emphasis>Problem
							Details</emphasis> come definito nella specifica <emphasis>RFC
							7807</emphasis>: <ulink url="https://tools.ietf.org/html/rfc7807"
							>https://tools.ietf.org/html/rfc7807</ulink>):
						<screen>HTTP/1.1 401 Unauthorized
Connection: keep-alive
Server: GovWay
Transfer-Encoding: chunked
GovWay-Transaction-ID: 15a60a91-edc1-4b7c-b7f0-b31739d543a0
Content-Type: application/problem+json
Date: Thu, 15 Nov 2018 16:07:10 GMT

{
	"type":"https://httpstatuses.com/401",
	"title":"Unauthorized",
	"status":401,
	"detail":"Autenticazione fallita, credenziali non fornite",
	"govway_status":"protocol:GOVWAY-109"
}</screen>
					</para>
					<para>Attraverso la console <emphasis>govwayMonitor</emphasis> è possibile
						consultare lo storico delle transazioni che sono transitate nel gateway.
						Dalla figura <xref
							linkend="apiGateway_gruppiRisorseHelloWorld_monitoraggio2"/> si può
						vedere come le transazioni con metodo http <emphasis>DEL</emphasis> sono
						terminate con errore con esito <emphasis>Autenticazione Fallita</emphasis>.
							<figure id="apiGateway_gruppiRisorseHelloWorld_monitoraggio2">
							<title>Tracce delle invocazioni transitate sul Gateway</title>
							<mediaobject>
								<imageobject>
									<imagedata width="70%"
										fileref="FIGURE_OUT/gruppiRisorseRESTBaseGruppoConsoltazioneStoricoTransazioni2.pdf"
									/>
								</imageobject>
								<imageobject>
									<imagedata width="70%"
										fileref="FIGURE_OUT/gruppiRisorseRESTBaseGruppoConsoltazioneStoricoTransazioni2.png"
									/>
								</imageobject>
							</mediaobject>
						</figure>
					</para>
				</listitem>

			</orderedlist>
		</para>
		<note>
			<title>Ripristino Erogazione API con il solo gruppo predefinito per prosieguo degli
				scenari</title>
			<para> Nei scenari descritti nelle successive sezioni verrà utilizzato sempre il gruppo
				predefinito per mostrare la funzionalità. Per tale motivo si consiglia di
				ripristinare la situazione iniziale eliminando i due gruppi creati in questa sezione
				accedendo al dettaglio dell'erogazione dell'API <emphasis>PetStore</emphasis> nella
				sezione <emphasis>'Gruppi'</emphasis>. </para>
		</note>
	</sect1>

	<sect1 id="apiGateway_sospensione">
		<title>Sospensione di una API</title>

		<para> Una erogazione o una fruizione di API, precedentemente configurata, può essere
			temporaneamente sospesa. L'effetto di una sospensione è quella di bloccare sul gateway
			le richieste e di ritornare al client oltre all'informazione che il servizio non è
			disponibile una indicazione su quando può riprovare tramite l'header http standard
				<emphasis>Retry-After</emphasis>. Una sospensione è utile in diversi scenari quali
			ad esempio: <itemizedlist>
				<listitem>
					<para><emphasis>Aggiornamento applicativo erogatore</emphasis>: Durante il
						periodo di aggiornamento di un applicativo erogatore una sospensione
						dell'erogazione permette di non intasare di richieste, che andrebbero in
						errore, il backend applicativo. </para>
				</listitem>
				<listitem>
					<para><emphasis>Problema applicativo client</emphasis>: Supponiamo che un
						applicativo client produca delle richieste, verso un dominio esterno, che
						generano errori dovuti a problemi del software del client. Una volta
						identificato il problema, per evitare di intasare di richieste errate il
						Dominio esterno può essere funzionale sospendere la fruizione dell'API fino
						a che il problema non viene risolto. </para>
				</listitem>
			</itemizedlist>
		</para>
		<para> Una rappresentazione di questo scenario è mostrata nella figura <xref
				linkend="apiGateway_sospensione_scenario"/>. <figure
				id="apiGateway_sospensione_scenario">
				<title>Sospensione di una API</title>
				<mediaobject>
					<imageobject>
						<imagedata width="90%" fileref="FIGURE_OUT/sospensioneBase.pdf"/>
					</imageobject>
					<imageobject>
						<imagedata width="90%" fileref="FIGURE_OUT/sospensioneBase.png"/>
					</imageobject>
				</mediaobject>
			</figure>
		</para>
		<para> Per sospendere una erogazione o fruizione di API, utilizzando la console
				<emphasis>govwayConsole</emphasis> dal dettaglio dell'erogazione o della fruizione
			accedere alla sezione <emphasis>'Configurazione'</emphasis>. Cliccando sull'icona di
			stato verde comparirà una finestra di dialogo dove viene richiesto di confermare la
			sospensione. La figura <xref linkend="apiGateway_sospensione_disattivazione"/> mostra
			una sospensione in corso dell'erogazione registrata nella sezione <xref
				linkend="apiGateway_restHelloWorld"/>. <figure
				id="apiGateway_sospensione_disattivazione">
				<title>Sospensione di una erogazione</title>
				<mediaobject>
					<imageobject>
						<imagedata width="50%" fileref="FIGURE_OUT/sospensioneDisattivazione.pdf"/>
					</imageobject>
					<imageobject>
						<imagedata width="50%" fileref="FIGURE_OUT/sospensioneDisattivazione.png"/>
					</imageobject>
				</mediaobject>
			</figure>
		</para>
		<para> Procedendo con la conferma l'erogazione sarà a tutti gli effetti sospesa come mostra
			anche l'icona di stato rossa (vedi figura <xref linkend="apiGateway_sospensione_elenco"
			/>). <figure id="apiGateway_sospensione_elenco">
				<title>Erogazione sospesa</title>
				<mediaobject>
					<imageobject>
						<imagedata width="50%" fileref="FIGURE_OUT/sospensioneElenco.pdf"/>
					</imageobject>
					<imageobject>
						<imagedata width="50%" fileref="FIGURE_OUT/sospensioneElenco.png"/>
					</imageobject>
				</mediaobject>
			</figure>
		</para>
		<para> L'informazione sullo stato di sospensione di una erogazione o una fruizione viene
			fornita, tramite l'icona di stato, anche nell'elenco principale come mostrato nella
			figura <xref linkend="apiGateway_sospensione_elencoErogazioni"/>. <figure
				id="apiGateway_sospensione_elencoErogazioni">
				<title>Stato disabilitato riportato nell'elenco delle erogazioni</title>
				<mediaobject>
					<imageobject>
						<imagedata width="50%" fileref="FIGURE_OUT/sospensioneElencoErogazioni.pdf"
						/>
					</imageobject>
					<imageobject>
						<imagedata width="50%" fileref="FIGURE_OUT/sospensioneElencoErogazioni.png"
						/>
					</imageobject>
				</mediaobject>
			</figure>
		</para>

		<para>Effettuando una modifica di un animale tramite http method <emphasis>PUT</emphasis> si
			può vedere come la richiesta termina con errore causato dal fatto che l'erogazione
			risulta sospesa:
			<screen>curl -v -X PUT "http://127.0.0.1:8080/govway/Ente/PetStore/v2/pet" \
-H "accept: application/json" \
-H "Content-Type: application/json" \
-d '{
        "id": 3,
        "category": { "id": 22, "name": "dog" },
        "name": "doggie",
        "photoUrls": [ "http://image/dog.jpg" ],
        "tags": [ { "id": 23, "name": "white" } ],
        "status": "available"
}'</screen>
		</para>
		<para> L'esito dell'aggiornamento termina con un codice http 503, un header http
				<emphasis>Retry-After</emphasis> contenenete l'indicazione sul numero di secondi
			dopo i quali un client dovrebbe ripresentarsi e una risposta contenente un json di
			errore generato dal Gateway (<emphasis>Problem Details</emphasis> come definito nella
			specifica <emphasis>RFC 7807</emphasis>: <ulink
				url="https://tools.ietf.org/html/rfc7807"
				>https://tools.ietf.org/html/rfc7807</ulink>):
			<screen>HTTP/1.1 503 Service Unavailable
Connection: keep-alive
Retry-After: 338
Server: GovWay
Transfer-Encoding: chunked
GovWay-Transaction-ID: 15a60a91-edc1-4b7c-b7f0-b31739d543a0
Content-Type: application/problem+json
Date: Thu, 15 Nov 2018 16:07:10 GMT

{
	"type":"https://httpstatuses.com/503",
	"title":"Service Unavailable",
	"status":503,
	"detail":"Porta disabilitata",
	"govway_status":"integration:GOVWAY-446"
}</screen>
		</para>
		<para>Attraverso la console <emphasis>govwayMonitor</emphasis> è possibile consultare lo
			storico delle transazioni che sono transitate nel gateway. Dalla figura <xref
				linkend="apiGateway_sospensione_monitoraggio"/> si può vedere come le transazioni
			generate dopo la sospensione sono terminate con errore con esito <emphasis>API
				Sospesa</emphasis>. <figure id="apiGateway_sospensione_monitoraggio">
				<title>Tracce delle invocazioni transitate sul Gateway</title>
				<mediaobject>
					<imageobject>
						<imagedata width="70%"
							fileref="FIGURE_OUT/sospensioneConsoltazioneStoricoTransazioni.pdf"/>
					</imageobject>
					<imageobject>
						<imagedata width="70%"
							fileref="FIGURE_OUT/sospensioneConsoltazioneStoricoTransazioni.png"/>
					</imageobject>
				</mediaobject>
			</figure>
		</para>

		<para> Se per una erogazione o fruizione di API è stata effettuata la classificazione delle
			risorse in gruppi, come mostrato nella sezione <xref
				linkend="apiGateway_gruppiRisorseHelloWorld"/>, la sospensione può essere effettuata
			sul singolo gruppo. </para>
		<para> La figura <xref linkend="apiGateway_sospensione_gruppo_elenco"/> mostra un esempio di
			sospensione, nello scenario <xref linkend="apiGateway_gruppiRisorseHelloWorld"/>, del
			solo gruppo <emphasis>'Predefinito'</emphasis>. <figure
				id="apiGateway_sospensione_gruppo_elenco">
				<title>Gruppo di una erogazione sospeso</title>
				<mediaobject>
					<imageobject>
						<imagedata width="50%" fileref="FIGURE_OUT/sospensioneGruppiElenco.pdf"/>
					</imageobject>
					<imageobject>
						<imagedata width="50%" fileref="FIGURE_OUT/sospensioneGruppiElenco.png"/>
					</imageobject>
				</mediaobject>
			</figure>
		</para>
		<para> L'informazione sullo stato di sospensione parziale (relativa a non tutti i gruppi) di
			una erogazione o una fruizione viene fornita, tramite un icona di stato gialla, anche
			nell'elenco principale come mostrato nella figura <xref
				linkend="apiGateway_sospensione_gruppo_elencoErogazioni"/>. <figure
				id="apiGateway_sospensione_gruppo_elencoErogazioni">
				<title>Stato disabilitato di un gruppo riportato nell'elenco delle
					erogazioni</title>
				<mediaobject>
					<imageobject>
						<imagedata width="50%"
							fileref="FIGURE_OUT/sospensioneGruppiStatoGialloElenco.pdf"/>
					</imageobject>
					<imageobject>
						<imagedata width="50%"
							fileref="FIGURE_OUT/sospensioneGruppiStatoGialloElenco.png"/>
					</imageobject>
				</mediaobject>
			</figure>
		</para>


	</sect1>

	<sect1 id="gestioneCORS">
		<title>Gestione CORS</title>
		<para> Quando un'applicazione client in esecuzione su un browser (es. codice javascript)
			richiede l'accesso ad una risorsa di un differente dominio, protocollo o porta tale
			richiesta viene gestita dal browser tramite una politica di <emphasis>cross-origin HTTP
				request (CORS)</emphasis>. Il CORS definisce un modo nel quale un browser ed un
			server (o il gateway) possono interagire per abilitare interazioni attraverso differenti
			domini. </para>
		<para>In GovWay è possibile abilitare la gestione del CORS sia globalmente, in modo che sia
			valida per tutte le APIs, che singolarmente sulla singola erogazione o fruizione.</para>
		<para> Una rappresentazione di questo scenario è mostrata nella figura <xref
				linkend="apiGateway_cors"/>. <figure id="apiGateway_cors">
				<title>Scenario cross-origin HTTP request (CORS)</title>
				<mediaobject>
					<imageobject>
						<imagedata width="90%" fileref="FIGURE_OUT/cors.pdf"/>
					</imageobject>
					<imageobject>
						<imagedata width="90%" fileref="FIGURE_OUT/cors.png"/>
					</imageobject>
				</mediaobject>
			</figure>
		</para>
		<para>In GovWay è abilitata per default una gestione globale del CORS. I dettagli sulla
			configurazione globale sono accedibili tramite la voce del menù
				<emphasis>'Configurazione - Generale'</emphasis> all'interno della sezione
				<emphasis>'Gestione CORS'</emphasis>. Per il dettaglio sul significa di ogni voce si
			rimanda alla specifica CORS <emphasis>https://www.w3.org/TR/cors/</emphasis>. Sono
			abilitati per default: <itemizedlist>
				<listitem>
					<para><emphasis>Access-Control-Allow-Origins</emphasis>: Qualsiasi origine
						(*)</para>
				</listitem>
				<listitem>
					<para><emphasis>Access-Control-Allow-Methods</emphasis>: i metodi http POST,
						PUT, GET, DELETE e PATCH</para>
				</listitem>
				<listitem>
					<para><emphasis>Access-Control-Allow-Headers</emphasis>: gli header http
						'Authorization', 'Content-Type' e 'SOAPAction'</para>
				</listitem>
			</itemizedlist> La figura <xref linkend="apiGateway_cors_confGlobale"/> mostra la
			configurazione globale attiva per default. <figure id="apiGateway_cors_confGlobale">
				<title>CORS - Configurazione di default</title>
				<mediaobject>
					<imageobject>
						<imagedata width="50%" fileref="FIGURE_OUT/corsConfDefault.pdf"/>
					</imageobject>
					<imageobject>
						<imagedata width="50%" fileref="FIGURE_OUT/corsConfDefault.png"/>
					</imageobject>
				</mediaobject>
			</figure>
		</para>
		<para> Tramite il tool on-line disponibile all'indirizzo <ulink
				url="https://www.test-cors.org/">https://www.test-cors.org/</ulink> è possibile
			verificare il funzionamento dello scenario descritto nella figura <xref
				linkend="apiGateway_cors"/>. Configurare il tool con i seguenti parametri per
			utilizzare il servizio descritto nella sezione <xref linkend="apiGateway_restHelloWorld"
			/>: <itemizedlist>
				<listitem>
					<para><emphasis>HTTP Method</emphasis>: PUT</para>
				</listitem>
				<listitem>
					<para><emphasis>Request Headers</emphasis>: <itemizedlist>
							<listitem>
								<para>accept: application/json</para>
							</listitem>
							<listitem>
								<para>Content-Type: application/json</para>
							</listitem>
						</itemizedlist>
					</para>
				</listitem>
				<listitem>
					<para><emphasis>Request Content</emphasis>:
						<screen>{
        "id": 3,
        "category": { "id": 22, "name": "dog" },
        "name": "doggie",
        "photoUrls": [ "http://image/dog.jpg" ],
        "tags": [ { "id": 23, "name": "white" } ],
        "status": "available"
}</screen>
					</para>
				</listitem>
				<listitem>
					<para><emphasis>Remote URL</emphasis>:
						http://127.0.0.1:8080/govway/Ente/PetStore/v2/pet</para>
				</listitem>
			</itemizedlist>
		</para>
		<para> Se si attiva la modalità <emphasis>Developers Tool</emphasis> (es. su Chrome 'More
			Tools - Developers Tool') è possibile vedere le richieste effettuate dal browser oltre
			agli header http scambiati. </para>
		<para>Nella figura <xref linkend="apiGateway_cors_test1"/> è possibile vedere come siano
			state effettuate due richieste http di cui la prima è stata iniziata dal browser
			(Initiator: corsclient.js). <figure id="apiGateway_cors_test1">
				<title>Verifica CORS</title>
				<mediaobject>
					<imageobject>
						<imagedata width="50%" fileref="FIGURE_OUT/corsTest_1.pdf"/>
					</imageobject>
					<imageobject>
						<imagedata width="50%" fileref="FIGURE_OUT/corsTest_1.png"/>
					</imageobject>
				</mediaobject>
			</figure>
		</para>
		<para> La figura <xref linkend="apiGateway_cors_test2"/> evidenzia gli header scambiati
			nella prima richiesta OPTIONS; tra gli header della risposta vi sono gli header relativi
			alla configurazione di default del CORS di GovWay tra cui l'header
			'Access-Control-Allow-Origins' impostato al valore '*'.<figure
				id="apiGateway_cors_test2">
				<title>Verifica CORS: richiesta OPTIONS</title>
				<mediaobject>
					<imageobject>
						<imagedata width="50%" fileref="FIGURE_OUT/corsTest_2.pdf"/>
					</imageobject>
					<imageobject>
						<imagedata width="50%" fileref="FIGURE_OUT/corsTest_2.png"/>
					</imageobject>
				</mediaobject>
			</figure>
		</para>
		<!--
		<para>
			La figura 
			<xref linkend="apiGateway_cors_test3"/> evidenzia invece gli header scambiati nella seconda richiesta PUT che rappresenta la richiesta originale.<figure
				id="apiGateway_cors_test3">
				<title>Verifica CORS: richiesta PUT</title>
				<mediaobject>
					<imageobject>
						<imagedata width="50%" fileref="FIGURE_OUT/corsTest_3.pdf"/>
					</imageobject>
					<imageobject>
						<imagedata width="50%" fileref="FIGURE_OUT/corsTest_3.png"/>
					</imageobject>
				</mediaobject>
			</figure>
		</para>
		-->
		<para>Vediamo adesso come modificare la gestione del CORS di una singola una erogazione o
			fruizione di API utilizzando la console <emphasis>govwayConsole</emphasis>. Per farlo
			accedere al dettaglio di un'erogazione o di una fruizione e cliccare sull'icona di
			modifica presente nella riga relativa alla gestione del CORS. <figure
				id="apiGateway_cors_api">
				<title>Personalizzazione Gestione CORS di una erogazione</title>
				<mediaobject>
					<imageobject>
						<imagedata width="50%" fileref="FIGURE_OUT/corsErogazioneModifica.pdf"/>
					</imageobject>
					<imageobject>
						<imagedata width="50%" fileref="FIGURE_OUT/corsErogazioneModifica.png"/>
					</imageobject>
				</mediaobject>
			</figure>
		</para>
		<para>Impostare il campo <emphasis>Stato</emphasis> al valore
				<emphasis>Ridefinito</emphasis>. La maschera di configurazione si aggiornerà
			presentando i dati relativi alla configurazione globale di default. Deselezionare a
			questo punto la voce <emphasis>'All Allow Origins'</emphasis> ed impostare un'origine
			specifica nel campo <emphasis>'Allow Origins'</emphasis>. Ad esempio utilizzare il
			valore <emphasis>'https://www.test-cors.org'</emphasis> relativo al tool di test
			descritto in precedenza. <figure id="apiGateway_cors_api2">
				<title>Personalizzazione Gestione CORS: definizione di uno specifico
					'origin'</title>
				<mediaobject>
					<imageobject>
						<imagedata width="50%" fileref="FIGURE_OUT/corsErogazioneModifica2.pdf"/>
					</imageobject>
					<imageobject>
						<imagedata width="50%" fileref="FIGURE_OUT/corsErogazioneModifica2.png"/>
					</imageobject>
				</mediaobject>
			</figure>
		</para>

		<para> Effettuando un nuovo test tramite il tool on-line <emphasis>test-cors</emphasis> è
			possibile vedere nella prima richiesta OPTIONS, che tra gli header della risposta non vi
			è più l'header 'Access-Control-Allow-Origins' impostato al valore '*' ma bensì con il
			nuovo valore configurato. <note>
				<title>Reset Cache delle Configurazioni prima di un nuovo test</title>
				<para> Le configurazioni accedute da GovWay vengono mantenute in una cache dopo il
					primo accesso per 2 ore, è quindi necessario forzare un reset della cache. Per
					farlo accedere alla sezione <emphasis>'Strumenti' - 'Runtime'</emphasis> e
					selezionare la voce <emphasis>'ResetAllCaches'</emphasis>. </para>
			</note>
			<figure id="apiGateway_cors_test_origin">
				<title>Verifica CORS: definizione di uno specifico 'origin'</title>
				<mediaobject>
					<imageobject>
						<imagedata width="50%" fileref="FIGURE_OUT/corsTest_origin.pdf"/>
					</imageobject>
					<imageobject>
						<imagedata width="50%" fileref="FIGURE_OUT/corsTest_origin.png"/>
					</imageobject>
				</mediaobject>
			</figure>
		</para>
	</sect1>

	<sect1 id="controlloAccesso">
		<title>Controllo degli Accessi</title>

		<sect2 id="controlloAccesso_token">
			<title>OAuth</title>
			<para>GovWay permette di proteggere le erogazioni e/o fruizioni di API tramite il
				protocollo <emphasis>OAuth2</emphasis>. Una API può essere configurata in modo che
				ogni sua invocazione debba essere accompagnata da un <emphasis>access
					token</emphasis> valido rilasciato da uno degli <emphasis>Authorization
					Server</emphasis> censiti. </para>
			<para> La figura <xref linkend="oauth_scenario"/> mette in evidenza tutte le
				comunicazioni e gli attori coinvolti per riuscire a porta a termine l'invocazione
				dello scenario descritto nella sezione <xref linkend="apiGateway_restHelloWorld"/>
				dove però l'api viene protetta tramite <emphasis>OAuth</emphasis>. </para>
			<para>
				<orderedlist>
					<listitem>
						<para><emphasis>Acquisizione Access Token</emphasis></para>
						<para> Un client deve richiedere un <emphasis>access token</emphasis>
							direttamente all'<emphasis>Authorization Server</emphasis> secondo le
							modalità supportate. In OAuth esistono diverse modalità alcune delle
							quali richiedono anche il coinvolgimento dell'utente al quale verrà
							richiesto di autenticarsi e poi di autorizzare le operazioni che il
							client intende eseguire. (<ulink
								url="https://tools.ietf.org/html/rfc6749">RFC 6749</ulink>) </para>
					</listitem>
					<listitem>
						<para><emphasis>Richiesta di servizio con Access Token</emphasis></para>
						<para> Un client ottenuto l'<emphasis>access token</emphasis> deve spenderlo
							all'interno della richiesta inoltrata a GovWay già descritta nella
							sezione <xref linkend="apiGateway_restHelloWorld"/>. Un <emphasis>access
								token</emphasis> può essere incluso nella richiesta tramite diverse
							modalità definite dalla specifica <ulink
								url="https://tools.ietf.org/html/rfc6750">RFC 6750</ulink>. Nello
							scenario di esempio è stato utilizzato l'header http
								<emphasis>Authorization</emphasis> utilizzando la modalità
								<emphasis>Bearer</emphasis>. </para>
					</listitem>
					<listitem>
						<para><emphasis>Validazione Access Token</emphasis></para>
						<para> GovWay verifica che la richiesta contenga un <emphasis>access
								token</emphasis> valido. Per effettuare tale validazione GovWay
							supporta differenti modalità: <itemizedlist>
								<listitem>
									<para><emphasis>Servizio di Introspection</emphasis>: se
											l'<emphasis>access token</emphasis> è
											'<emphasis>opaco</emphasis>' l'unica maniera per
										validarlo è accedere al servizio di introspection che deve
										essere disponibile sull'<emphasis>Authorization
											Server</emphasis>. Tale servizio viene definito dalla
										specifica <ulink url="https://tools.ietf.org/html/rfc7662"
											>RFC 7662</ulink></para>
								</listitem>
								<listitem>
									<para><emphasis>Validazione JWT</emphasis>: se
											l'<emphasis>access token</emphasis> è un token
											'<emphasis>JWT</emphasis>' (<ulink
											url="https://tools.ietf.org/html/rfc7519">RFC
											7519</ulink>) GovWay può essere configurato per
										validarlo secondo la specifica JWS (<ulink
											url="https://tools.ietf.org/html/rfc7515"> RFC
											7515</ulink>) o JWE (<ulink
											url="https://tools.ietf.org/html/rfc7516">RFC
											7516</ulink>). direttamente sul gateway senza accedere
										ad alcun servizio remoto.</para>
								</listitem>
							</itemizedlist>
						</para>
					</listitem>
					<listitem>
						<para><emphasis>Forward Claims dell'Access Token</emphasis></para>
						<para> Effettuata la validazione dell'<emphasis>access token</emphasis>
							GovWay può fornire all'applicativo erogatore le varie informazioni
							acquisite durante la validazione del token, ad esempio sotto forma di
							header http. </para>
					</listitem>
				</orderedlist>
				<figure id="oauth_scenario">
					<title>Scenario OAuth</title>
					<mediaobject>
						<imageobject>
							<imagedata width="90%" fileref="FIGURE_OUT/oauth_scenario.pdf"/>
						</imageobject>
						<imageobject>
							<imagedata width="90%" fileref="FIGURE_OUT/oauth_scenario.png"/>
						</imageobject>
					</mediaobject>
				</figure>
			</para>
			<para> Come si evince dalla figura <xref linkend="oauth_scenario"/> la creazione del
				token non è gestita da GovWay, ma da un qualunque Authorization Server esterno.
				GovWay è preconfigurato per poter utilizzare Google come Authorization Server
				nell'installazione di base e quindi un applicativo può ottenere il token da Google e
				poi spenderlo all'interno delle richieste applicative spedite verso GovWay. </para>
			<para> Lo scenario istanziato su Google sarà utilizzato in tutte le successive
				sotto-sezioni per descrivere tutte le funzionalità inerenti
					<emphasis>OAuth2</emphasis> attivabili su GovWay. </para>
			<note>
				<title>Requisito: account gmail</title>
				<para> Per provare gli scenari descritti nelle successive sotto-sezioni è necessario
					avere un account su gmail. </para>
			</note>

			<sect3 id="controlloAccesso_token_introspection">
				<title>Validazione tramite Introspection</title>
				<para>In questa sezione viene descritto come realizzare lo scenario raffigurato
					nella figura <xref linkend="oauth_scenario"/> dove GovWay utilizza il servizio
					Introspection dell'<emphasis>Authorization Server di Google</emphasis> per
					validare l'<emphasis>access token</emphasis> ricevuto.</para>
				<itemizedlist>
					<listitem>
						<para><emphasis role="strong">Configurazione Controllo degli
								Accessi</emphasis></para>
						<para> Accedere alla sezione <emphasis>'Erogazioni'</emphasis> e selezionare
							l'API precedentemente registrata <emphasis>'PetStore v2'</emphasis>.
							Dopodichè accedere, dal dettaglio dell'erogazione, alla sezione
								<emphasis>'Configurazione'</emphasis> dove vengono visualizzate le
							funzionalità attive. Per abilitare una protezione dell'api basata su
								<emphasis>OAuth</emphasis> cliccare sulla voce presente nella
							colonna '<emphasis>Controllo Accessi</emphasis>' e procedere con la
							seguente configurazione all'interno della sezione <emphasis>'Gestione
								Token'</emphasis>: <itemizedlist>
								<listitem>
									<para><emphasis>Stato</emphasis>: abilitato</para>
								</listitem>
								<listitem>
									<para><emphasis>Policy</emphasis>: Google</para>
								</listitem>
								<listitem>
									<para><emphasis>Validazione JWT</emphasis>: disabilitato</para>
								</listitem>
								<listitem>
									<para><emphasis>Introspection</emphasis>: abilitato</para>
								</listitem>
								<listitem>
									<para><emphasis>User Info</emphasis>: disabilitato</para>
								</listitem>
								<listitem>
									<para><emphasis>Token Forward</emphasis>: abilitato</para>
								</listitem>
							</itemizedlist> Effettuata la configurazione salvarla cliccando sul
							pulsante 'Salva'. <figure id="apiGateway_oauth_introspection_config">
								<title>Configurazione OAuth2 per PetStore</title>
								<mediaobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/oauthIntrospectionConfig.pdf"/>
									</imageobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/oauthIntrospectionConfig.png"/>
									</imageobject>
								</mediaobject>
							</figure>
						</para>
					</listitem>

					<listitem>
						<para>
							<emphasis role="strong">Invocazione API senza un access token</emphasis>
						</para>
						<note>
							<title>Reset Cache delle Configurazioni prima di un nuovo test</title>
							<para> Le configurazioni accedute da GovWay vengono mantenute in una
								cache dopo il primo accesso per 2 ore, è quindi necessario forzare
								un reset della cache. Per farlo accedere alla sezione
									<emphasis>'Strumenti' - 'Runtime'</emphasis> e selezionare la
								voce <emphasis>'ResetAllCaches'</emphasis>. </para>
						</note>
						<para>Al termine di questi passi di configurazione il servizio REST sarà
							invocabile solamente se viene fornito un <emphasis>access
								token</emphasis>. Con il seguente comando è possibile constatare
							come una richiesta che non possieda l'<emphasis>access token</emphasis>
							viene rifiutata da GovWay.
							<screen>curl -v -X PUT "http://127.0.0.1:8080/govway/Ente/PetStore/v2/pet" \
-H "accept: application/json" \
-H "Content-Type: application/json" \
-d '{
        "id": 3,
        "category": { "id": 22, "name": "dog" },
        "name": "doggie",
        "photoUrls": [ "http://image/dog.jpg" ],
        "tags": [ { "id": 23, "name": "white" } ],
        "status": "available"
}'</screen>
						</para>
						<para> L'esito dell'aggiornamento termina con un codice di errore http 400 e
							una risposta problem+json che riporta la motivazione:
							<screen>HTTP/1.1 400 Bad Request
WWW-Authenticate: Bearer realm="Google", error="invalid_request", error_description="The request is missing a required token parameter"
Content-Type: application/problem+json
Transfer-Encoding: chunked
Server: GovWay
GovWay-Transaction-ID: 6c13b9ac-3d60-45a6-9130-297a4d832824

{
	"type":"https://httpstatuses.com/400",
	"title":"Bad Request",
	"status":400,
	"detail":"Token non presente",
	"govway_status":"protocol:GOVWAY-1366"
}</screen>
						</para>
					</listitem>
					<listitem>
						<para>
							<emphasis role="strong">Consultazione Tracce in errore</emphasis>
						</para>
						<para>Attraverso la console <emphasis>govwayMonitor</emphasis> è possibile
							consultare lo storico delle transazioni che sono transitate nel gateway.
							Dalla figura <xref linkend="apiGateway_oauth_introspection_error"/> si
							può vedere come le transazioni generate dopo la configurazione sopra
							indicata sono terminate con errore con esito <emphasis>Gestione Token
								Fallita</emphasis>. <figure
								id="apiGateway_oauth_introspection_error">
								<title>Tracce delle invocazioni terminate con errore 'Gestione Token
									Fallita'</title>
								<mediaobject>
									<imageobject>
										<imagedata width="70%"
											fileref="FIGURE_OUT/oauthConsoltazioneStoricoTransazioniErrore.pdf"
										/>
									</imageobject>
									<imageobject>
										<imagedata width="70%"
											fileref="FIGURE_OUT/oauthConsoltazioneStoricoTransazioniErrore.png"
										/>
									</imageobject>
								</mediaobject>
							</figure>
						</para>
					</listitem>
					<listitem>
						<para><emphasis role="strong">Acquisizione Access Token</emphasis></para>
						<para> Per simulare l'acquisizione di un token è possibile utilizzare
							l'applicazione <emphasis>Playground</emphasis>, disponibile
							all'indirizzo <ulink
								url="https://developers.google.com/oauthplayground/"/>, che consente
							di richiedere un <emphasis>access token</emphasis>
								all'<emphasis>Authorization Server di Google</emphasis>. </para>
						<para> L'applicazione <emphasis>Playground</emphasis> consente agevolmente
							di ottenere l'<emphasis>access token</emphasis>: <orderedlist>
								<listitem>
									<para><emphasis>Selezione scope</emphasis></para>
									<para>Devono essere selezionati gli <emphasis>scope</emphasis>
										che un'applicazione client necessita per invocare poi
										effettivamente le API di Google. Ad esempio selezioniamo lo
										scope
											<emphasis>'https://www.googleapis.com/auth/plus.me'</emphasis>
										che permette all'applicazione di conoscere l'identità di un
										utente su google. Cliccando infine sul pulsante
											<emphasis>'Authorize APIs'</emphasis> si verrà rediretti
										alla pagina di autenticazione in google dove si dovrà
										procedere ad autenticarsi. </para>
									<figure id="apiGateway_oauth_introspection_playground_step1">
										<title>Ottenimento Token: Playground Google, Step 1</title>
										<mediaobject>
											<imageobject>
												<imagedata width="50%"
												fileref="FIGURE_OUT/oauthIntrospectionPlaygroundStep1.pdf"
												/>
											</imageobject>
											<imageobject>
												<imagedata width="50%"
												fileref="FIGURE_OUT/oauthIntrospectionPlaygroundStep1.png"
												/>
											</imageobject>
										</mediaobject>
									</figure>
								</listitem>
								<listitem>
									<para><emphasis>Authorization Code</emphasis></para>
									<para>Effettuata l'autenticazione in Google si viene rediretti
										alla seconda fase prevista dall'applicazione
											<emphasis>Playground</emphasis> denominata
											<emphasis>'Exchange authorization code for
											tokens'</emphasis>. </para>
									<figure id="apiGateway_oauth_introspection_playground_step2">
										<title>Ottenimento Token: Playground Google, Step 2</title>
										<mediaobject>
											<imageobject>
												<imagedata width="50%"
												fileref="FIGURE_OUT/oauthIntrospectionPlaygroundStep2.pdf"
												/>
											</imageobject>
											<imageobject>
												<imagedata width="50%"
												fileref="FIGURE_OUT/oauthIntrospectionPlaygroundStep2.png"
												/>
											</imageobject>
										</mediaobject>
									</figure>
								</listitem>
								<listitem>
									<para><emphasis>Access Token</emphasis></para>
									<para>Cliccando sul pulsante <emphasis>'Exchange authorization
											code for tokens'</emphasis> si ottiene infine un
											<emphasis>access token</emphasis> da estrarre nella
										risposta http visualizzata sulla destra dell'applicazione. </para>
									<figure id="apiGateway_oauth_introspection_playground_step3">
										<title>Ottenimento Token: Playground Google, Step 3</title>
										<mediaobject>
											<imageobject>
												<imagedata width="50%"
												fileref="FIGURE_OUT/oauthIntrospectionPlaygroundStep3red.pdf"
												/>
											</imageobject>
											<imageobject>
												<imagedata width="50%"
												fileref="FIGURE_OUT/oauthIntrospectionPlaygroundStep3red.png"
												/>
											</imageobject>
										</mediaobject>
									</figure>
								</listitem>
							</orderedlist>
						</para>
					</listitem>
					<listitem>
						<para>
							<emphasis role="strong">Invocazione API con un access token</emphasis>
						</para>
						<para>Con il seguente comando è possibile effettuare una richiesta che
							possiede l'<emphasis>access token</emphasis> ottenuto nella precedente
							fase. <note>
								<title>Bearer Token Usage</title>
								<para> Un <emphasis>access token</emphasis> può essere incluso nella
									richiesta tramite una delle modalità definite dalla specifica
										<ulink url="https://tools.ietf.org/html/rfc6750">RFC
										6750</ulink>. </para>
							</note>
							<screen>curl -v -X PUT "http://127.0.0.1:8080/govway/Ente/PetStore/v2/pet?access_token=ACCESS_TOKEN" \
-H "accept: application/json" \
-H "Content-Type: application/json" \
-d '{
        "id": 3,
        "category": { "id": 22, "name": "dog" },
        "name": "doggie",
        "photoUrls": [ "http://image/dog.jpg" ],
        "tags": [ { "id": 23, "name": "white" } ],
        "status": "available"
}'</screen>
						</para>
						<para> L'esito dell'aggiornamento viene confermato con un codice http 200 e
							una risposta json equivalente alla richiesta:
							<screen>HTTP/1.1 200 OK
Access-Control-Allow-Origin: *
Access-Control-Allow-Methods: GET, POST, DELETE, PUT
Access-Control-Allow-Headers: Content-Type, api_key, Authorization
Content-Type: application/json
Transfer-Encoding: chunked
Server: GovWay
GovWay-Message-ID: 84e1d9a4-c181-436f-b7f0-4cabf55c370d
GovWay-Transaction-ID: 6c13b9ac-3d60-45a6-9130-297a4d832824

{
	"id":3,
	"category":{"id":22,"name":"dog"},
	"name":"doggie",
	"photoUrls":["http://image/dog.jpg"],
	"tags":[{"id":23,"name":"white"}],
	"status":"available"
}</screen>
						</para>
					</listitem>
					<listitem>
						<para>
							<emphasis role="strong">Consultazione Tracce</emphasis>
						</para>
						<para>Attraverso la console <emphasis>govwayMonitor</emphasis> è possibile
							adesso vedere che le richieste transitano con successo sul gateway.
							Accedendo al dettaglio di una transazione, tra le varie informazioni
							presenti nella sezione <emphasis>'Informazioni Mittente'</emphasis>,
							sono presenti le informazioni principali estratte dal token (es. Subject
							presente nel claim 'sub'). <figure
								id="apiGateway_oauth_introspection_ok_info">
								<title>Traccia di una invocazione terminata con successo</title>
								<mediaobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/oauthConsoltazioneStoricoTransazioniOk.pdf"
										/>
									</imageobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/oauthConsoltazioneStoricoTransazioniOk.png"
										/>
									</imageobject>
								</mediaobject>
							</figure>
						</para>
						<para>Cliccando sul link <emphasis>'Visualizza'</emphasis> della voce
								<emphasis>'Token Info'</emphasis> è possibile vedere tutti i claims
							presenti nel token, tra cui è possibile constatare la presenza del cliam
								<emphasis>scope</emphasis> valorizzato con quanto richiesto tramite
							l'applicazione Playground. <figure
								id="apiGateway_oauth_introspection_ok_tokeInfo">
								<title>Informazioni ottenute tramite Introspection del Token</title>
								<mediaobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/oauthConsoltazioneStoricoTransazioniOkTokenInfo.pdf"
										/>
									</imageobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/oauthConsoltazioneStoricoTransazioniOkTokenInfo.png"
										/>
									</imageobject>
								</mediaobject>
							</figure>
						</para>
					</listitem>
					<listitem>
						<para>
							<emphasis role="strong">Invocazione API con un access token non
								valido</emphasis>
						</para>
						<para>GovWay utilizza il servizio Introspection di Google per validatore
								l'<emphasis>access token</emphasis> ricevuto. E' possibile ottenere
							un errore di validazione attendendo che l'access token scada o
							falsificandolo modificando ad esempio i primi caratteri.
							<screen>curl -v -X PUT "http://127.0.0.1:8080/govway/Ente/PetStore/v2/pet?access_token=ERR_ACCESS_TOKEN" \
-H "accept: application/json" \
-H "Content-Type: application/json" \
-d '{
        "id": 3,
        "category": { "id": 22, "name": "dog" },
        "name": "doggie",
        "photoUrls": [ "http://image/dog.jpg" ],
        "tags": [ { "id": 23, "name": "white" } ],
        "status": "available"
}'</screen>
						</para>
						<para> L'esito dell'aggiornamento termina con un codice di errore http 401 e
							una risposta problem+json che riporta la motivazione:
							<screen>HTTP/1.1 401 Unauthorized
WWW-Authenticate: Bearer realm="Google", error="invalid_token", error_description="Token invalid"
Content-Type: application/problem+json
Transfer-Encoding: chunked
Server: GovWay
GovWay-Transaction-ID: 6c13b9ac-3d60-45a6-9130-297a4d832824

{
	"type":"https://httpstatuses.com/401",
	"title":"Unauthorized",
	"status":401,
	"detail":"Token non valido",
	"govway_status":"protocol:GOVWAY-1367"
}</screen>
						</para>
					</listitem>
					<listitem>
						<para>
							<emphasis role="strong">Forward Token Info all'Applicativo</emphasis>
						</para>
						<para>La configurazione descritta precedentemente indicava di abilitare la
							funzionalità <emphasis>'Token Forward'</emphasis> all'interno della
							sezione <emphasis>'Gestione Token'</emphasis> (vedi <xref
								linkend="apiGateway_oauth_introspection_config"/>). Tale
							configurazione fa sì che GovWay inoltri all'applicativo interno al
							dominio (nel nostro esempio il servizio <emphasis>PetStore</emphasis>)
							le informazioni inerenti il token ricevuto sotto forma di header http.
							Differenti modalità di consegna di tali informazioni vengono descritte
							nella sezione <xref linkend="controlloAccesso_token_forward"/>. </para>
						<para> Per vedere quali header vengono effettivamente prodotti possiamo
							utilizzare la funzionalità <emphasis>'Registrazione Messaggi'</emphasis>
							descritta nel dettaglio nella sezione <xref linkend="dump"/>. Accedere
							alla sezione <emphasis>'Erogazioni'</emphasis> e selezionare l'API
							precedentemente registrata <emphasis>'PetStore v2'</emphasis>. Dopodichè
							accedere, dal dettaglio dell'erogazione, alla sezione
								<emphasis>'Configurazione'</emphasis> dove vengono visualizzate le
							funzionalità attive. Per abilitare la registrazione degli header
							cliccare sulla voce presente nella colonna '<emphasis>Registrazione
								Messaggi</emphasis>' e procedere con la seguente configurazione. <itemizedlist>
								<listitem>
									<para><emphasis>'Generale - Stato'</emphasis>: ridefinito</para>
								</listitem>
								<listitem>
									<para><emphasis>'Richiesta - Stato'</emphasis>: abilitato</para>
								</listitem>
								<listitem>
									<para><emphasis>'Richiesta - Ingresso'</emphasis>: disabilitare
										tutte le voci</para>
								</listitem>
								<listitem>
									<para><emphasis>'Richiesta - Uscita'</emphasis>: abilitare solo
										la voce relativa agli header</para>
								</listitem>
								<listitem>
									<para><emphasis>'Risposta - Stato'</emphasis>:
										disabilitato</para>
								</listitem>
							</itemizedlist> Effettuata la configurazione salvarla cliccando sul
							pulsante 'Salva'. <figure
								id="apiGateway_oauth_introspection_dump_config">
								<title>Configurazione Registrazione Messaggi per visualizzare Header
									HTTP</title>
								<mediaobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/oauthConfigurazioneDump.pdf"/>
									</imageobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/oauthConfigurazioneDump.png"/>
									</imageobject>
								</mediaobject>
							</figure>
						</para>
						<para> Prima di procedere con una nuova richiesta effettuare il reset della
							cache delle configurazioni accedendo alla sezione <emphasis>'Strumenti'
								- 'Runtime'</emphasis> e selezionare la voce
								<emphasis>'ResetAllCaches'</emphasis>. </para>
						<para> Effettuare quindi una nuova invocazione contenente un
								<emphasis>access token</emphasis> valido e successivamente
							consultare il dettaglio della transazione tramite la
								<emphasis>govWayMonitor</emphasis>. Nel dettaglio sarà adesso
							disponibile la voce <emphasis>'Contenuti Uscita'</emphasis> (<xref
								linkend="apiGateway_oauth_introspection_dump_visualizza_header"/>)
							che permette di vedere gli header http prodotti da GovWay (<xref
								linkend="apiGateway_oauth_introspection_dump_headers"/>). <figure
								id="apiGateway_oauth_introspection_dump_visualizza_header">
								<title>Dettaglio della transazione con contenuti</title>
								<mediaobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/oauthConfigurazioneDumpVisualizzaHeader.pdf"
										/>
									</imageobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/oauthConfigurazioneDumpVisualizzaHeader.png"
										/>
									</imageobject>
								</mediaobject>
							</figure>
							<figure id="apiGateway_oauth_introspection_dump_headers">
								<title>Header HTTP prodotti da GovWay contenenti le informazioni sul
									Token</title>
								<mediaobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/oauthConfigurazioneDumpHeaders.pdf"
										/>
									</imageobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/oauthConfigurazioneDumpHeaders.png"
										/>
									</imageobject>
								</mediaobject>
							</figure>
						</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3 id="controlloAccesso_token_jwt">
				<title>Validazione JWT</title>
				<para>In questa sezione viene descritto uno scenario in cui GovWay non interagisce
					con un servizio di Introspection per validare l'<emphasis>access
						token</emphasis> ricevuto ma lo valida direttamente secondo la specifica JWS
						(<ulink url="https://tools.ietf.org/html/rfc7515"> RFC 7515</ulink>). </para>
				<figure id="oauth_scenarioJWT">
					<title>Scenario OAuth con validazione JWT</title>
					<mediaobject>
						<imageobject>
							<imagedata width="90%" fileref="FIGURE_OUT/oauth_scenario_jwt.pdf"/>
						</imageobject>
						<imageobject>
							<imagedata width="90%" fileref="FIGURE_OUT/oauth_scenario_jwt.png"/>
						</imageobject>
					</mediaobject>
				</figure>
				<para> Per simulare lo scenario utilizzeremo sempre il servizio
						<emphasis>Playground</emphasis> e l'<emphasis>Authorization Server di
						Google</emphasis> descritto nella precedente sezione <xref
						linkend="controlloAccesso_token_introspection"/> utilizzando però
					impropriamente come <emphasis>access token</emphasis> l'<emphasis>'id
						token'</emphasis> ottenuto insieme all'access token. L'id token contiene le
					informazioni sull'utente strutturate all'interno di un <emphasis>JWT</emphasis>
					(per ulteriori dettagli si rimanda <ulink
						url="https://openid.net/specs/openid-connect-core-1_0.html#IDToken">OIDC
						Connect - IDToken</ulink>). </para>
				<note>
					<title>Utilizzo improprio dell'id token</title>
					<para>L'utilizzo dell'<emphasis>'id token'</emphasis> come <emphasis>access
							token</emphasis> è da considerarsi solo a titolo di esempio per mostrare
						la funzionalità di validazione di un token JWT disponibile su GovWay che
						potrebbe essere utilizzata negli scenari reali quando effettivamente
							l'<emphasis>access token</emphasis> non è opaco ma possieda una
						struttura JWT. </para>
				</note>
				<itemizedlist>
					<listitem>
						<para><emphasis role="strong">Configurazione Controllo degli
								Accessi</emphasis></para>
						<para> Accedere alla sezione <emphasis>'Erogazioni'</emphasis> e selezionare
							l'API precedentemente registrata <emphasis>'PetStore v2'</emphasis>.
							Dopodichè accedere, dal dettaglio dell'erogazione, alla sezione
								<emphasis>'Configurazione'</emphasis> dove vengono visualizzate le
							funzionalità attive. Cliccare sulla voce presente nella colonna
								'<emphasis>Controllo Accessi</emphasis>' e procedere con la seguente
							configurazione all'interno della sezione <emphasis>'Gestione
								Token'</emphasis>: <itemizedlist>
								<listitem>
									<para><emphasis>Stato</emphasis>: abilitato</para>
								</listitem>
								<listitem>
									<para><emphasis>Policy</emphasis>: Google</para>
								</listitem>
								<listitem>
									<para><emphasis>Validazione JWT</emphasis>: abilitato</para>
								</listitem>
								<listitem>
									<para><emphasis>Introspection</emphasis>: disabilitato</para>
								</listitem>
								<listitem>
									<para><emphasis>User Info</emphasis>: disabilitato</para>
								</listitem>
								<listitem>
									<para><emphasis>Token Forward</emphasis>: abilitato</para>
								</listitem>
							</itemizedlist> Effettuata la configurazione salvarla cliccando sul
							pulsante 'Salva'. <figure id="apiGateway_oauth_validazioneJWT_config">
								<title>Configurazione OAuth2 - Validazione JWT</title>
								<mediaobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/oauthValidazioneJWTConfig.pdf"/>
									</imageobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/oauthValidazioneJWTConfig.png"/>
									</imageobject>
								</mediaobject>
							</figure>
						</para>
					</listitem>
					<listitem>
						<para><emphasis role="strong">Acquisizione Access Token</emphasis></para>
						<para> Per simulare l'acquisizione di un token in formato JWT utilizzare
							l'applicazione <emphasis>Playground</emphasis> come descritto nella
							precedente sezione <xref linkend="controlloAccesso_token_introspection"
							/>. In fondo alla procedura, dopo aver cliccato sul pulsante
								<emphasis>'Exchange authorization code for tokens'</emphasis>,
							estrarre dalla risposta http visualizzata sulla destra dell'applicazione
								l'<emphasis>id token</emphasis>. </para>
						<figure id="apiGateway_oauth_validazioneJWT_playground_step3">
							<title>Ottenimento Token: Playground Google, Step 3</title>
							<mediaobject>
								<imageobject>
									<imagedata width="50%"
										fileref="FIGURE_OUT/oauthValidazioneJWTPlaygroundStep3red.pdf"
									/>
								</imageobject>
								<imageobject>
									<imagedata width="50%"
										fileref="FIGURE_OUT/oauthValidazioneJWTPlaygroundStep3red.png"
									/>
								</imageobject>
							</mediaobject>
						</figure>
					</listitem>
					<listitem>
						<para>
							<emphasis role="strong">Invocazione API con un access token</emphasis>
						</para>
						<para>Con il seguente comando è possibile effettuare una richiesta che
							possiede l'<emphasis>id token</emphasis> ottenuto nella precedente fase. <note>
								<title>Bearer Token Usage</title>
								<para> Un <emphasis>access token</emphasis> può essere incluso nella
									richiesta tramite una delle modalità definite dalla specifica
										<ulink url="https://tools.ietf.org/html/rfc6750">RFC
										6750</ulink>. </para>
							</note>
							<screen>curl -v -X PUT "http://127.0.0.1:8080/govway/Ente/PetStore/v2/pet?access_token=ID_TOKEN" \
-H "accept: application/json" \
-H "Content-Type: application/json" \
-d '{
        "id": 3,
        "category": { "id": 22, "name": "dog" },
        "name": "doggie",
        "photoUrls": [ "http://image/dog.jpg" ],
        "tags": [ { "id": 23, "name": "white" } ],
        "status": "available"
}'</screen>
						</para>
						<para> L'esito dell'aggiornamento viene confermato con un codice http 200 e
							una risposta json equivalente alla richiesta:
							<screen>HTTP/1.1 200 OK
Access-Control-Allow-Origin: *
Access-Control-Allow-Methods: GET, POST, DELETE, PUT
Access-Control-Allow-Headers: Content-Type, api_key, Authorization
Content-Type: application/json
Transfer-Encoding: chunked
Server: GovWay
GovWay-Message-ID: 84e1d9a4-c181-436f-b7f0-4cabf55c370d
GovWay-Transaction-ID: 6c13b9ac-3d60-45a6-9130-297a4d832824

{
	"id":3,
	"category":{"id":22,"name":"dog"},
	"name":"doggie",
	"photoUrls":["http://image/dog.jpg"],
	"tags":[{"id":23,"name":"white"}],
	"status":"available"
}</screen>
						</para>
					</listitem>
					<listitem>
						<para>
							<emphasis role="strong">Consultazione Tracce</emphasis>
						</para>
						<para>Attraverso la console <emphasis>govwayMonitor</emphasis> è possibile
							adesso vedere che le richieste transitano con successo sul gateway.
							Accedendo al dettaglio di una transazione, tra le varie informazioni
							presenti nella sezione <emphasis>'Informazioni Mittente'</emphasis>,
							sono presenti le informazioni principali estratte dal token (es. Subject
							presente nel claim 'sub'). <figure
								id="apiGateway_oauth_validazioneJWT_ok_info">
								<title>Traccia di una invocazione terminata con successo</title>
								<mediaobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/oauthConsoltazioneStoricoTransazioniOk_validazioneJWT.pdf"
										/>
									</imageobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/oauthConsoltazioneStoricoTransazioniOk_validazioneJWT.png"
										/>
									</imageobject>
								</mediaobject>
							</figure>
						</para>
						<para>Cliccando sul link <emphasis>'Visualizza'</emphasis> della voce
								<emphasis>'Token Info'</emphasis> è possibile vedere tutti i claims
							presenti nel token, tra cui è possibile constatare la presenza del cliam
								<emphasis>scope</emphasis> valorizzato con quanto richiesto tramite
							l'applicazione Playground. <figure
								id="apiGateway_oauth_validazioneJWT_ok_tokeInfo">
								<title>Informazioni presenti in un Token JWT</title>
								<mediaobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/oauthConsoltazioneStoricoTransazioniOkTokenInfo_validazioneJWT.pdf"
										/>
									</imageobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/oauthConsoltazioneStoricoTransazioniOkTokenInfo_validazioneJWT.png"
										/>
									</imageobject>
								</mediaobject>
							</figure>
						</para>
					</listitem>
				</itemizedlist>
			</sect3>

			<sect3 id="controlloAccesso_token_userInfo">
				<title>Autenticazione e OIDC UserInfo</title>
				<para> Nelle precedenti sezioni è stato mostrato come proteggere un'api in modo che
					ogni richiesta debba possedere un <emphasis>access token</emphasis> valido
					rilasciato da un <emphasis>Authorization Server</emphasis> censito su GovWay,
					nell'esempio Google. La verifica di un <emphasis>access token</emphasis>, se
					opaco tramite il servizio di Introspection (descritto nella sezione <xref
						linkend="controlloAccesso_token_introspection"/>), altrimenti tramite la
					validazione JWT (sezione <xref linkend="controlloAccesso_token_jwt"/>) permette
					a GovWay di conoscere i claims associati al token come ad esempio il subject
					('sub'), l'issuer ('iss') etc e salvarli nella traccia come è stato mostrato
					nelle figura <xref linkend="apiGateway_oauth_introspection_ok_tokeInfo"/> e
						<xref linkend="apiGateway_oauth_validazioneJWT_ok_tokeInfo"/>. </para>
				<para> GovWay può essere configurato per verificare che un <emphasis>access
						token</emphasis> presenti al suo interno alcuni claims che identificano i
					seguenti attori principali nello scenario OAuth: <itemizedlist>
						<listitem>
							<para><emphasis>Issuer</emphasis> (claim 'iss'): identifica
								l'Authorization Server che ha generato il token (es.
								https://accounts.google.com).</para>
						</listitem>
						<listitem>
							<para><emphasis>ClientId</emphasis> (claim 'client_id' o 'azp'):
								rappresenta l'applicazione, censita sull'Authorization Server, a cui
								è stato rilasciato il token (es. client Playground).</para>
						</listitem>
						<listitem>
							<para><emphasis>Subject</emphasis> (claim 'sub'): identifica l'utente,
								censito sull'Authorization Server (o IDP associato), che ha
								confermato le informazioni richiesti dall'applicazione e presenti
								nel token. Il Subject è presente se il rilascio di un token viene
								effettuato tramite dei flussi che prevedono l'interazione con
								l'utente il quale dovrà autenticarsi ed eventualmente autorizzare
								gli scope richiesti dall'applicazione. Il Subject è una informazione
								codificata (stringa o URI) che identifica univocamente l'utente nel
								dominio dell'Authorization Server (Issuer). </para>
						</listitem>
						<listitem>
							<para><emphasis>Username</emphasis> (claim 'username',
								'preferred_username' o 'name'): fornisce una rappresentazione
								'human-readable' dell'utente.</para>
						</listitem>
						<listitem>
							<para><emphasis>eMail</emphasis> (claim 'email'): identifica l'indirizzo
								e-mail dell'utente.</para>
						</listitem>
					</itemizedlist> Se viene abilitato un controllo e GovWay non rileva il claim
					dopo la verifica dell'access token, la transazione termina con errore. </para>
				<para> Le informazioni riguardanti l'<emphasis>Username</emphasis> e
						l'<emphasis>eMail</emphasis> potrebbero non essere disponibili dopo la
					semplice validazione dell'access token (sia introspection che jwt), e per
					ottenerle potrebbe essere necessario richiedere maggiori informazioni
					sull'utente tramite il servizio <emphasis>OIDC UserInfo</emphasis>
						dell'<emphasis>Authorization Server</emphasis>. Per maggiori informazioni a
					riguardo si rimanda alla specifica <ulink
						url="https://openid.net/specs/openid-connect-core-1_0.html#UserInfo">OIDC
						Connect - UserInfo</ulink>. </para>
				<figure id="oauth_scenarioUserInfo">
					<title>Scenario OAuth con accesso servizio UserInfo</title>
					<mediaobject>
						<imageobject>
							<imagedata width="90%" fileref="FIGURE_OUT/oauth_scenario_userInfo.pdf"
							/>
						</imageobject>
						<imageobject>
							<imagedata width="90%" fileref="FIGURE_OUT/oauth_scenario_userInfo.png"
							/>
						</imageobject>
					</mediaobject>
				</figure>
				<para> Per simulare lo scenario utilizzeremo sempre il servizio
						<emphasis>Playground</emphasis> e l'<emphasis>Authorization Server di
						Google</emphasis> descritto nella precedente sezione <xref
						linkend="controlloAccesso_token_introspection"/>. Faremo un primo test in
					cui il Gateway non accede al servizio <emphasis>User Info</emphasis> e vedremo
					come non è disponibile l'informazione sull'utente sotto forma 'human-readable'
					che invece verrà recuperata abilitando l'interazione con tale servizio. </para>
				<itemizedlist>
					<listitem>
						<para><emphasis role="strong">Configurazione Controllo degli
								Accessi</emphasis></para>
						<para> Accedere alla sezione <emphasis>'Erogazioni'</emphasis> e selezionare
							l'API precedentemente registrata <emphasis>'PetStore v2'</emphasis>.
							Dopodichè accedere, dal dettaglio dell'erogazione, alla sezione
								<emphasis>'Configurazione'</emphasis> dove vengono visualizzate le
							funzionalità attive. Cliccare sulla voce presente nella colonna
								'<emphasis>Controllo Accessi</emphasis>' e procedere con la seguente
							configurazione all'interno della sezione <emphasis>'Gestione
								Token'</emphasis>: <itemizedlist>
								<listitem>
									<para><emphasis>Stato</emphasis>: abilitato</para>
								</listitem>
								<listitem>
									<para><emphasis>Policy</emphasis>: Google</para>
								</listitem>
								<listitem>
									<para><emphasis>Validazione JWT</emphasis>: disabilitato</para>
								</listitem>
								<listitem>
									<para><emphasis>Introspection</emphasis>: abilitato</para>
								</listitem>
								<listitem>
									<para><emphasis>User Info</emphasis>: disabilitato</para>
								</listitem>
								<listitem>
									<para><emphasis>Token Forward</emphasis>: abilitato</para>
								</listitem>
							</itemizedlist> Procedere inoltre con la seguente configurazione
							all'interno della sezione <emphasis>'Autenticazione'</emphasis>: <itemizedlist>
								<listitem>
									<para><emphasis>Trasporto - Stato</emphasis>:
										disabilitato</para>
								</listitem>
								<listitem>
									<para><emphasis>Token - Issuer</emphasis>: disabilitato</para>
								</listitem>
								<listitem>
									<para><emphasis>Token - ClientId</emphasis>: abilitato</para>
								</listitem>
								<listitem>
									<para><emphasis>Token - Subject</emphasis>: abilitato</para>
								</listitem>
								<listitem>
									<para><emphasis>Token - Username</emphasis>: abilitato</para>
								</listitem>
								<listitem>
									<para><emphasis>Token - eMail</emphasis>: disabilitato</para>
								</listitem>
							</itemizedlist> Effettuata la configurazione salvarla cliccando sul
							pulsante 'Salva'. <figure id="apiGateway_oauth_userInfo_config">
								<title>Configurazione OAuth2 - Autenticazione</title>
								<mediaobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/oauthAutenticazioneConfig.pdf"/>
									</imageobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/oauthAutenticazioneConfig.png"/>
									</imageobject>
								</mediaobject>
							</figure>
						</para>
					</listitem>

					<listitem>
						<para>
							<emphasis role="strong">Invocazione API</emphasis>
						</para>
						<note>
							<title>Reset Cache delle Configurazioni prima di un nuovo test</title>
							<para> Le configurazioni accedute da GovWay vengono mantenute in una
								cache dopo il primo accesso per 2 ore, è quindi necessario forzare
								un reset della cache. Per farlo accedere alla sezione
									<emphasis>'Strumenti' - 'Runtime'</emphasis> e selezionare la
								voce <emphasis>'ResetAllCaches'</emphasis>. </para>
						</note>
						<para> Per effettuare il test acquisire un token utilizzando l'applicazione
								<emphasis>Playground</emphasis> come descritto nella precedente
							sezione <xref linkend="controlloAccesso_token_introspection"/> e
							procedere con il seguente comando.
							<screen>curl -v -X PUT "http://127.0.0.1:8080/govway/Ente/PetStore/v2/pet?access_token=ACCESS_TOKEN" \
-H "accept: application/json" \
-H "Content-Type: application/json" \
-d '{
        "id": 3,
        "category": { "id": 22, "name": "dog" },
        "name": "doggie",
        "photoUrls": [ "http://image/dog.jpg" ],
        "tags": [ { "id": 23, "name": "white" } ],
        "status": "available"
}'</screen>
						</para>
						<para> L'esito dell'aggiornamento termina con un codice di errore http 401 e
							una risposta problem+json che riporta la motivazione:
							<screen>HTTP/1.1 401 Unauthorized
WWW-Authenticate: Bearer realm="Google", error="insufficient_scope", error_description="The request requires higher privileges than provided by the access token"
Content-Type: application/problem+json
Transfer-Encoding: chunked
Server: GovWay
GovWay-Transaction-ID: 6c13b9ac-3d60-45a6-9130-297a4d832824

{
	"type":"https://httpstatuses.com/401",
	"title":"Unauthorized",
	"status":401,
	"detail":"La richiesta presenta un token non sufficente per fruire del servizio richiesto",
	"govway_status":"protocol:GOVWAY-1368"
}</screen>
						</para>
					</listitem>
					<listitem>
						<para>
							<emphasis role="strong">Consultazione Tracce in errore</emphasis>
						</para>
						<para>Attraverso la console <emphasis>govwayMonitor</emphasis> è possibile
							consultare lo storico delle transazioni che sono transitate nel gateway.
							Dalla figura <xref linkend="apiGateway_oauth_userInfo_error"/> si può
							vedere come le transazioni generate dopo la configurazione sopra
							indicata sono terminate con errore con esito <emphasis>Autenticazione
								Fallita</emphasis>. <figure id="apiGateway_oauth_userInfo_error">
								<title>Tracce delle invocazioni terminate con errore 'Autenticazione
									Fallita'</title>
								<mediaobject>
									<imageobject>
										<imagedata width="70%"
											fileref="FIGURE_OUT/oauthConsoltazioneStoricoTransazioniErroreUserInfo.pdf"
										/>
									</imageobject>
									<imageobject>
										<imagedata width="70%"
											fileref="FIGURE_OUT/oauthConsoltazioneStoricoTransazioniErroreUserInfo.png"
										/>
									</imageobject>
								</mediaobject>
							</figure>
						</para>
						<para>Accedendo al dettaglio di una transazione terminata in errore, e
							visualizzandone i diagnostici è possibile comprendere l'errore che come
							atteso risulta essere la mancanza dell'informazione
								<emphasis>Username</emphasis> richiesta obbligatoriamente tramite la
							sezione <emphasis>'Autenticazione'</emphasis> precedentemente
							configurata</para>
						<figure id="apiGateway_oauth_userInfo_diagnostici_ko">
							<title>Diagnostici di una invocazione terminata con errore</title>
							<mediaobject>
								<imageobject>
									<imagedata width="60%"
										fileref="FIGURE_OUT/oauthConsoltazioneStoricoTransazioniErroreUserInfo_diagnostici.pdf"
									/>
								</imageobject>
								<imageobject>
									<imagedata width="60%"
										fileref="FIGURE_OUT/oauthConsoltazioneStoricoTransazioniErroreUserInfo_diagnostici.png"
									/>
								</imageobject>
							</mediaobject>
						</figure>
						<para>Cliccando sul link <emphasis>'Visualizza'</emphasis> della voce
								<emphasis>'Token Info'</emphasis> è possibile comunque vedere tutti
							i claims presenti nel token, dove si denota come non sia presente uno
							dei claim che rappresenta l'informazione 'Username'. <figure
								id="apiGateway_oauth_userInfo_ko_tokeInfo">
								<title>Informazioni presenti nel Token</title>
								<mediaobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/oauthConsoltazioneStoricoTransazioniErroreUserInfoKoInfo.pdf"
										/>
									</imageobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/oauthConsoltazioneStoricoTransazioniErroreUserInfoKoInfo.png"
										/>
									</imageobject>
								</mediaobject>
							</figure>
						</para>

					</listitem>

					<listitem>
						<para><emphasis role="strong">Abilitazione UserInfo in Configurazione
								Controllo degli Accessi</emphasis></para>
						<para> Tramite la <emphasis>govwayConsole</emphasis> accedere nuovamente
							alla maschera di configurazione '<emphasis>Controllo Accessi</emphasis>'
							dell'API <emphasis>'PetStore v2'</emphasis> ed abilitare stavolta anche
							il servizio <emphasis>'User Info'</emphasis>. <figure
								id="apiGateway_oauth_userInfo_config2">
								<title>Configurazione OAuth2 - Autenticazione</title>
								<mediaobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/oauthAutenticazioneConfig2red.pdf"/>
									</imageobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/oauthAutenticazioneConfig2red.png"/>
									</imageobject>
								</mediaobject>
							</figure>
						</para>
					</listitem>

					<listitem>
						<para>
							<emphasis role="strong">Nuova invocazione API</emphasis>
						</para>
						<note>
							<title>Reset Cache delle Configurazioni prima di un nuovo test</title>
							<para> Effettuare il reset della cache accedendo alla sezione
									<emphasis>'Strumenti' - 'Runtime'</emphasis> e selezionare la
								voce <emphasis>'ResetAllCaches'</emphasis>. </para>
						</note>
						<para> Per effettuare il test acquisire un token utilizzando l'applicazione
								<emphasis>Playground</emphasis> come descritto nella precedente
							sezione <xref linkend="controlloAccesso_token_introspection"/> e
							procedere con il seguente comando.
							<screen>curl -v -X PUT "http://127.0.0.1:8080/govway/Ente/PetStore/v2/pet?access_token=ACCESS_TOKEN" \
-H "accept: application/json" \
-H "Content-Type: application/json" \
-d '{
        "id": 3,
        "category": { "id": 22, "name": "dog" },
        "name": "doggie",
        "photoUrls": [ "http://image/dog.jpg" ],
        "tags": [ { "id": 23, "name": "white" } ],
        "status": "available"
}'</screen>
						</para>
						<para> L'esito dell'aggiornamento termina stavolta con successo con un
							codice http 200 e una risposta json equivalente alla richiesta. </para>
					</listitem>

					<listitem>
						<para>
							<emphasis role="strong">Consultazione Tracce</emphasis>
						</para>
						<para>Attraverso la console <emphasis>govwayMonitor</emphasis> è possibile
							adesso vedere che le richieste transitano con successo sul gateway.
							Accedendo al dettaglio di una transazione, tra le varie informazioni
							presenti nella sezione <emphasis>'Informazioni Mittente'</emphasis>,
							sono presenti tutte e tre le informazioni principali attese: ClientId,
							Subject e Username. <figure id="apiGateway_oauth_userInfo_ok_info">
								<title>Traccia di una invocazione terminata con successo</title>
								<mediaobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/oauthConsoltazioneStoricoTransazioniUserInfoOkInfo.pdf"
										/>
									</imageobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/oauthConsoltazioneStoricoTransazioniUserInfoOkInfo.png"
										/>
									</imageobject>
								</mediaobject>
							</figure>
						</para>
						<para>Cliccando sul link <emphasis>'Visualizza'</emphasis> della voce
								<emphasis>'Token Info'</emphasis> è possibile vedere tutti i claims
							presenti nel token, tra cui è possibile constatare la presenza dei
							claims estratti grazie all'invocazione del servizio <emphasis>'User
								Info'</emphasis>. <figure id="apiGateway_oauth_userInfo_ok_tokeInfo">
								<title>Informazioni presenti in un Token JWT</title>
								<mediaobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/oauthConsoltazioneStoricoTransazioniUserInfoOkInfoDettaglio.pdf"
										/>
									</imageobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/oauthConsoltazioneStoricoTransazioniUserInfoOkInfoDettaglio.png"
										/>
									</imageobject>
								</mediaobject>
							</figure>
						</para>
					</listitem>

				</itemizedlist>
			</sect3>

			<sect3 id="controlloAccesso_token_autorizzazione_scope">
				<title>Autorizzazione per Scope</title>
				<para> La verifica di un <emphasis>access token</emphasis>, se opaco tramite il
					servizio di Introspection (descritto nella sezione <xref
						linkend="controlloAccesso_token_introspection"/>), altrimenti tramite la
					validazione JWT (sezione <xref linkend="controlloAccesso_token_jwt"/>), permette
					a GovWay di conoscere i claims associati al token ed in particolare quali sono
					gli scope autorizzati dall'utente. </para>
				<para> Gli scope permettono di definire delle "funzioni applicative" il cui utilizzo
					da parte di un'applicazione deve essere autorizzato da un utente. </para>
				<para> Per simulare lo scenario utilizzeremo sempre il servizio
						<emphasis>Playground</emphasis> e l'<emphasis>Authorization Server di
						Google</emphasis> descritto nella precedente sezione <xref
						linkend="controlloAccesso_token_introspection"/> dove però verranno
					richiesti altri scope rispetto a quello utilizzato nel precedente scenario.
					Simuleremo di aver bisogno di accedere alle API Calendar di Google e quindi
					dovremo richiedere tali scope che devono essere autorizzati una volta che ci
					siamo autenticati su Google. </para>
				<para> Su GovWay è possibile registrare gli scope disponibili su di un
						<emphasis>Authorization Server</emphasis> ed utilizzarli per definire
					politiche di autorizzazione rispetto agli scope presenti nell'access token. Lo
					scenario descritto in questa sezione mostra un esempio di registrazione degli
					scope <emphasis>'API Calendar'</emphasis> di Google dove si configura a titolo
					esemplificativo che tali scope sono necessari per poter invocare il servizio
						<emphasis>PetStore</emphasis>. </para>
				<figure id="oauth_scenarioScope">
					<title>Scenario OAuth con autorizzazione per Scope</title>
					<mediaobject>
						<imageobject>
							<imagedata width="90%" fileref="FIGURE_OUT/oauth_scenario_scope.pdf"/>
						</imageobject>
						<imageobject>
							<imagedata width="90%" fileref="FIGURE_OUT/oauth_scenario_scope.png"/>
						</imageobject>
					</mediaobject>
				</figure>

				<itemizedlist>

					<listitem>
						<para><emphasis role="strong">Acquisizione Access Token con scope API
								Calendar</emphasis></para>
						<para> Per simulare l'acquisizione di un token è possibile utilizzare
							l'applicazione <emphasis>Playground</emphasis>, disponibile
							all'indirizzo <ulink
								url="https://developers.google.com/oauthplayground/"/>, che consente
							di richiedere un <emphasis>access token</emphasis>
								all'<emphasis>Authorization Server di Google</emphasis>. </para>
						<para> L'applicazione <emphasis>Playground</emphasis> consente agevolmente
							di ottenere l'<emphasis>access token</emphasis> con gli scope richiesti
							dall'esempio: <orderedlist>
								<listitem>
									<para><emphasis>Selezione scope</emphasis></para>
									<para>Devono essere selezionati gli <emphasis>scope</emphasis>: <itemizedlist>
											<listitem>
												<para>https://www.googleapis.com/auth/calendar.events.readonly</para>
											</listitem>
											<listitem>
												<para>https://www.googleapis.com/auth/calendar.readonly</para>
											</listitem>
											<listitem>
												<para>https://www.googleapis.com/auth/calendar.settings.readonly</para>
											</listitem>
										</itemizedlist> Cliccando infine sul pulsante
											<emphasis>'Authorize APIs'</emphasis> si verrà rediretti
										alla pagina di autenticazione in google dove si dovrà
										procedere ad autenticarsi. </para>
									<figure id="apiGateway_oauth_scope_playground_step1">
										<title>Ottenimento Token: Playground Google, scelta scope
											API Calendar</title>
										<mediaobject>
											<imageobject>
												<imagedata width="50%"
												fileref="FIGURE_OUT/oauthScopePlaygroundStep1.pdf"
												/>
											</imageobject>
											<imageobject>
												<imagedata width="50%"
												fileref="FIGURE_OUT/oauthScopePlaygroundStep1.png"
												/>
											</imageobject>
										</mediaobject>
									</figure>
								</listitem>
								<listitem>
									<para><emphasis>Autorizzazione scope API
										Calendar</emphasis></para>
									<para>Effettuata l'autenticazione in Google si viene rediretti
										ad una pagina dove è richiesto all'utente di autorizzare
										l'applicazione Playground all'utilizzo degli scope API
										Calendar. </para>
									<figure id="apiGateway_oauth_scope_playground_step2">
										<title>Ottenimento Token: Playground Google, autorizzazione
											scope API Calendar</title>
										<mediaobject>
											<imageobject>
												<imagedata width="30%"
												fileref="FIGURE_OUT/oauthScopePlaygroundStep2.pdf"
												/>
											</imageobject>
											<imageobject>
												<imagedata width="30%"
												fileref="FIGURE_OUT/oauthScopePlaygroundStep2.png"
												/>
											</imageobject>
										</mediaobject>
									</figure>
								</listitem>
								<listitem>
									<para><emphasis>Access Token</emphasis></para>
									<para>Autorizzati gli scope si viene rediretti alla seconda fase
										prevista dall'applicazione <emphasis>Playground</emphasis>
										denominata <emphasis>'Exchange authorization code for
											tokens'</emphasis>. Cliccando sul pulsante
											<emphasis>'Exchange authorization code for
											tokens'</emphasis> si ottiene infine un <emphasis>access
											token</emphasis> da estrarre nella risposta http
										visualizzata sulla destra dell'applicazione. </para>
									<figure id="apiGateway_oauth_scope_playground_step3">
										<title>Ottenimento Token: Playground Google, Step 3</title>
										<mediaobject>
											<imageobject>
												<imagedata width="50%"
												fileref="FIGURE_OUT/oauthScopePlaygroundStep3red.pdf"
												/>
											</imageobject>
											<imageobject>
												<imagedata width="50%"
												fileref="FIGURE_OUT/oauthScopePlaygroundStep3red.png"
												/>
											</imageobject>
										</mediaobject>
									</figure>
								</listitem>
							</orderedlist>
						</para>
					</listitem>

					<listitem>
						<para><emphasis role="strong">Registrazione degli scope su
							GovWay</emphasis></para>
						<para> Accedere alla sezione <emphasis>'Scope'</emphasis> della
								<emphasis>govwayConsole</emphasis> per registrare gli scope relativi
							ad <emphasis>API Calendar</emphasis>. Per registrare un nuovo scope
							cliccare sul pulsante '<emphasis>Aggiungi</emphasis>'. Effettuare la
							registrazione degli scopes richiesti precedentemente tramite Playground
							ed anche un ulteriore scope (API Google Driver), non richiesto durante
							l'acquisizione del token, che verrà utilizzato nei test descritti in
							questa sezione. <table>
								<title>Registrazione scope</title>
								<tgroup align="left" cols="3" colsep="1" rowsep="1">
									<colspec colname="c1"/>
									<colspec colname="c2"/>
									<colspec colname="c3"/>
									<thead>
										<row>
											<entry>Nome</entry>
											<entry>Identificativo Esterno</entry>
											<entry>Contesto</entry>
										</row>
									</thead>
									<tbody>
										<row>
											<entry>google.calendar.events.readonly</entry>
											<entry>https://www.googleapis.com/auth/calendar.events.readonly</entry>
											<entry>Qualsiasi</entry>
										</row>
										<row>
											<entry>google.calendar.readonly</entry>
											<entry>https://www.googleapis.com/auth/calendar.readonly</entry>
											<entry>Qualsiasi</entry>
										</row>
										<row>
											<entry>google.calendar.settings.readonly</entry>
											<entry>https://www.googleapis.com/auth/calendar.settings.readonly</entry>
											<entry>Qualsiasi</entry>
										</row>
										<row>
											<entry>google.drive</entry>
											<entry>https://www.googleapis.com/auth/drive</entry>
											<entry>Qualsiasi</entry>
										</row>
									</tbody>
								</tgroup>
							</table>
							<figure id="apiGateway_oauth_scope_config">
								<title>Configurazione OAuth2 - Registrazione Scope</title>
								<mediaobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/oauthScopeRegistrazioneConfig.pdf"/>
									</imageobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/oauthScopeRegistrazioneConfig.png"/>
									</imageobject>
								</mediaobject>
							</figure>
						</para>
						<para> Terminata la registrazione gli scope è possibile specificarli
							all'interno del Controllo degli Accessi di una API. <figure
								id="apiGateway_oauth_scope_config_list">
								<title>Configurazione OAuth2 - Lista degli Scope registrati</title>
								<mediaobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/oauthScopeRegistrazioneConfigList.pdf"
										/>
									</imageobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/oauthScopeRegistrazioneConfigList.png"
										/>
									</imageobject>
								</mediaobject>
							</figure>
						</para>
					</listitem>

					<listitem>
						<para><emphasis role="strong">Configurazione Controllo degli
								Accessi</emphasis></para>
						<para> Accedere alla sezione <emphasis>'Erogazioni'</emphasis> e selezionare
							l'API precedentemente registrata <emphasis>'PetStore v2'</emphasis>.
							Dopodichè accedere, dal dettaglio dell'erogazione, alla sezione
								<emphasis>'Configurazione'</emphasis> dove vengono visualizzate le
							funzionalità attive. Cliccare sulla voce presente nella colonna
								'<emphasis>Controllo Accessi</emphasis>' e procedere con la seguente
							configurazione all'interno della sezione <emphasis>'Gestione
								Token'</emphasis>: <itemizedlist>
								<listitem>
									<para><emphasis>Stato</emphasis>: abilitato</para>
								</listitem>
								<listitem>
									<para><emphasis>Policy</emphasis>: Google</para>
								</listitem>
								<listitem>
									<para><emphasis>Validazione JWT</emphasis>: disabilitato</para>
								</listitem>
								<listitem>
									<para><emphasis>Introspection</emphasis>: abilitato</para>
								</listitem>
								<listitem>
									<para><emphasis>User Info</emphasis>: disabilitato</para>
								</listitem>
								<listitem>
									<para><emphasis>Token Forward</emphasis>: abilitato</para>
								</listitem>
							</itemizedlist> Procedere inoltre con la seguente configurazione
							all'interno della sezione <emphasis>'Autorizzazione'</emphasis>: <itemizedlist>
								<listitem>
									<para><emphasis>Autorizzazione - Stato</emphasis>:
										abilitato</para>
								</listitem>
								<listitem>
									<para><emphasis>Autorizzazione per Scope - Stato</emphasis>:
										abilitato</para>
								</listitem>
								<listitem>
									<para><emphasis>Autorizzazione per Scope - Scope
											Richiesti</emphasis>: tutti</para>
								</listitem>
							</itemizedlist> Effettuata la configurazione salvarla cliccando sul
							pulsante 'Salva'. <figure
								id="apiGateway_oauth_scope_config_controlloAccessi">
								<title>Configurazione OAuth2 - Autorizzazione</title>
								<mediaobject>
									<imageobject>
										<imagedata width="40%"
											fileref="FIGURE_OUT/oauthAutorizzazioneScopeConfigControlloAccessi.pdf"
										/>
									</imageobject>
									<imageobject>
										<imagedata width="40%"
											fileref="FIGURE_OUT/oauthAutorizzazioneScopeConfigControlloAccessi.png"
										/>
									</imageobject>
								</mediaobject>
							</figure>
						</para>
						<para> Salvata la configurazione si deve nuovamente accedere al
								<emphasis>Controllo Accessi</emphasis> dove nella sezione
								<emphasis>'Autorizzazione'</emphasis> è adesso disponibile un link
								<emphasis>'Scope (0)'</emphasis> che permette di registrare gli
							scope che un token deve possedere quando invoca l'api PetStore. <figure
								id="apiGateway_oauth_scope_config_controlloAccessiLinkScope">
								<title>Configurazione OAuth2 - Autorizzazione - Scope</title>
								<mediaobject>
									<imageobject>
										<imagedata width="40%"
											fileref="FIGURE_OUT/oauthAutorizzazioneScopeConfigControlloAccessiLinkScope.pdf"
										/>
									</imageobject>
									<imageobject>
										<imagedata width="40%"
											fileref="FIGURE_OUT/oauthAutorizzazioneScopeConfigControlloAccessiLinkScope.png"
										/>
									</imageobject>
								</mediaobject>
							</figure>
						</para>
						<para> Tramite il pulsante <emphasis>'Aggiungi'</emphasis> aggiungere tutti
							e 4 gli scope precedentemente registrati su GovWay. <figure
								id="apiGateway_oauth_scope_config_controlloAccessiScopeRegistrati">
								<title>Configurazione OAuth2 - Autorizzazione - Elenco Scope</title>
								<mediaobject>
									<imageobject>
										<imagedata width="40%"
											fileref="FIGURE_OUT/oauthAutorizzazioneScopeConfigControlloAccessiScopeRegistrati.pdf"
										/>
									</imageobject>
									<imageobject>
										<imagedata width="40%"
											fileref="FIGURE_OUT/oauthAutorizzazioneScopeConfigControlloAccessiScopeRegistrati.png"
										/>
									</imageobject>
								</mediaobject>
							</figure>
						</para>
					</listitem>

					<listitem>
						<para>
							<emphasis role="strong">Invocazione API</emphasis>
						</para>
						<note>
							<title>Reset Cache delle Configurazioni prima di un nuovo test</title>
							<para> Le configurazioni accedute da GovWay vengono mantenute in una
								cache dopo il primo accesso per 2 ore, è quindi necessario forzare
								un reset della cache. Per farlo accedere alla sezione
									<emphasis>'Strumenti' - 'Runtime'</emphasis> e selezionare la
								voce <emphasis>'ResetAllCaches'</emphasis>. </para>
						</note>
						<para> Per effettuare il test utilizzare il token, contenente gli scope API
							Calendar, precedentemente ottenuto.
							<screen>curl -v -X PUT "http://127.0.0.1:8080/govway/Ente/PetStore/v2/pet?access_token=ACCESS_TOKEN" \
-H "accept: application/json" \
-H "Content-Type: application/json" \
-d '{
        "id": 3,
        "category": { "id": 22, "name": "dog" },
        "name": "doggie",
        "photoUrls": [ "http://image/dog.jpg" ],
        "tags": [ { "id": 23, "name": "white" } ],
        "status": "available"
}'</screen>
						</para>
						<para> L'esito dell'aggiornamento termina con un codice di errore http 403 e
							una risposta problem+json che riporta la motivazione:
							<screen>HTTP/1.1 403 Forbidden
WWW-Authenticate: Bearer realm="Google", error="insufficient_scope", error_description="The request requires higher privileges than provided by the access token", scope="https://www.googleapis.com/auth/calendar.events.readonly,https://www.googleapis.com/auth/calendar.readonly,https://www.googleapis.com/auth/calendar.settings.readonly,https://www.googleapis.com/auth/drive"
Content-Type: application/problem+json
Transfer-Encoding: chunked
Server: GovWay
GovWay-Transaction-ID: 6c13b9ac-3d60-45a6-9130-297a4d832824

{
	"type":"https://httpstatuses.com/403",
	"title":"Forbidden",
	"status":403,
	"detail":"La richiesta presenta un token non sufficente per fruire del servizio richiesto",
	"govway_status":"protocol:GOVWAY-1368"
}</screen>
						</para>
					</listitem>
					<listitem>
						<para>
							<emphasis role="strong">Consultazione Tracce in errore</emphasis>
						</para>
						<para>Attraverso la console <emphasis>govwayMonitor</emphasis> è possibile
							consultare lo storico delle transazioni che sono transitate nel gateway.
							Dalla figura <xref linkend="apiGateway_oauth_scope_error"/> si può
							vedere come le transazioni generate dopo la configurazione sopra
							indicata sono terminate con errore con esito <emphasis>Autorizzazione
								Negata</emphasis>. <figure id="apiGateway_oauth_scope_error">
								<title>Tracce delle invocazioni terminate con errore 'Autorizzazione
									Negata'</title>
								<mediaobject>
									<imageobject>
										<imagedata width="70%"
											fileref="FIGURE_OUT/oauthConsoltazioneStoricoTransazioniErroreScope.pdf"
										/>
									</imageobject>
									<imageobject>
										<imagedata width="70%"
											fileref="FIGURE_OUT/oauthConsoltazioneStoricoTransazioniErroreScope.png"
										/>
									</imageobject>
								</mediaobject>
							</figure>
						</para>
						<para>Accedendo al dettaglio di una transazione terminata in errore, e
							visualizzandone i diagnostici è possibile comprendere l'errore che come
							atteso risulta essere la mancanza dello scope
								<emphasis>https://www.googleapis.com/auth/drive</emphasis> richiesto
							poichè nella sezione <emphasis>'Autorizzazione'</emphasis> è stato
							indicato che gli scope registrati devono essere tutti presente
							nell'access token.</para>
						<figure id="apiGateway_oauth_scope_diagnostici_ko">
							<title>Diagnostici di una invocazione terminata con errore</title>
							<mediaobject>
								<imageobject>
									<imagedata width="60%"
										fileref="FIGURE_OUT/oauthConsoltazioneStoricoTransazioniErroreScope_diagnostici.pdf"
									/>
								</imageobject>
								<imageobject>
									<imagedata width="60%"
										fileref="FIGURE_OUT/oauthConsoltazioneStoricoTransazioniErroreScope_diagnostici.png"
									/>
								</imageobject>
							</mediaobject>
						</figure>
						<para>Cliccando sul link <emphasis>'Visualizza'</emphasis> della voce
								<emphasis>'Token Info'</emphasis> è possibile vedere tutti i claims
							presenti nel token, dove si possono vedere gli scope richiesti tramite
							Playground. <figure id="apiGateway_oauth_scope_ko_tokeInfo">
								<title>Scope presenti nel Token</title>
								<mediaobject>
									<imageobject>
										<imagedata width="40%"
											fileref="FIGURE_OUT/oauthConsoltazioneStoricoTransazioniErroreScopeKoInfo.pdf"
										/>
									</imageobject>
									<imageobject>
										<imagedata width="40%"
											fileref="FIGURE_OUT/oauthConsoltazioneStoricoTransazioniErroreScopeKoInfo.png"
										/>
									</imageobject>
								</mediaobject>
							</figure>
						</para>

					</listitem>

					<listitem>
						<para><emphasis role="strong">Modifica controllo degli scope (Almeno uno) in
								Configurazione Controllo degli Accessi</emphasis></para>
						<para> Tramite la <emphasis>govwayConsole</emphasis> accedere nuovamente
							alla maschera di configurazione '<emphasis>Controllo Accessi</emphasis>'
							dell'API <emphasis>'PetStore v2'</emphasis>; all'interno della sezione
								<emphasis>'Autorizzare'</emphasis> modificare il tipo di controllo
								'<emphasis>Scope Richiesti</emphasis>' dal valore
								<emphasis>'tutti'</emphasis> al valore <emphasis>'almeno
								uno'</emphasis>. <figure id="apiGateway_oauth_scope_config2">
								<title>Configurazione OAuth2 - Autorizzazione degli scope con
									opzione 'Almeno uno'</title>
								<mediaobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/oauthAutorizzazioneConfig2red.pdf"/>
									</imageobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/oauthAutorizzazioneConfig2red.png"/>
									</imageobject>
								</mediaobject>
							</figure>
						</para>
					</listitem>

					<listitem>
						<para>
							<emphasis role="strong">Nuova invocazione API</emphasis>
						</para>
						<note>
							<title>Reset Cache delle Configurazioni prima di un nuovo test</title>
							<para> Effettuare il reset della cache accedendo alla sezione
									<emphasis>'Strumenti' - 'Runtime'</emphasis> e selezionare la
								voce <emphasis>'ResetAllCaches'</emphasis>. </para>
						</note>
						<para> Effettuare una nuova invocazione del test.
							<screen>curl -v -X PUT "http://127.0.0.1:8080/govway/Ente/PetStore/v2/pet?access_token=ACCESS_TOKEN" \
-H "accept: application/json" \
-H "Content-Type: application/json" \
-d '{
        "id": 3,
        "category": { "id": 22, "name": "dog" },
        "name": "doggie",
        "photoUrls": [ "http://image/dog.jpg" ],
        "tags": [ { "id": 23, "name": "white" } ],
        "status": "available"
}'</screen>
						</para>
						<para> L'esito dell'aggiornamento termina stavolta con successo con un
							codice http 200 e una risposta json equivalente alla richiesta. </para>
					</listitem>

				</itemizedlist>

			</sect3>

			<sect3 id="controlloAccesso_token_autorizzazione_claims">
				<title>Autorizzazione sui Claims</title>
				<para> Oltre ad una autorizzazione sugli scope, descritta nello scenario <xref
						linkend="controlloAccesso_token_autorizzazione_scope"/>, GovWay può essere
					configurato per verificare ulteriori claims ottenuti tramite la validazione
					dell'access token. La validazione che verrà descritta in questa sezione consiste
					in una validazione semplice la cui logica si basa sulla semplice constatazione
					che uno o più claim siano stati riscontrati all'interno del token e possiedano
					il valore atteso. Per validazione più complesse si rimanda all'utilizzo di una
					policy XACML descritta nello scenario <xref
						linkend="controlloAccesso_token_xacml"/>. </para>
				<para> Per simulare lo scenario utilizzeremo sempre il servizio
						<emphasis>Playground</emphasis> e l'<emphasis>Authorization Server di
						Google</emphasis> descritto nella precedente sezione <xref
						linkend="controlloAccesso_token_introspection"/>. </para>
				<para> Verrà configurato GovWay al fine di effettuare le seguenti verifiche
					all'interno del token: <itemizedlist>
						<listitem>
							<para><emphasis>Audience</emphasis> (claim 'aud'): contenga
								l'identificativo dell'applicazione <emphasis>Playground</emphasis>
								come destinatario del token</para>
						</listitem>
						<listitem>
							<para><emphasis>Applicazione Client</emphasis> (claim 'azp'):
								controlleremo che il client appartenga ad uno delle applicazioni
								conosciute. Nell'elenco, inseriremo l'identificativo di
									<emphasis>Playground</emphasis> in modo da completare con
								successo la verifica.</para>
						</listitem>
					</itemizedlist>
				</para>

				<figure id="oauth_scenarioClaim">
					<title>Scenario OAuth con autorizzazione sui Claims</title>
					<mediaobject>
						<imageobject>
							<imagedata width="90%" fileref="FIGURE_OUT/oauth_scenario_claim.pdf"/>
						</imageobject>
						<imageobject>
							<imagedata width="90%" fileref="FIGURE_OUT/oauth_scenario_claim.jpg"/>
						</imageobject>
					</mediaobject>
				</figure>

				<itemizedlist>

					<listitem>
						<para><emphasis role="strong">Configurazione Controllo degli
								Accessi</emphasis></para>
						<para> Accedere alla sezione <emphasis>'Erogazioni'</emphasis> e selezionare
							l'API precedentemente registrata <emphasis>'PetStore v2'</emphasis>.
							Dopodichè accedere, dal dettaglio dell'erogazione, alla sezione
								<emphasis>'Configurazione'</emphasis> dove vengono visualizzate le
							funzionalità attive. Cliccare sulla voce presente nella colonna
								'<emphasis>Controllo Accessi</emphasis>' e procedere con la seguente
							configurazione all'interno della sezione <emphasis>'Gestione
								Token'</emphasis>: <itemizedlist>
								<listitem>
									<para><emphasis>Stato</emphasis>: abilitato</para>
								</listitem>
								<listitem>
									<para><emphasis>Policy</emphasis>: Google</para>
								</listitem>
								<listitem>
									<para><emphasis>Validazione JWT</emphasis>: disabilitato</para>
								</listitem>
								<listitem>
									<para><emphasis>Introspection</emphasis>: abilitato</para>
								</listitem>
								<listitem>
									<para><emphasis>User Info</emphasis>: disabilitato</para>
								</listitem>
								<listitem>
									<para><emphasis>Token Forward</emphasis>: abilitato</para>
								</listitem>
							</itemizedlist> Procedere inoltre con la seguente configurazione
							all'interno della sezione <emphasis>'Autorizzazione'</emphasis>: <itemizedlist>
								<listitem>
									<para><emphasis>Autorizzazione - Stato</emphasis>:
										abilitato</para>
								</listitem>
								<listitem>
									<para><emphasis>Autorizzazione per Token Claims -
											Stato</emphasis>: abilitato</para>
								</listitem>
								<listitem>
									<para><emphasis>Claims</emphasis>, configuriamo l'identificativo
										dell'applicazione Playground come valore atteso per il claim
										'aud', mentre forniamo una lista di valori tra i quali non è
										presente l'applicazione Playground per il claim 'azp': <note>
											<title>Per conoscere l'identificativo dell'applicazione
												Playground</title>
											<para> E' possibile vedere una precedente transazione
												terminata con successo per conoscere l'esatto valore
												associato all'applicazione
												<emphasis>Playground</emphasis> (es. <xref
												linkend="apiGateway_oauth_introspection_ok_tokeInfo"
												/>). </para>
										</note>
										<itemizedlist>
											<listitem>
												<para>aud=407408718192.apps.googleusercontent.com</para>
											</listitem>
											<listitem>
												<para>azp=client1, client2</para>
											</listitem>
										</itemizedlist>
									</para>
								</listitem>
							</itemizedlist> Effettuata la configurazione salvarla cliccando sul
							pulsante 'Salva'. <figure
								id="apiGateway_oauth_claim_config_controlloAccessi">
								<title>Configurazione OAuth2 - Autorizzazione</title>
								<mediaobject>
									<imageobject>
										<imagedata width="40%"
											fileref="FIGURE_OUT/oauthAutorizzazioneClaimConfigControlloAccessi.pdf"
										/>
									</imageobject>
									<imageobject>
										<imagedata width="40%"
											fileref="FIGURE_OUT/oauthAutorizzazioneClaimConfigControlloAccessi.png"
										/>
									</imageobject>
								</mediaobject>
							</figure>
						</para>
					</listitem>

					<listitem>
						<para>
							<emphasis role="strong">Invocazione API</emphasis>
						</para>
						<note>
							<title>Reset Cache delle Configurazioni prima di un nuovo test</title>
							<para> Le configurazioni accedute da GovWay vengono mantenute in una
								cache dopo il primo accesso per 2 ore, è quindi necessario forzare
								un reset della cache. Per farlo accedere alla sezione
									<emphasis>'Strumenti' - 'Runtime'</emphasis> e selezionare la
								voce <emphasis>'ResetAllCaches'</emphasis>. </para>
						</note>
						<para> Per effettuare il test utilizzare il token ottenuto come descritto
							nella sezione <xref linkend="controlloAccesso_token_introspection"/>.
							<screen>curl -v -X PUT "http://127.0.0.1:8080/govway/Ente/PetStore/v2/pet?access_token=ACCESS_TOKEN" \
-H "accept: application/json" \
-H "Content-Type: application/json" \
-d '{
        "id": 3,
        "category": { "id": 22, "name": "dog" },
        "name": "doggie",
        "photoUrls": [ "http://image/dog.jpg" ],
        "tags": [ { "id": 23, "name": "white" } ],
        "status": "available"
}'</screen>
						</para>
						<para> L'esito dell'aggiornamento termina con un codice di errore http 403 e
							una risposta problem+json che riporta la motivazione:
							<screen>HTTP/1.1 403 Forbidden
WWW-Authenticate: Bearer realm="Google", error="insufficient_scope", error_description="The request requires higher privileges than provided by the access token"
Content-Type: application/problem+json
Transfer-Encoding: chunked
Server: GovWay
GovWay-Transaction-ID: 6c13b9ac-3d60-45a6-9130-297a4d832824

{
	"type":"https://httpstatuses.com/403",
	"title":"Forbidden",
	"status":403,
	"detail":"La richiesta presenta un token non sufficente per fruire del servizio richiesto",
	"govway_status":"protocol:GOVWAY-1368"
}</screen>
						</para>
					</listitem>
					<listitem>
						<para>
							<emphasis role="strong">Consultazione Tracce in errore</emphasis>
						</para>
						<para>Attraverso la console <emphasis>govwayMonitor</emphasis> è possibile
							consultare lo storico delle transazioni che sono transitate nel gateway.
							Dalla figura <xref linkend="apiGateway_oauth_claim_error"/> si può
							vedere come le transazioni generate dopo la configurazione sopra
							indicata sono terminate con errore con esito <emphasis>Autorizzazione
								Negata</emphasis>. <figure id="apiGateway_oauth_claim_error">
								<title>Tracce delle invocazioni terminate con errore 'Autorizzazione
									Negata'</title>
								<mediaobject>
									<imageobject>
										<imagedata width="70%"
											fileref="FIGURE_OUT/oauthConsoltazioneStoricoTransazioniErroreClaim.pdf"
										/>
									</imageobject>
									<imageobject>
										<imagedata width="70%"
											fileref="FIGURE_OUT/oauthConsoltazioneStoricoTransazioniErroreClaim.png"
										/>
									</imageobject>
								</mediaobject>
							</figure>
						</para>
						<para>Accedendo al dettaglio di una transazione terminata in errore, e
							visualizzandone i diagnostici è possibile comprendere l'errore che come
							atteso risulta essere un valore sconosciuto per quanto concerne il claim
							'azp'.</para>
						<figure id="apiGateway_oauth_claim_diagnostici_ko">
							<title>Diagnostici di una invocazione terminata con errore</title>
							<mediaobject>
								<imageobject>
									<imagedata width="60%"
										fileref="FIGURE_OUT/oauthConsoltazioneStoricoTransazioniErroreClaim_diagnostici.pdf"
									/>
								</imageobject>
								<imageobject>
									<imagedata width="60%"
										fileref="FIGURE_OUT/oauthConsoltazioneStoricoTransazioniErroreClaim_diagnostici.png"
									/>
								</imageobject>
							</mediaobject>
						</figure>

					</listitem>

					<listitem>
						<para><emphasis role="strong">Registrazione ClientId corretto in Controllo
								degli Accessi</emphasis></para>
						<para> Tramite la <emphasis>govwayConsole</emphasis> accedere nuovamente
							alla maschera di configurazione '<emphasis>Controllo Accessi</emphasis>'
							dell'API <emphasis>'PetStore v2'</emphasis>; all'interno della sezione
								<emphasis>'Autorizzare'</emphasis> modificare il valore del claim
							'azp' aggiungendo l'applicazione <emphasis>Playground</emphasis>: <itemizedlist>
								<listitem>
									<para>aud=407408718192.apps.googleusercontent.com</para>
								</listitem>
								<listitem>
									<para>azp=client1, client2,
										407408718192.apps.googleusercontent.com</para>
								</listitem>
							</itemizedlist>. <figure id="apiGateway_oauth_claim_config2">
								<title>Configurazione OAuth2 - Autorizzazione dei claims
									corretta</title>
								<mediaobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/oauthAutorizzazioneConfigClaim2red.pdf"
										/>
									</imageobject>
									<imageobject>
										<imagedata width="50%"
											fileref="FIGURE_OUT/oauthAutorizzazioneConfigClaim2red.png"
										/>
									</imageobject>
								</mediaobject>
							</figure>
						</para>
					</listitem>

					<listitem>
						<para>
							<emphasis role="strong">Nuova invocazione API</emphasis>
						</para>
						<note>
							<title>Reset Cache delle Configurazioni prima di un nuovo test</title>
							<para> Effettuare il reset della cache accedendo alla sezione
									<emphasis>'Strumenti' - 'Runtime'</emphasis> e selezionare la
								voce <emphasis>'ResetAllCaches'</emphasis>. </para>
						</note>
						<para> Effettuare una nuova invocazione del test.
							<screen>curl -v -X PUT "http://127.0.0.1:8080/govway/Ente/PetStore/v2/pet?access_token=ACCESS_TOKEN" \
-H "accept: application/json" \
-H "Content-Type: application/json" \
-d '{
        "id": 3,
        "category": { "id": 22, "name": "dog" },
        "name": "doggie",
        "photoUrls": [ "http://image/dog.jpg" ],
        "tags": [ { "id": 23, "name": "white" } ],
        "status": "available"
}'</screen>
						</para>
						<para> L'esito dell'aggiornamento termina stavolta con successo con un
							codice http 200 e una risposta json equivalente alla richiesta. </para>
					</listitem>

				</itemizedlist>

			</sect3>

			<sect3 id="controlloAccesso_token_xacml">
				<title>Autorizzazione XACML</title>
				<para> GovWay può essere configurato per effettuare verifiche, dei claims ottenuti
					tramite la validazione dell'access token, più complesse rispetto a quelle
					descritte nei precedenti paragrafi. Per farlo si deve utilizzare una policy
					XACML. </para>
				<para> Per simulare lo scenario utilizzeremo sempre il servizio
						<emphasis>Playground</emphasis> e l'<emphasis>Authorization Server di
						Google</emphasis> descritto nella precedente sezione <xref
						linkend="controlloAccesso_token_introspection"/>. </para>
				<para> Per l'autorizzazione verrà caricata su GovWay una XACML Policy, di seguito
					descritta, che non possiede una vera logica autorizzativa ma serve solo a titolo
					di esempio per descrivere la funzionalità. </para>

				<figure id="oauth_scenarioXACMLPolicy">
					<title>Scenario OAuth con autorizzazione XACMLPoliy</title>
					<mediaobject>
						<imageobject>
							<imagedata width="90%" fileref="FIGURE_OUT/oauth_scenario_xacml.pdf"/>
						</imageobject>
						<imageobject>
							<imagedata width="90%" fileref="FIGURE_OUT/oauth_scenario_xacml.png"/>
						</imageobject>
					</mediaobject>
				</figure>

				<para>In fase di autorizzazione, il gateway costruisce una XACMLRequest contenente
					tutti i parametri della richiesta, comprese le informazioni relative al
					chiamante (credenziali ed eventuali ruoli) e le informazioni presenti nel token.
					Nella tabella seguente vengono forniti i dettagli sui nomi dei parametri.
						<informaltable id="xacmlRequestParams">
						<tgroup align="left" cols="2" colsep="1" rowsep="1">
							<colspec colname="c1"/>
							<colspec colname="c2"/>
							<thead>
								<row>
									<entry>Nome</entry>
									<entry>Descrizione</entry>
								</row>
							</thead>
							<tbody>
								<row>
									<entry align="left" nameend="c2" namest="c1">
										<emphasis>Sezione 'Action'</emphasis>
									</entry>
								</row>
								<row>
									<entry>org:govway:action:token:audience</entry>
									<entry>Destinatario del token</entry>
								</row>
								<row>
									<entry>org:govway:action:token:scope</entry>
									<entry>Lista di scopes</entry>
								</row>
								<row>
									<entry>org:govway:action:token:jwt:claim:&lt;nome&gt;=&lt;valore&gt;</entry>
									<entry>Tutti i claims presenti nel jwt validato</entry>
								</row>
								<row>
									<entry>org:govway:action:token:introspection:claim:&lt;nome&gt;=&lt;valore&gt;</entry>
									<entry>Tutti i claims presenti nella risposta del servizio di
										introspection</entry>
								</row>
								<row>
									<entry>org:govway:action:provider</entry>
									<entry>Indica il soggetto erogatore del servizio</entry>
								</row>
								<row>
									<entry>org:govway:action:service</entry>
									<entry>Indica il servizio nel formato tipo/nome</entry>
								</row>
								<row>
									<entry>org:govway:action:action</entry>
									<entry>Nome dell'operazione del servizio invocata</entry>
								</row>
								<row>
									<entry>org:govway:action:url</entry>
									<entry>Url di invocazione utilizzata dal mittente</entry>
								</row>
								<row>
									<entry>org:govway:action:url:parameter:NOME_PARAM</entry>
									<entry>Tutti i parametri presenti nell'url di invocazione
										saranno inseriti nella XACMLRequest con questo
										formato</entry>
								</row>
								<row>
									<entry>org:govway:action:transport:header:NOME_HDR</entry>
									<entry>Tutti gli header http presenti nell'url di invocazione
										saranno inseriti nella XACMLRequest con questo
										formato</entry>
								</row>
								<row>
									<entry>org:govway:action:soapAction</entry>
									<entry>Valore della SOAPAction</entry>
								</row>
								<row>
									<entry>org:govway:action:gwService</entry>
									<entry>Ruolo della transazione (inbound/outbound)</entry>
								</row>
								<row>
									<entry>org:govway:action:protocol</entry>
									<entry>Profilo di utilizzo associata al servizio richiesto (es.
										spcoop)</entry>
								</row>
								<row>
									<entry align="left" nameend="c2" namest="c1">
										<emphasis>Sezione 'Subject'</emphasis>
									</entry>
								</row>
								<row>
									<entry>org:govway:subject:token:issuer</entry>
									<entry>Issuer del token</entry>
								</row>
								<row>
									<entry>org:govway:subject:token:subject</entry>
									<entry>Subject del token</entry>
								</row>
								<row>
									<entry>org:govway:subject:token:username</entry>
									<entry>Username dell'utente cui è associato il token</entry>
								</row>
								<row>
									<entry>org:govway:subject:token:clientId</entry>
									<entry>Identificativo del client che ha negoziato il
										token</entry>
								</row>
								<row>
									<entry>org:govway:subject:token:userInfo:fullName</entry>
									<entry>Nome completo dell'utente cui è associato il
										token</entry>
								</row>
								<row>
									<entry>org:govway:subject:token:userInfo:firstName</entry>
									<entry>Nome dell'utente cui è associato il token</entry>
								</row>
								<row>
									<entry>org:govway:subject:token:userInfo:middleName</entry>
									<entry>Secondo nome (o nomi aggiuntivi) dell'utente cui è
										associato il token</entry>
								</row>
								<row>
									<entry>org:govway:subject:token:userInfo:familyName</entry>
									<entry>Cognome dell'utente cui è associato il token</entry>
								</row>
								<row>
									<entry>org:govway:subject:token:userInfo:eMail</entry>
									<entry>Email dell'utente cui è associato il token</entry>
								</row>
								<row>
									<entry>org:govway:subject:token:userInfo:claim:&lt;nome&gt;=&lt;valore&gt;</entry>
									<entry>Tutti i claims presenti nella risposta del servizio di
										UserInfo</entry>
								</row>
								<row>
									<entry>org:govway:subject:organization</entry>
									<entry>Indica il soggetto fruitore</entry>
								</row>
								<row>
									<entry>org:govway:subject:client</entry>
									<entry>Identificativo del servizio applicativo client</entry>
								</row>
								<row>
									<entry>org:govway:subject:credential</entry>
									<entry>Rappresenta la credenziale di accesso (username, subject
										o il principal) utilizzata dal client per richiedere il
										servizio</entry>
								</row>
								<row>
									<entry>org:govway:subject:role</entry>
									<entry>Elenco dei ruoli che possiede il client che ha richiesto
										il servizio</entry>
								</row>
							</tbody>
						</tgroup>
					</informaltable>
				</para>
				<para> Di seguito un esempio di XACMLPolicy che traduce in policy l'esempio
					descritto nella precedente sezione <xref
						linkend="controlloAccesso_token_autorizzazione_claims"/>. La verifica che
					andiamo a definire è la seguente: <itemizedlist>
						<listitem>
							<para><emphasis>Audience</emphasis> (claim 'aud'): contenga
								l'identificativo dell'applicazione <emphasis>Playground</emphasis>
								come destinatario del token</para>
						</listitem>
						<listitem>
							<para><emphasis>Applicazione Client</emphasis> (claim 'azp'):
								controlleremo che il client appartenga ad uno delle applicazioni
								conosciute. Nell'elenco, non inseriremo immediatamente
								l'identificativo di <emphasis>Playground</emphasis> in modo che
								l'autorizzazione fallisca in un primo test. </para>
						</listitem>
					</itemizedlist>
					<note>
						<title>Per conoscere l'identificativo dell'applicazione Playground</title>
						<para> E' possibile vedere una precedente transazione terminata con successo
							per conoscere l'esatto valore associato all'applicazione
								<emphasis>Playground</emphasis> (es. <xref
								linkend="apiGateway_oauth_introspection_ok_tokeInfo"/>). </para>
					</note>
					<screen>
&lt;Policy PolicyId="Policy"
	RuleCombiningAlgId="urn:oasis:names:tc:xacml:1.0:rule-combining-algorithm:permit-overrides"
	xmlns="urn:oasis:names:tc:xacml:2.0:policy:schema:os" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="urn:oasis:names:tc:xacml:2.0:policy:schema:os http://docs.oasis-open.org/xacml/2.0/access_control-xacml-2.0-policy-schema-os.xsd">
	&lt;Target />
	&lt;Rule Effect="Permit" RuleId="ok">
		&lt;Condition>
			&lt;Apply FunctionId="urn:oasis:names:tc:xacml:1.0:function:and">

				&lt;Apply
					FunctionId="urn:oasis:names:tc:xacml:1.0:function:string-at-least-one-member-of">
					&lt;<emphasis>ActionAttributeDesignator</emphasis>
						AttributeId="<emphasis role="strong">org:govway:action:token:audience</emphasis>"
						DataType="http://www.w3.org/2001/XMLSchema#string" />
					&lt;Apply FunctionId="urn:oasis:names:tc:xacml:1.0:function:string-bag">
						&lt;AttributeValue DataType="http://www.w3.org/2001/XMLSchema#string"><emphasis role="strong">407408718192.apps.googleusercontent.com</emphasis>&lt;/AttributeValue>
					&lt;/Apply>
				&lt;/Apply>

				&lt;Apply
					FunctionId="urn:oasis:names:tc:xacml:1.0:function:string-at-least-one-member-of">
					&lt;<emphasis>SubjectAttributeDesignator</emphasis>
						AttributeId="<emphasis role="strong">org:govway:subject:token:clientId</emphasis>"
						DataType="http://www.w3.org/2001/XMLSchema#string" />
					&lt;Apply FunctionId="urn:oasis:names:tc:xacml:1.0:function:string-bag">
						&lt;AttributeValue DataType="http://www.w3.org/2001/XMLSchema#string"><emphasis role="strong">client1</emphasis>&lt;/AttributeValue>
						&lt;AttributeValue DataType="http://www.w3.org/2001/XMLSchema#string"><emphasis role="strong">client2</emphasis>&lt;/AttributeValue>
					&lt;/Apply>
				&lt;/Apply>

			&lt;/Apply>
		&lt;/Condition>
	&lt;/Rule>
	&lt;Rule Effect="Deny" RuleId="ko" />
&lt;/Policy>
		</screen>
				</para>

				<itemizedlist>

					<listitem>
						<para><emphasis role="strong">Configurazione Controllo degli
								Accessi</emphasis></para>
						<para> Accedere alla sezione <emphasis>'Erogazioni'</emphasis> e selezionare
							l'API precedentemente registrata <emphasis>'PetStore v2'</emphasis>.
							Dopodichè accedere, dal dettaglio dell'erogazione, alla sezione
								<emphasis>'Configurazione'</emphasis> dove vengono visualizzate le
							funzionalità attive. Cliccare sulla voce presente nella colonna
								'<emphasis>Controllo Accessi</emphasis>' e procedere con la seguente
							configurazione all'interno della sezione <emphasis>'Gestione
								Token'</emphasis>: <itemizedlist>
								<listitem>
									<para><emphasis>Stato</emphasis>: abilitato</para>
								</listitem>
								<listitem>
									<para><emphasis>Policy</emphasis>: Google</para>
								</listitem>
								<listitem>
									<para><emphasis>Validazione JWT</emphasis>: disabilitato</para>
								</listitem>
								<listitem>
									<para><emphasis>Introspection</emphasis>: abilitato</para>
								</listitem>
								<listitem>
									<para><emphasis>User Info</emphasis>: disabilitato</para>
								</listitem>
								<listitem>
									<para><emphasis>Token Forward</emphasis>: abilitato</para>
								</listitem>
							</itemizedlist> Procedere inoltre con la seguente configurazione
							all'interno della sezione <emphasis>'Autorizzazione'</emphasis>: <itemizedlist>
								<listitem>
									<para><emphasis>Autorizzazione - Stato</emphasis>:
										xacml-Policy</para>
								</listitem>
								<listitem>
									<para><emphasis>Policy</emphasis>: caricare la xacml policy
										descritta precedentemente</para>
								</listitem>
							</itemizedlist> Effettuata la configurazione salvarla cliccando sul
							pulsante 'Salva'. <figure
								id="apiGateway_oauth_xacml_config_controlloAccessi">
								<title>Configurazione OAuth2 - Autorizzazione XACML Policy</title>
								<mediaobject>
									<imageobject>
										<imagedata width="40%"
											fileref="FIGURE_OUT/oauthAutorizzazioneXACMLConfigControlloAccessi.pdf"
										/>
									</imageobject>
									<imageobject>
										<imagedata width="40%"
											fileref="FIGURE_OUT/oauthAutorizzazioneXACMLConfigControlloAccessi.png"
										/>
									</imageobject>
								</mediaobject>
							</figure>
						</para>
					</listitem>

					<listitem>
						<para>
							<emphasis role="strong">Invocazione API</emphasis>
						</para>
						<note>
							<title>Reset Cache delle Configurazioni prima di un nuovo test</title>
							<para> Le configurazioni accedute da GovWay vengono mantenute in una
								cache dopo il primo accesso per 2 ore, è quindi necessario forzare
								un reset della cache. Per farlo accedere alla sezione
									<emphasis>'Strumenti' - 'Runtime'</emphasis> e selezionare la
								voce <emphasis>'ResetAllCaches'</emphasis>. </para>
						</note>
						<para> Per effettuare il test utilizzare il token ottenuto come descritto
							nella sezione <xref linkend="controlloAccesso_token_introspection"/>.
							<screen>curl -v -X PUT "http://127.0.0.1:8080/govway/Ente/PetStore/v2/pet?access_token=ACCESS_TOKEN" \
-H "accept: application/json" \
-H "Content-Type: application/json" \
-d '{
        "id": 3,
        "category": { "id": 22, "name": "dog" },
        "name": "doggie",
        "photoUrls": [ "http://image/dog.jpg" ],
        "tags": [ { "id": 23, "name": "white" } ],
        "status": "available"
}'</screen>
						</para>
						<para> L'esito dell'aggiornamento termina con un codice di errore http 403 e
							una risposta problem+json che riporta la motivazione:
							<screen>HTTP/1.1 403 Forbidden
Content-Type: application/problem+json
Transfer-Encoding: chunked
Server: GovWay
GovWay-Transaction-ID: 6c13b9ac-3d60-45a6-9130-297a4d832824

{
	"type":"https://httpstatuses.com/403",
	"title":"Forbidden",
	"status":403,
	"detail":"Il mittente non è autorizzato ad invocare il servizio gw/PetStore (versione:2) erogato da gw/Ente (result-1 DENY code:urn:oasis:names:tc:xacml:1.0:status:ok)",
	"govway_status":"protocol:GOVWAY-1352"
}</screen>
						</para>
					</listitem>
					<listitem>
						<para>
							<emphasis role="strong">Consultazione Tracce in errore</emphasis>
						</para>
						<para>Attraverso la console <emphasis>govwayMonitor</emphasis> è possibile
							consultare lo storico delle transazioni che sono transitate nel gateway.
							Dalla figura <xref linkend="apiGateway_oauth_xacml_error"/> si può
							vedere come le transazioni generate dopo la configurazione sopra
							indicata sono terminate con errore con esito <emphasis>Autorizzazione
								Negata</emphasis>. <figure id="apiGateway_oauth_xacml_error">
								<title>Tracce delle invocazioni terminate con errore 'Autorizzazione
									Negata'</title>
								<mediaobject>
									<imageobject>
										<imagedata width="70%"
											fileref="FIGURE_OUT/oauthConsoltazioneStoricoTransazioniErroreXACML.pdf"
										/>
									</imageobject>
									<imageobject>
										<imagedata width="70%"
											fileref="FIGURE_OUT/oauthConsoltazioneStoricoTransazioniErroreXACML.png"
										/>
									</imageobject>
								</mediaobject>
							</figure>
						</para>
						<para>Accedendo al dettaglio di una transazione terminata in errore, e
							visualizzandone i diagnostici è possibile comprendere che l'errore è
							dovuto ad una decisione 'deny' ottenuta dopo la valutazione della
							policy: <emphasis>'(result-1 DENY
								code:urn:oasis:names:tc:xacml:1.0:status:ok)'</emphasis>.</para>
						<figure id="apiGateway_oauth_xacml_diagnostici_ko">
							<title>Diagnostici di una invocazione terminata con errore</title>
							<mediaobject>
								<imageobject>
									<imagedata width="60%"
										fileref="FIGURE_OUT/oauthConsoltazioneStoricoTransazioniErroreXACML_diagnostici.pdf"
									/>
								</imageobject>
								<imageobject>
									<imagedata width="60%"
										fileref="FIGURE_OUT/oauthConsoltazioneStoricoTransazioniErroreXACML_diagnostici.png"
									/>
								</imageobject>
							</mediaobject>
						</figure>

					</listitem>

					<listitem>
						<para><emphasis role="strong">Registrazione ClientId corretto nella
								XACMLPolicy</emphasis></para>
						<para> Di seguito un esempio di XACMLPolicy nella quale tra i valori
							consentiti per l'applicazione client viene aggiunto l'identificativo di
								<emphasis>Playground</emphasis> in modo che l'autorizzazione termini
							con successo.
							<screen>
&lt;Policy PolicyId="Policy"
	RuleCombiningAlgId="urn:oasis:names:tc:xacml:1.0:rule-combining-algorithm:permit-overrides"
	xmlns="urn:oasis:names:tc:xacml:2.0:policy:schema:os" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="urn:oasis:names:tc:xacml:2.0:policy:schema:os http://docs.oasis-open.org/xacml/2.0/access_control-xacml-2.0-policy-schema-os.xsd">
	&lt;Target />
	&lt;Rule Effect="Permit" RuleId="ok">
		&lt;Condition>
			&lt;Apply FunctionId="urn:oasis:names:tc:xacml:1.0:function:and">

				&lt;Apply
					FunctionId="urn:oasis:names:tc:xacml:1.0:function:string-at-least-one-member-of">
					&lt;<emphasis>ActionAttributeDesignator</emphasis>
						AttributeId="<emphasis role="strong">org:govway:action:token:audience</emphasis>"
						DataType="http://www.w3.org/2001/XMLSchema#string" />
					&lt;Apply FunctionId="urn:oasis:names:tc:xacml:1.0:function:string-bag">
						&lt;AttributeValue DataType="http://www.w3.org/2001/XMLSchema#string"><emphasis role="strong">407408718192.apps.googleusercontent.com</emphasis>&lt;/AttributeValue>
					&lt;/Apply>
				&lt;/Apply>

				&lt;Apply
					FunctionId="urn:oasis:names:tc:xacml:1.0:function:string-at-least-one-member-of">
					&lt;<emphasis>SubjectAttributeDesignator</emphasis>
						AttributeId="<emphasis role="strong">org:govway:subject:token:clientId</emphasis>"
						DataType="http://www.w3.org/2001/XMLSchema#string" />
					&lt;Apply FunctionId="urn:oasis:names:tc:xacml:1.0:function:string-bag">
						&lt;AttributeValue DataType="http://www.w3.org/2001/XMLSchema#string"><emphasis role="strong">client1</emphasis>&lt;/AttributeValue>
						&lt;AttributeValue DataType="http://www.w3.org/2001/XMLSchema#string"><emphasis role="strong">client2</emphasis>&lt;/AttributeValue>
						&lt;AttributeValue DataType="http://www.w3.org/2001/XMLSchema#string"><emphasis role="strong">407408718192.apps.googleusercontent.com</emphasis>&lt;/AttributeValue>
					&lt;/Apply>
				&lt;/Apply>

			&lt;/Apply>
		&lt;/Condition>
	&lt;/Rule>
	&lt;Rule Effect="Deny" RuleId="ko" />
&lt;/Policy>
		</screen>
						</para>
					</listitem>

					<listitem>
						<para><emphasis role="strong">Aggiornamento XACMLPolicy in Controllo degli
								Accessi</emphasis></para>
						<para> Tramite la <emphasis>govwayConsole</emphasis> accedere nuovamente
							alla maschera di configurazione '<emphasis>Controllo Accessi</emphasis>'
							dell'API <emphasis>'PetStore v2'</emphasis>; all'interno della sezione
								<emphasis>'Autorizzare'</emphasis> caricare la policy aggiornata.
						</para>
					</listitem>

					<listitem>
						<para>
							<emphasis role="strong">Nuova invocazione API</emphasis>
						</para>
						<note>
							<title>Reset Cache delle Configurazioni prima di un nuovo test</title>
							<para> Effettuare il reset della cache accedendo alla sezione
									<emphasis>'Strumenti' - 'Runtime'</emphasis> e selezionare la
								voce <emphasis>'ResetAllCaches'</emphasis>. </para>
						</note>
						<para> Effettuare una nuova invocazione del test.
							<screen>curl -v -X PUT "http://127.0.0.1:8080/govway/Ente/PetStore/v2/pet?access_token=ACCESS_TOKEN" \
-H "accept: application/json" \
-H "Content-Type: application/json" \
-d '{
        "id": 3,
        "category": { "id": 22, "name": "dog" },
        "name": "doggie",
        "photoUrls": [ "http://image/dog.jpg" ],
        "tags": [ { "id": 23, "name": "white" } ],
        "status": "available"
}'</screen>
						</para>
						<para> L'esito dell'aggiornamento termina stavolta con successo con un
							codice http 200 e una risposta json equivalente alla richiesta. </para>
					</listitem>

				</itemizedlist>
			</sect3>

			<sect3 id="controlloAccesso_token_forward">
				<title>Token Forward</title>
				<para>Tutte le configurazioni descritte nei precedente paragrafi indicavano di
					abilitare la funzionalità <emphasis>'Token Forward'</emphasis> all'interno della
					sezione <emphasis>'Gestione Token'</emphasis> (vedi ad es. <xref
						linkend="apiGateway_oauth_introspection_config"/>). Tale configurazione fa
					sì che GovWay inoltri all'applicativo interno al dominio (nel nostro esempio il
					servizio <emphasis>PetStore</emphasis>) le informazioni inerenti il token
					ricevuto sotto forma di header http. </para>
				<para> Per vedere quali header vengono effettivamente prodotti possiamo utilizzare
					la funzionalità <emphasis>'Registrazione Messaggi'</emphasis> descritta nel
					dettaglio nella sezione <xref linkend="dump"/>. Accedere alla sezione
						<emphasis>'Erogazioni'</emphasis> e selezionare l'API precedentemente
					registrata <emphasis>'PetStore v2'</emphasis>. Dopodichè accedere, dal dettaglio
					dell'erogazione, alla sezione <emphasis>'Configurazione'</emphasis> dove vengono
					visualizzate le funzionalità attive. Per abilitare la registrazione degli header
					cliccare sulla voce presente nella colonna '<emphasis>Registrazione
						Messaggi</emphasis>' e procedere con la seguente configurazione. <itemizedlist>
						<listitem>
							<para><emphasis>'Generale - Stato'</emphasis>: ridefinito</para>
						</listitem>
						<listitem>
							<para><emphasis>'Richiesta - Stato'</emphasis>: abilitato</para>
						</listitem>
						<listitem>
							<para><emphasis>'Richiesta - Ingresso'</emphasis>: disabilitare tutte le
								voci</para>
						</listitem>
						<listitem>
							<para><emphasis>'Richiesta - Uscita'</emphasis>: abilitare solo la voce
								relativa agli header</para>
						</listitem>
						<listitem>
							<para><emphasis>'Risposta - Stato'</emphasis>: disabilitato</para>
						</listitem>
					</itemizedlist> Effettuata la configurazione salvarla cliccando sul pulsante
					'Salva'. <figure id="apiGateway_oauth_forward_dump_config">
						<title>Configurazione Registrazione Messaggi per visualizzare Header
							HTTP</title>
						<mediaobject>
							<imageobject>
								<imagedata width="50%"
									fileref="FIGURE_OUT/oauthConfigurazioneDump.pdf"/>
							</imageobject>
							<imageobject>
								<imagedata width="50%"
									fileref="FIGURE_OUT/oauthConfigurazioneDump.png"/>
							</imageobject>
						</mediaobject>
					</figure>
				</para>
				<para> Prima di procedere con una nuova richiesta effettuare il reset della cache
					delle configurazioni accedendo alla sezione <emphasis>'Strumenti' -
						'Runtime'</emphasis> e selezionare la voce
						<emphasis>'ResetAllCaches'</emphasis>. </para>
				<para> Effettuare quindi una nuova invocazione contenente un <emphasis>access
						token</emphasis> valido e successivamente consultare il dettaglio della
					transazione tramite la <emphasis>govWayMonitor</emphasis>. Nel dettaglio sarà
					adesso disponibile la voce <emphasis>'Contenuti Uscita'</emphasis> (<xref
						linkend="apiGateway_oauth_forward_dump_visualizza_header"/>) che permette di
					vedere gli header http prodotti da GovWay (<xref
						linkend="apiGateway_oauth_forward_dump_headers"/>). <figure
						id="apiGateway_oauth_forward_dump_visualizza_header">
						<title>Dettaglio della transazione con contenuti</title>
						<mediaobject>
							<imageobject>
								<imagedata width="50%"
									fileref="FIGURE_OUT/oauthConfigurazioneDumpVisualizzaHeader.pdf"
								/>
							</imageobject>
							<imageobject>
								<imagedata width="50%"
									fileref="FIGURE_OUT/oauthConfigurazioneDumpVisualizzaHeader.png"
								/>
							</imageobject>
						</mediaobject>
					</figure>
					<figure id="apiGateway_oauth_forward_dump_headers">
						<title>Header HTTP prodotti da GovWay contenenti le informazioni sul
							Token</title>
						<mediaobject>
							<imageobject>
								<imagedata width="50%"
									fileref="FIGURE_OUT/oauthConfigurazioneDumpHeaders.pdf"/>
							</imageobject>
							<imageobject>
								<imagedata width="50%"
									fileref="FIGURE_OUT/oauthConfigurazioneDumpHeaders.png"/>
							</imageobject>
						</mediaobject>
					</figure>
				</para>
				<para> Le informazioni, inerenti il token ricevuto, trasmesse sotto forma di header
					http all'applicativo dietro il Gateway, rappresenta la modalità di default di
					GovWay per quanto concerne la Token Policy 'Google'. GovWay supporta anche
					differenti modalità di consegna di tali informazioni che possono essere attivate
					accendendo alla voce del menù <emphasis>'Configurazione - Token
						Policy'</emphasis>, selezionando una policy (es. Google) e accedendo alla
					sezione <emphasis>'Token Forward'</emphasis>. Le modalità si suddividono tra
					inoltro del token originale (<xref
						linkend="apiGateway_oauth_forward_tokenPolicy2"/>) e inoltre delle
					informazioni raccolte durante la validazione del token (<xref
						linkend="apiGateway_oauth_forward_tokenPolicy1"/>). <figure
						id="apiGateway_oauth_forward_tokenPolicy1">
						<title>Modalità di Forward delle Informazioni Raccolte</title>
						<mediaobject>
							<imageobject>
								<imagedata width="50%"
									fileref="FIGURE_OUT/oauthConfigurazioneTokenPolicy1.pdf"/>
							</imageobject>
							<imageobject>
								<imagedata width="50%"
									fileref="FIGURE_OUT/oauthConfigurazioneTokenPolicy1.png"/>
							</imageobject>
						</mediaobject>
					</figure>
					<figure id="apiGateway_oauth_forward_tokenPolicy2">
						<title>Modalità di Forward del Token Originale</title>
						<mediaobject>
							<imageobject>
								<imagedata width="50%"
									fileref="FIGURE_OUT/oauthConfigurazioneTokenPolicy2.pdf"/>
							</imageobject>
							<imageobject>
								<imagedata width="50%"
									fileref="FIGURE_OUT/oauthConfigurazioneTokenPolicy2.png"/>
							</imageobject>
						</mediaobject>
					</figure>
				</para>

				<para> Di seguito vengono descritte le varie modalità di consegna supportate: <itemizedlist>
						<listitem>
							<para><emphasis>Inoltro del token originale</emphasis>: il token
								originale dopo essere stato validato dal gateway viene comunque
								inoltrato all'applicativo. E' possibile configurare la modalità di
								inoltro tra le seguenti opzioni: <itemizedlist>
									<listitem>
										<para>
											<emphasis>Come è stato ricevuto</emphasis>: Il token
											viene inoltrato al destinatario utilizzando lo stesso
											metodo con cui è stato ricevuto dal gateway. </para>
									</listitem>
									<listitem>
										<para>
											<emphasis>RFC 6750 - Bearer Token Usage (Authorization
												Request Header Field)</emphasis>: Il token viene
											inoltrato al destinatario utilizzando l'header
											Authorization presente nella richiesta HTTP. </para>
									</listitem>
									<listitem>
										<para>
											<emphasis>RFC 6750 - Bearer Token Usage (URI Query
												Parameter)</emphasis>: Il token viene inoltrato al
											destinatario tramite parametro access_token della Query
											String. </para>
									</listitem>
									<listitem>
										<para>
											<emphasis>Header HTTP</emphasis>: Il token viene
											inoltrato al destinatario utilizzando un header HTTP il
											cui nome deve essere specificato. </para>
									</listitem>
									<listitem>
										<para>
											<emphasis>Parametro URL</emphasis>: Il token viene
											inoltrato al destinatario utilizzando un parametro della
											Query String il cui nome deve essere specificato.
										</para>
									</listitem>
								</itemizedlist>
							</para>
						</listitem>
						<listitem>
							<para>
								<emphasis>Inoltro delle Informazioni Raccolte</emphasis>: consente
								di veicolare i dati inerenti il token ricevuto tramite una delle
								seguenti modalità: <itemizedlist>
									<listitem>
										<para>
											<emphasis>GovWay Headers</emphasis> (utilizzato nella
											token policy 'Google' delle sezioni precedenti): I dati
											raccolti dal token vengono inseriti nei seguenti header
											HTTP:
											<screen>
GovWay-Token-Issuer
GovWay-Token-Subject
GovWay-Token-Username
GovWay-Token-Audience
GovWay-Token-ClientId
GovWay-Token-IssuedAt
GovWay-Token-Expire
GovWay-Token-NotToBeUsedBefore
GovWay-Token-Scopes
GovWay-Token-FullName
GovWay-Token-FirstName
GovWay-Token-MiddleName
GovWay-Token-FamilyName
GovWay-Token-EMail
</screen>
										</para>
									</listitem>
									<listitem>
										<para>
											<emphasis>GovWay JSON</emphasis>: I dati raccolti dal
											token vengono inseriti in un oggetto JSON, il cui
											JsonSchema è il seguente:
											<screen>
{
    "required" : [ "id" ],
    "properties": {
        "id": {"type": "string"},
        "issuer": {"type": "string"},
	"subject": {"type": "string"},
	"username": {"type": "string"},
	"audience": {"type": "string"},
	"clientId": {"type": "string"},
	"iat": {
            "type": "string",
            "format": "date-time"
        },
	"expire": {
            "type": "string",
            "format": "date-time"
        },
	"expire": {
            "type": "string",
            "format": "date-time"
        },
        "roles": {
            "type": "array",
            "items": {"type": "string"}
        },
        "scope": {
            "type": "array",
            "items": {"type": "string"}
        },
	"userInfo": {
		"type": "object",
		"properties": {
			"fullName": {"type": "string"},
			"firstName": {"type": "string"},
			"middleName": {"type": "string"},
			"familyName": {"type": "string"},
			"email": {"type": "string"},
		},
		"additionalProperties": false
	}
    },
    "additionalProperties": false
}
</screen>
											Il JSON risultante viene inserito nell'Header HTTP
												<emphasis>GovWay-Token</emphasis>. </para>
									</listitem>
									<listitem>
										<para>
											<emphasis>GovWay JWS</emphasis>: I dati raccolti dal
											token vengono inseriti in un oggetto JSON, come
											descritto al punto precedente. In questo caso il token
											JSON viene inserito successivamente in un JWT e quindi
											firmato. Il JWS risultante viene inserito nell'Header
											HTTP <emphasis>GovWay-JWT</emphasis>. </para>
									</listitem>
									<listitem>
										<para>
											<emphasis>JSON</emphasis>: Le informazioni ottenute dai
											servizi di introspection, userinfo o il json estratto
											dal token jwt dopo la validazione, vengono inseriti
											negli header http o proprietà delle url indicati. <note>
												<para>Le informazioni sono esattamente quelle
												recuperate dai servizi originali (o presenti nel
												token originale nel caso di validazione
												jwt).</para>
											</note>
										</para>
									</listitem>
									<listitem>
										<para>
											<emphasis>JWS/JWE</emphasis>: Uguale alla modalità JSON
											con la differenza che negli header http, o nelle
											proprietà delle url, vengono inseriti dei JWT firmati
											(caso JWS) o cifrati (caso JWE) contenenti al loro
											interno il JSON. </para>
									</listitem>
								</itemizedlist>
							</para>
						</listitem>
					</itemizedlist>
				</para>
			</sect3>

			<sect3 id="controlloAccesso_registrazioneAuthServer">
				<title>Registrazione Authorization Server</title>
				<para> Per poter definire politiche di controllo degli accessi basate sui Token è
					necessario creare delle Token Policy da riferire nel <emphasis>'Controllo degli
						Accessi'</emphasis> delle specifiche erogazioni e fruizioni come è stato
					descritto nei precedenti paragrafi (vedi ad es. <xref
						linkend="apiGateway_oauth_introspection_config"/>). </para>
				<para> Ogni Token Policy definisce la configurazione necessaria al Gateway per
					interagire con uno specifico Authorization Server. All'interno di una Token
					Policy vengono definite: <itemizedlist>
						<listitem>
							<para><emphasis>Posizione Token</emphasis>: indica dove il gateway si
								attende di ricevere il token.</para>
						</listitem>
						<listitem>
							<para><emphasis>Validazione JWT</emphasis>: indica se la validazione di
								un token '<emphasis>JWT</emphasis>' (<ulink
									url="https://tools.ietf.org/html/rfc7519">RFC 7519</ulink>) è
								utilizzabile e nel caso tutti i parametri (es. keystore, claim
								parser) necessari a validarlo secondo la specifica JWS (<ulink
									url="https://tools.ietf.org/html/rfc7515"> RFC 7515</ulink>) o
								JWE (<ulink url="https://tools.ietf.org/html/rfc7516">RFC
									7516</ulink>).</para>
						</listitem>
						<listitem>
							<para><emphasis>Token Introspection</emphasis>: indica se la validazione
								di un token tramite il servizio Introspection (definito dalla
								specifica <ulink url="https://tools.ietf.org/html/rfc7662">RFC
									7662</ulink>) è utilizzabile. Poichè tale servizio deve essere
								disponibile sull'<emphasis>Authorization Server</emphasis> devono
								essere forniti i parametri necessari all'invocazione (endpoint,
								configurazione ssl ...).</para>
						</listitem>
						<listitem>
							<para><emphasis>OIDC - UserInfo</emphasis>: le informazioni riguardanti
								ad esempio l'<emphasis>Username</emphasis> e
									l'<emphasis>eMail</emphasis> potrebbero non essere disponibili
								dopo la semplice validazione dell'access token (sia introspection
								che jwt), e per ottenerle è necessario richiedere maggiori
								informazioni sull'utente tramite il servizio <emphasis>OIDC
									UserInfo</emphasis> (definito dalla specifica <ulink
									url="https://openid.net/specs/openid-connect-core-1_0.html#UserInfo"
									>OIDC Connect - UserInfo</ulink>). Anche per questo servizio,
								che deve essere disponibile sull'<emphasis>Authorization
									Server</emphasis>, devono essere forniti i parametri necessari
								alla sua invocazione (endpoint, configurazione ssl ...). </para>
						</listitem>
						<listitem>
							<para><emphasis>Token Forward</emphasis>: definisce come le informazioni
								raccolte durante la validazione del token e/o il token originale
								vengono inoltrate all'applicativo. Per maggiori dettagli vedere la
								sezione <xref linkend="controlloAccesso_token_forward"/></para>
						</listitem>
					</itemizedlist>
				</para>
				<para> Per modificare una Token Policy esistente (es. Google), o crearne di nuove,
					cliccare sul menù nella voce <emphasis>'Configurazione - Token
						Policy'</emphasis> della govwayConsole. Per creare una nuova policy si
					utilizza il pulsante <emphasis>Aggiungi</emphasis> mentre per modificarne una
					esistente si deve cliccare sul nome della Policy. <figure
						id="tokenpolicy-generale-fig">
						<title>Token Policy di esempio: Google (1/2)</title>
						<mediaobject>
							<imageobject>
								<imagedata width="60%"
									fileref="FIGURE_OUT/TokenPolicy-google-parte1.pdf"/>
							</imageobject>
							<imageobject>
								<imagedata width="60%"
									fileref="FIGURE_OUT/TokenPolicy-google-parte1.png"/>
							</imageobject>
						</mediaobject>
					</figure>
					<figure id="tokenpolicy-generale-fig2">
						<title>Token Policy di esempio: Google (2/2)</title>
						<mediaobject>
							<imageobject>
								<imagedata width="60%"
									fileref="FIGURE_OUT/TokenPolicy-google-parte2.pdf"/>
							</imageobject>
							<imageobject>
								<imagedata width="60%"
									fileref="FIGURE_OUT/TokenPolicy-google-parte2.png"/>
							</imageobject>
						</mediaobject>
					</figure>
				</para>
			</sect3>

		</sect2>

		<sect2 id="controlloAccesso_autenticazione">
			<title>Autenticazione</title>
			<para>TODO: Descrizione generica scenario </para>

			<sect3 id="controlloAccesso_autenticazione_basic">
				<title>Autenticazione Http Basic</title>
				<para>TODO </para>
			</sect3>

			<sect3 id="controlloAccesso_autenticazione_ssl">
				<title>Autenticazione Https</title>
				<para>TODO </para>
			</sect3>

			<sect3 id="controlloAccesso_autenticazione_principal">
				<title>Autenticazione Container</title>
				<para>TODO </para>
			</sect3>

		</sect2>

		<sect2 id="controlloAccesso_autorizzazione">
			<title>Autorizzazione</title>
			<para>TODO: Descrizione generica scenario </para>

			<sect3 id="controlloAccesso_autorizzazione_puntuale">
				<title>Autorizzazione Puntuale</title>
				<para>TODO </para>
			</sect3>

			<sect3 id="controlloAccesso_autorizzazione_ruoli">
				<title>Autorizzazione per Ruoli</title>
				<para>TODO </para>
			</sect3>

			<sect3 id="controlloAccesso_autorizzazione_xacml">
				<title>XACML</title>
				<para>TODO </para>
			</sect3>

		</sect2>
	</sect1>

	<sect1 id="rateLimiting">
		<title>Rate Limiting</title>

		<para>TODO: Descrizione generica scenario </para>

		<sect2 id="rateLimiting_numeroRichieste">
			<title>Numero massimo di Richieste</title>
			<para>TODO </para>
		</sect2>

		<sect2 id="rateLimiting_numeroRichiesteConcorrenti">
			<title>Numero massimo di Richieste Concorrenti</title>
			<para>TODO </para>
		</sect2>

		<sect2 id="rateLimiting_bandaOccupata">
			<title>Massima Banda Occupabile</title>
			<para>TODO </para>
		</sect2>

		<sect2 id="rateLimiting_tempoMedioRisposta">
			<title>Tempo Medio di Risposta</title>
			<para>TODO </para>
		</sect2>

		<sect2 id="rateLimiting_numeroFault">
			<title>Numero massimo di Fault Applicativi</title>
			<para>TODO </para>
		</sect2>

	</sect1>

	<sect1 id="validazione">
		<title>Validazione Messaggi</title>

		<para>TODO: Descrizione generica scenario </para>

		<sect2 id="validazione_rest">
			<title>Validazione API REST</title>
			<para>TODO </para>
		</sect2>

		<sect2 id="validazione_soap">
			<title>Validazione API SOAP</title>
			<para>TODO </para>
		</sect2>

	</sect1>

	<sect1 id="responseCaching">
		<title>Caching Risposte</title>

		<para>TODO: Descrizione generica scenario </para>



	</sect1>

	<sect1 id="sicurezza">
		<title>Sicurezza Messaggi</title>

		<para>TODO: Descrizione generica scenario dove si crea sia un mittente che un destinatario a
			scopi di test. </para>

		<sect2 id="sicurezza_soap_signature">
			<title>WSSecurity Signature</title>
			<para>TODO </para>
		</sect2>

		<sect2 id="sicurezza_soap_encrypt">
			<title>WSSecurity Encrypt</title>
			<para>TODO </para>
		</sect2>

		<sect2 id="sicurezza_soap_saml">
			<title>WSSecurity SAML</title>
			<para>TODO </para>
		</sect2>

		<sect2 id="validazione_rest_jws">
			<title>JWT Signature</title>
			<para>TODO </para>
		</sect2>

		<sect2 id="validazione_rest_jwe">
			<title>JWT Encrypt</title>
			<para>TODO </para>
		</sect2>

	</sect1>

	<sect1 id="dump">
		<title>Registrazione Messaggi</title>

		<para>TODO: Descrizione generica scenario </para>



	</sect1>

	<sect1 id="tracciamento">
		<title>Tracciamento</title>

		<para>TODO: Descrizione generica scenario </para>

		<sect2 id="tracciamento_rest">
			<title>Correlazione Applicativa su API REST</title>
			<para>TODO </para>
		</sect2>

		<sect2 id="tracciamento_soap">
			<title>Correlazione Applicativa su API SOAP</title>
			<para>TODO </para>
		</sect2>

		<sect2 id="tracciamento_disabilitato">
			<title>Disattivazione</title>
			<para>TODO </para>
		</sect2>

		<sect2 id="tracciamento_log">
			<title>Livello di Log</title>
			<para>TODO </para>
		</sect2>

	</sect1>

	<sect1 id="mtom">
		<title>MTOM</title>

		<para>TODO: Descrizione generica scenario dove viene simulato l'invio e la ricezione. </para>

		<sect2 id="mtom_packaging">
			<title>Packaging</title>
			<para>TODO </para>
		</sect2>

		<sect2 id="mtom_unpackaging">
			<title>Unpackaging</title>
			<para>TODO </para>
		</sect2>

		<sect2 id="mtom_validaziones">
			<title>Validazione</title>
			<para>TODO </para>
		</sect2>

		<sect2 id="mtom_verifica">
			<title>Verifica</title>
			<para>TODO </para>
		</sect2>

	</sect1>

	<sect1 id="fatturaPA">
		<title>Profilo FatturaPA</title>

		<para>TODO: Descrizione generica </para>

		<sect2 id="sdi_attiva">
			<title>Fatturazione Attiva</title>
			<para>TODO </para>
		</sect2>

		<sect2 id="sdi_passiva">
			<title>Fatturazione Passiva</title>
			<para>TODO </para>
		</sect2>

	</sect1>

	<sect1 id="spcoop">
		<title>Profilo SPCoop</title>

		<para>TODO: Descrizione generica </para>

		<sect2 id="spcoop_oneway">
			<title>Profilo Oneway</title>
			<para>TODO </para>
		</sect2>

		<sect2 id="spcoop_sincrono">
			<title>Profilo Sincrono</title>
			<para>TODO </para>
		</sect2>

		<sect2 id="spcoop_asincrono_simmetrico">
			<title>Profilo Asincrono Simmetrico</title>
			<para>TODO </para>
		</sect2>

		<sect2 id="spcoop_asincrono_asimmetrico">
			<title>Profilo Asincrono Asimmetrico</title>
			<para>TODO </para>
		</sect2>

	</sect1>

	<sect1>
		<title>Analisi Statistica</title>

		<para>TODO: Descrizione generica </para>

		<sect2 id="stats_1">
			<title>Distribuzione Temporale</title>
			<para>TODO </para>
		</sect2>

		<sect2 id="stats_2">
			<title>Distribuzione per Esiti</title>
			<para>TODO </para>
		</sect2>


	</sect1>

</article>
